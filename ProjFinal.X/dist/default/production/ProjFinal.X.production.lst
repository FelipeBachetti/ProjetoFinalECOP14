

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 16:55:36 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F4520 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataCOMRAM
    87  001DA4                     __pidataCOMRAM:
    88                           	callstack 0
    89                           
    90                           ;initializer for main@F2388
    91  001DA4  0000               	dw	0
    92  001DA6  05DC               	dw	1500
    93  001DA8  0BB8               	dw	3000
    94  001DAA  1194               	dw	4500
    95  001DAC  1770               	dw	6000
    96  001DAE  1D4C               	dw	7500
    97  001DB0  2328               	dw	9000
    98  001DB2  2904               	dw	10500
    99                           
   100                           ;initializer for main@F2390
   101  001DB4  00                 	db	0
   102  001DB5  01                 	db	1
   103  001DB6  03                 	db	3
   104  001DB7  07                 	db	7
   105  001DB8  0F                 	db	15
   106  001DB9  2F                 	db	47
   107  001DBA  FF                 	db	255
   108                           
   109                           	psect	smallconst
   110  000600                     __psmallconst:
   111                           	callstack 0
   112  000600  00                 	db	0
   113  000601                     _valor:
   114                           	callstack 0
   115  000601  3F                 	db	63
   116  000602  06                 	db	6
   117  000603  5B                 	db	91
   118  000604  4F                 	db	79
   119  000605  66                 	db	102
   120  000606  6D                 	db	109
   121  000607  7D                 	db	125
   122  000608  07                 	db	7
   123  000609  7F                 	db	127
   124  00060A  6F                 	db	111
   125  00060B  77                 	db	119
   126  00060C  7C                 	db	124
   127  00060D  39                 	db	57
   128  00060E  5E                 	db	94
   129  00060F  79                 	db	121
   130  000610  71                 	db	113
   131  000611                     __end_of_valor:
   132                           	callstack 0
   133  000611  55                 	db	85
   134  000612  4C                 	db	76
   135  000613  44                 	db	68
   136  000614  52                 	db	82
   137  000615  53                 	db	83
   138  000616  58                 	db	88
   139  000617  41                 	db	65
   140  000618  42                 	db	66
   141  000619  59                 	db	89
   142  00061A  73                 	db	115
   143  00061B                     __end_of_charKey:
   144                           	callstack 0
   145  0000                     _SPBRG	set	4015
   146  0000                     _SPBRGH	set	4016
   147  0000                     _BAUDCON	set	4024
   148  0000                     _TXSTA	set	4012
   149  0000                     _RCREG	set	4014
   150  0000                     _RCSTA	set	4011
   151  0000                     _TXREG	set	4013
   152  0000                     _PIR1	set	3998
   153  0000                     _T2CON	set	4042
   154  0000                     _CCP2CON	set	4026
   155  0000                     _CCPR2L	set	4027
   156  0000                     _PR2	set	4043
   157  0000                     _TRISE	set	3990
   158  0000                     _TRISD	set	3989
   159  0000                     _TRISC	set	3988
   160  0000                     _TRISB	set	3987
   161  0000                     _TRISA	set	3986
   162  0000                     _PORTE	set	3972
   163  0000                     _PORTD	set	3971
   164  0000                     _PORTC	set	3970
   165  0000                     _PORTB	set	3969
   166  0000                     _PORTA	set	3968
   167  0000                     _ADRESL	set	4035
   168  0000                     _ADRESH	set	4036
   169  0000                     _ADCON2	set	4032
   170  0000                     _ADCON1	set	4033
   171  0000                     _ADCON0	set	4034
   172  00061B                     STR_7:
   173  00061B  4E                 	db	78	;'N'
   174  00061C  6F                 	db	111	;'o'
   175  00061D  20                 	db	32
   176  00061E  63                 	db	99	;'c'
   177  00061F  68                 	db	104	;'h'
   178  000620  61                 	db	97	;'a'
   179  000621  6F                 	db	111	;'o'
   180  000622  20                 	db	32
   181  000623  20                 	db	32
   182  000624  20                 	db	32
   183  000625  20                 	db	32
   184  000626  20                 	db	32
   185  000627  20                 	db	32
   186  000628  20                 	db	32
   187  000629  20                 	db	32
   188  00062A  20                 	db	32
   189  00062B  00                 	db	0
   190  00062C                     STR_5:
   191  00062C  50                 	db	80	;'P'
   192  00062D  6F                 	db	111	;'o'
   193  00062E  75                 	db	117	;'u'
   194  00062F  73                 	db	115	;'s'
   195  000630  61                 	db	97	;'a'
   196  000631  6E                 	db	110	;'n'
   197  000632  64                 	db	100	;'d'
   198  000633  6F                 	db	111	;'o'
   199  000634  20                 	db	32
   200  000635  20                 	db	32
   201  000636  20                 	db	32
   202  000637  20                 	db	32
   203  000638  20                 	db	32
   204  000639  20                 	db	32
   205  00063A  20                 	db	32
   206  00063B  20                 	db	32
   207  00063C  00                 	db	0
   208  00063D                     STR_4:
   209  00063D  44                 	db	68	;'D'
   210  00063E  65                 	db	101	;'e'
   211  00063F  63                 	db	99	;'c'
   212  000640  6F                 	db	111	;'o'
   213  000641  6C                 	db	108	;'l'
   214  000642  61                 	db	97	;'a'
   215  000643  6E                 	db	110	;'n'
   216  000644  64                 	db	100	;'d'
   217  000645  6F                 	db	111	;'o'
   218  000646  20                 	db	32
   219  000647  20                 	db	32
   220  000648  20                 	db	32
   221  000649  20                 	db	32
   222  00064A  20                 	db	32
   223  00064B  20                 	db	32
   224  00064C  20                 	db	32
   225  00064D  00                 	db	0
   226  00064E                     STR_6:
   227  00064E  4D                 	db	77	;'M'
   228  00064F  75                 	db	117	;'u'
   229  000650  69                 	db	105	;'i'
   230  000651  74                 	db	116	;'t'
   231  000652  6F                 	db	111	;'o'
   232  000653  20                 	db	32
   233  000654  61                 	db	97	;'a'
   234  000655  6C                 	db	108	;'l'
   235  000656  74                 	db	116	;'t'
   236  000657  6F                 	db	111	;'o'
   237  000658  20                 	db	32
   238  000659  20                 	db	32
   239  00065A  20                 	db	32
   240  00065B  20                 	db	32
   241  00065C  20                 	db	32
   242  00065D  20                 	db	32
   243  00065E  00                 	db	0
   244  00065F                     STR_1:
   245  00065F  44                 	db	68	;'D'
   246  000660  65                 	db	101	;'e'
   247  000661  73                 	db	115	;'s'
   248  000662  74                 	db	116	;'t'
   249  000663  69                 	db	105	;'i'
   250  000664  6E                 	db	110	;'n'
   251  000665  6F                 	db	111	;'o'
   252  000666  3A                 	db	58	;':'
   253  000667  20                 	db	32
   254  000668  47                 	db	71	;'G'
   255  000669  61                 	db	97	;'a'
   256  00066A  6C                 	db	108	;'l'
   257  00066B  65                 	db	101	;'e'
   258  00066C  61                 	db	97	;'a'
   259  00066D  6F                 	db	111	;'o'
   260  00066E  00                 	db	0
   261  00066F                     STR_3:
   262  00066F  56                 	db	86	;'V'
   263  000670  6F                 	db	111	;'o'
   264  000671  6F                 	db	111	;'o'
   265  000672  20                 	db	32
   266  000673  64                 	db	100	;'d'
   267  000674  65                 	db	101	;'e'
   268  000675  20                 	db	32
   269  000676  63                 	db	99	;'c'
   270  000677  72                 	db	114	;'r'
   271  000678  75                 	db	117	;'u'
   272  000679  7A                 	db	122	;'z'
   273  00067A  65                 	db	101	;'e'
   274  00067B  69                 	db	105	;'i'
   275  00067C  72                 	db	114	;'r'
   276  00067D  6F                 	db	111	;'o'
   277  00067E  00                 	db	0
   278  00067F                     STR_2:
   279  00067F  4E                 	db	78	;'N'
   280  000680  6F                 	db	111	;'o'
   281  000681  20                 	db	32
   282  000682  63                 	db	99	;'c'
   283  000683  68                 	db	104	;'h'
   284  000684  61                 	db	97	;'a'
   285  000685  6F                 	db	111	;'o'
   286  000686  00                 	db	0
   287  000687  00                 	db	0	; dummy byte at the end
   288  0000                     
   289                           ; #config settings
   290                           
   291                           	psect	cinit
   292  001BF0                     __pcinit:
   293                           	callstack 0
   294  001BF0                     start_initialization:
   295                           	callstack 0
   296  001BF0                     __initialization:
   297                           	callstack 0
   298                           
   299                           ; Initialize objects allocated to COMRAM (23 bytes)
   300                           ; load TBLPTR registers with __pidataCOMRAM
   301  001BF0  0EA4               	movlw	low __pidataCOMRAM
   302  001BF2  6EF6               	movwf	tblptrl,c
   303  001BF4  0E1D               	movlw	high __pidataCOMRAM
   304  001BF6  6EF7               	movwf	tblptrh,c
   305  001BF8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   306  001BFA  6EF8               	movwf	tblptru,c
   307  001BFC  EE00  F03C         	lfsr	0,__pdataCOMRAM
   308  001C00  EE10 F017          	lfsr	1,23
   309  001C04                     copy_data0:
   310  001C04  0009               	tblrd		*+
   311  001C06  CFF5 FFEE          	movff	tablat,postinc0
   312  001C0A  50E5               	movf	postdec1,w,c
   313  001C0C  50E1               	movf	fsr1l,w,c
   314  001C0E  E1FA               	bnz	copy_data0
   315                           
   316                           ; Clear objects allocated to COMRAM (12 bytes)
   317  001C10  EE00  F053         	lfsr	0,__pbssCOMRAM
   318  001C14  0E0C               	movlw	12
   319  001C16                     clear_0:
   320  001C16  6AEE               	clrf	postinc0,c
   321  001C18  06E8               	decf	wreg,f,c
   322  001C1A  E1FD               	bnz	clear_0
   323  001C1C                     end_of_initialization:
   324                           	callstack 0
   325  001C1C                     __end_of__initialization:
   326                           	callstack 0
   327  001C1C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   328  001C1E  6EF8               	movwf	tblptru,c
   329  001C20  0100               	movlb	0
   330  001C22  EF44  F003         	goto	_main	;jump to C main() function
   331                           
   332                           	psect	bssCOMRAM
   333  000053                     __pbssCOMRAM:
   334                           	callstack 0
   335  000053                     kpDebounce@oldRead:
   336                           	callstack 0
   337  000053                     	ds	2
   338  000055                     kpDebounce@newRead:
   339                           	callstack 0
   340  000055                     	ds	2
   341  000057                     _keys:
   342                           	callstack 0
   343  000057                     	ds	2
   344  000059                     _v3:
   345                           	callstack 0
   346  000059                     	ds	1
   347  00005A                     _v2:
   348                           	callstack 0
   349  00005A                     	ds	1
   350  00005B                     _v1:
   351                           	callstack 0
   352  00005B                     	ds	1
   353  00005C                     _v0:
   354                           	callstack 0
   355  00005C                     	ds	1
   356  00005D                     _display:
   357                           	callstack 0
   358  00005D                     	ds	1
   359  00005E                     kpDebounce@tempo:
   360                           	callstack 0
   361  00005E                     	ds	1
   362                           
   363                           	psect	dataCOMRAM
   364  00003C                     __pdataCOMRAM:
   365                           	callstack 0
   366  00003C                     main@F2388:
   367                           	callstack 0
   368  00003C                     	ds	16
   369  00004C                     main@F2390:
   370                           	callstack 0
   371  00004C                     	ds	7
   372                           
   373                           	psect	cstackCOMRAM
   374  000001                     __pcstackCOMRAM:
   375                           	callstack 0
   376  000001                     ?_adcRead:
   377                           	callstack 0
   378  000001                     ?_digitalRead:
   379                           	callstack 0
   380  000001                     ?_kpRead:
   381                           	callstack 0
   382  000001                     ?___wmul:
   383                           	callstack 0
   384  000001                     ?___awdiv:
   385                           	callstack 0
   386  000001                     ?___lwdiv:
   387                           	callstack 0
   388  000001                     ?___aldiv:
   389                           	callstack 0
   390  000001                     adcRead@channel:
   391                           	callstack 0
   392  000001                     atraso_ms@num:
   393                           	callstack 0
   394  000001                     digitalWrite@pin:
   395                           	callstack 0
   396  000001                     digitalRead@pin:
   397                           	callstack 0
   398  000001                     pinMode@pin:
   399                           	callstack 0
   400  000001                     delayMicro@a:
   401                           	callstack 0
   402  000001                     delayMili@a:
   403                           	callstack 0
   404  000001                     ___wmul@multiplier:
   405                           	callstack 0
   406  000001                     ___awdiv@dividend:
   407                           	callstack 0
   408  000001                     ___lwdiv@dividend:
   409                           	callstack 0
   410  000001                     ___aldiv@dividend:
   411                           	callstack 0
   412                           
   413                           ; 4 bytes @ 0x0
   414  000001                     	ds	2
   415  000003                     ??_digitalRead:
   416  000003                     ??_delayMili:
   417  000003                     adcRead@ADvalor:
   418                           	callstack 0
   419  000003                     atraso_ms@i:
   420                           	callstack 0
   421  000003                     digitalWrite@value:
   422                           	callstack 0
   423  000003                     pinMode@type:
   424                           	callstack 0
   425  000003                     ___wmul@multiplicand:
   426                           	callstack 0
   427  000003                     ___awdiv@divisor:
   428                           	callstack 0
   429  000003                     ___lwdiv@divisor:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x2
   433  000003                     	ds	1
   434  000004                     delayMili@i:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x3
   438  000004                     	ds	1
   439  000005                     ??_pinMode:
   440  000005                     ??_digitalWrite:
   441  000005                     atraso_ms@j:
   442                           	callstack 0
   443  000005                     ___awdiv@counter:
   444                           	callstack 0
   445  000005                     ___wmul@product:
   446                           	callstack 0
   447  000005                     ___lwdiv@quotient:
   448                           	callstack 0
   449  000005                     ___aldiv@divisor:
   450                           	callstack 0
   451                           
   452                           ; 4 bytes @ 0x4
   453  000005                     	ds	1
   454  000006                     atraso_ms@k:
   455                           	callstack 0
   456  000006                     ___awdiv@sign:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0x5
   460  000006                     	ds	1
   461  000007                     ___lwdiv@counter:
   462                           	callstack 0
   463  000007                     soWrite@value:
   464                           	callstack 0
   465  000007                     ___awdiv@quotient:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x6
   469  000007                     	ds	1
   470  000008                     ??_pwmSet:
   471                           
   472                           ; 1 bytes @ 0x7
   473  000008                     	ds	1
   474  000009                     ?___awmod:
   475                           	callstack 0
   476  000009                     soWrite@i:
   477                           	callstack 0
   478  000009                     ___aldiv@counter:
   479                           	callstack 0
   480  000009                     ___awmod@dividend:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x8
   484  000009                     	ds	1
   485  00000A                     ??_ssdUpdate:
   486  00000A                     ??_kpDebounce:
   487  00000A                     pwmSet@porcento:
   488                           	callstack 0
   489  00000A                     ___aldiv@sign:
   490                           	callstack 0
   491  00000A                     pushNibble@rs:
   492                           	callstack 0
   493  00000A                     pushByte@rs:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x9
   497  00000A                     	ds	1
   498  00000B                     pwmSet@val:
   499                           	callstack 0
   500  00000B                     ___awmod@divisor:
   501                           	callstack 0
   502  00000B                     ___aldiv@quotient:
   503                           	callstack 0
   504                           
   505                           ; 4 bytes @ 0xA
   506  00000B                     	ds	1
   507  00000C                     ??_pushByte:
   508  00000C                     pushNibble@value:
   509                           	callstack 0
   510                           
   511                           ; 1 bytes @ 0xB
   512  00000C                     	ds	1
   513  00000D                     pushByte@value:
   514                           	callstack 0
   515  00000D                     ___awmod@counter:
   516                           	callstack 0
   517  00000D                     kpDebounce@i:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0xC
   521  00000D                     	ds	1
   522  00000E                     lcdCommand@value:
   523                           	callstack 0
   524  00000E                     lcdChar@value:
   525                           	callstack 0
   526  00000E                     ___awmod@sign:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0xD
   530  00000E                     	ds	1
   531  00000F                     ssdDigit@pos:
   532                           	callstack 0
   533  00000F                     lcdPosition@line:
   534                           	callstack 0
   535  00000F                     lcdString@msg:
   536                           	callstack 0
   537  00000F                     pwmFrequency@freq:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0xE
   541  00000F                     	ds	1
   542  000010                     ssdDigit@val:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0xF
   546  000010                     	ds	1
   547  000011                     ??_lcdString:
   548  000011                     lcdPosition@col:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x10
   552  000011                     	ds	2
   553  000013                     lcdString@i:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x12
   557  000013                     	ds	2
   558  000015                     ??_main:
   559                           
   560                           ; 1 bytes @ 0x14
   561  000015                     	ds	5
   562  00001A                     main@leds:
   563                           	callstack 0
   564                           
   565                           ; 7 bytes @ 0x19
   566  00001A                     	ds	7
   567  000021                     main@ultimoAlt:
   568                           	callstack 0
   569                           
   570                           ; 16 bytes @ 0x20
   571  000021                     	ds	16
   572  000031                     main@mudancaGradual:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x30
   576  000031                     	ds	2
   577  000033                     main@op:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x32
   581  000033                     	ds	1
   582  000034                     main@pwmVal:
   583                           	callstack 0
   584                           
   585                           ; 1 bytes @ 0x33
   586  000034                     	ds	1
   587  000035                     main@slot:
   588                           	callstack 0
   589                           
   590                           ; 1 bytes @ 0x34
   591  000035                     	ds	1
   592  000036                     main@j:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x35
   596  000036                     	ds	1
   597  000037                     main@k:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x36
   601  000037                     	ds	1
   602  000038                     main@tecla:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x37
   606  000038                     	ds	2
   607  00003A                     main@altitude:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x39
   611  00003A                     	ds	2
   612                           
   613 ;;
   614 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   615 ;;
   616 ;; *************** function _main *****************
   617 ;; Defined at:
   618 ;;		line 11 in file "main.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;  ultimoAlt      16   32[COMRAM] int [8]
   623 ;;  leds            7   25[COMRAM] unsigned char [7]
   624 ;;  altitude        2   57[COMRAM] int 
   625 ;;  tecla           2   55[COMRAM] unsigned int 
   626 ;;  mudancaGradu    2   48[COMRAM] int 
   627 ;;  k               1   54[COMRAM] unsigned char 
   628 ;;  j               1   53[COMRAM] unsigned char 
   629 ;;  slot            1   52[COMRAM] unsigned char 
   630 ;;  pwmVal          1   51[COMRAM] unsigned char 
   631 ;;  op              1   50[COMRAM] unsigned char 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   641 ;;      Params:         0       0       0       0       0       0       0
   642 ;;      Locals:        34       0       0       0       0       0       0
   643 ;;      Temps:          5       0       0       0       0       0       0
   644 ;;      Totals:        39       0       0       0       0       0       0
   645 ;;Total ram usage:       39 bytes
   646 ;; Hardware stack levels required when called: 6
   647 ;; This function calls:
   648 ;;		___awdiv
   649 ;;		___awmod
   650 ;;		_adcInit
   651 ;;		_adcRead
   652 ;;		_atraso_ms
   653 ;;		_kpDebounce
   654 ;;		_kpInit
   655 ;;		_kpRead
   656 ;;		_lcdInit
   657 ;;		_lcdPosition
   658 ;;		_lcdString
   659 ;;		_pwmInit
   660 ;;		_pwmSet
   661 ;;		_ssdDigit
   662 ;;		_ssdInit
   663 ;;		_ssdUpdate
   664 ;; This function is called by:
   665 ;;		Startup code after reset
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text0
   670  000688                     __ptext0:
   671                           	callstack 0
   672  000688                     _main:
   673                           	callstack 25
   674  000688                     
   675                           ;main.c: 12:     int altitude = 0, mudancaGradual;
   676  000688  0E00               	movlw	0
   677  00068A  6E3B               	movwf	(main@altitude+1)^0,c
   678  00068C  0E00               	movlw	0
   679  00068E  6E3A               	movwf	main@altitude^0,c
   680  000690                     
   681                           ;main.c: 13:     int ultimoAlt[8] = {0, 1500, 3000, 4500, 6000, 7500, 9000, 10500};
   682  000690  EE20  F03C         	lfsr	2,main@F2388
   683  000694  EE10  F021         	lfsr	1,main@ultimoAlt
   684  000698  0E0F               	movlw	15
   685  00069A                     u2391:
   686  00069A  CFDB FFE3          	movff	plusw2,plusw1
   687  00069E  06E8               	decf	wreg,f,c
   688  0006A0  E2FC               	bc	u2391
   689  0006A2                     
   690                           ;main.c: 14:     unsigned char leds[7] = {0x00,0x01,0x03,0x07,0x0F,0x2F,0xFF};
   691  0006A2  EE20  F04C         	lfsr	2,main@F2390
   692  0006A6  EE10  F01A         	lfsr	1,main@leds
   693  0006AA  0E06               	movlw	6
   694  0006AC                     u2401:
   695  0006AC  CFDB FFE3          	movff	plusw2,plusw1
   696  0006B0  06E8               	decf	wreg,f,c
   697  0006B2  E2FC               	bc	u2401
   698                           
   699                           ;main.c: 15:     char j=0, k=0, slot=0, op=0, pwmVal;
   700  0006B4  0E00               	movlw	0
   701  0006B6  6E36               	movwf	main@j^0,c
   702  0006B8  0E00               	movlw	0
   703  0006BA  6E37               	movwf	main@k^0,c
   704  0006BC  0E00               	movlw	0
   705  0006BE  6E35               	movwf	main@slot^0,c
   706  0006C0  0E00               	movlw	0
   707  0006C2  6E33               	movwf	main@op^0,c
   708                           
   709                           ;main.c: 16:     unsigned int tecla = 16;
   710  0006C4  0E00               	movlw	0
   711  0006C6  6E39               	movwf	(main@tecla+1)^0,c
   712  0006C8  0E10               	movlw	16
   713  0006CA  6E38               	movwf	main@tecla^0,c
   714  0006CC                     
   715                           ;main.c: 18:     lcdInit();
   716  0006CC  EC25  F00B         	call	_lcdInit	;wreg free
   717  0006D0                     
   718                           ;main.c: 19:     kpInit();
   719  0006D0  EC13  F00E         	call	_kpInit	;wreg free
   720  0006D4                     
   721                           ;main.c: 20:     ssdInit();
   722  0006D4  ECD2  F00C         	call	_ssdInit	;wreg free
   723  0006D8                     
   724                           ;main.c: 21:     pwmInit();
   725  0006D8  ECC5  F00E         	call	_pwmInit	;wreg free
   726  0006DC                     
   727                           ;main.c: 22:     adcInit();
   728  0006DC  EC77  F00D         	call	_adcInit	;wreg free
   729  0006E0                     
   730                           ;main.c: 24:     TRISD = 0x00;
   731  0006E0  0E00               	movlw	0
   732  0006E2  6E95               	movwf	149,c	;volatile
   733  0006E4                     
   734                           ;main.c: 25:     PORTD = 0x00;
   735  0006E4  0E00               	movlw	0
   736  0006E6  6E83               	movwf	131,c	;volatile
   737  0006E8                     
   738                           ;main.c: 28:     lcdPosition(0,0);
   739  0006E8  0E00               	movlw	0
   740  0006EA  6E10               	movwf	(lcdPosition@line+1)^0,c
   741  0006EC  0E00               	movlw	0
   742  0006EE  6E0F               	movwf	lcdPosition@line^0,c
   743  0006F0  0E00               	movlw	0
   744  0006F2  6E12               	movwf	(lcdPosition@col+1)^0,c
   745  0006F4  0E00               	movlw	0
   746  0006F6  6E11               	movwf	lcdPosition@col^0,c
   747  0006F8  ECDB  F00D         	call	_lcdPosition	;wreg free
   748  0006FC                     
   749                           ;main.c: 29:     lcdString("Destino: Galeao");
   750  0006FC  0E5F               	movlw	low STR_1
   751  0006FE  6E0F               	movwf	lcdString@msg^0,c
   752  000700  0E06               	movlw	high STR_1
   753  000702  6E10               	movwf	(lcdString@msg+1)^0,c
   754  000704  ECFD  F00C         	call	_lcdString	;wreg free
   755  000708                     
   756                           ;main.c: 30:     lcdPosition(1,0);
   757  000708  0E00               	movlw	0
   758  00070A  6E10               	movwf	(lcdPosition@line+1)^0,c
   759  00070C  0E01               	movlw	1
   760  00070E  6E0F               	movwf	lcdPosition@line^0,c
   761  000710  0E00               	movlw	0
   762  000712  6E12               	movwf	(lcdPosition@col+1)^0,c
   763  000714  0E00               	movlw	0
   764  000716  6E11               	movwf	lcdPosition@col^0,c
   765  000718  ECDB  F00D         	call	_lcdPosition	;wreg free
   766  00071C                     
   767                           ;main.c: 31:     lcdString("No chao");
   768  00071C  0E7F               	movlw	low STR_2
   769  00071E  6E0F               	movwf	lcdString@msg^0,c
   770  000720  0E06               	movlw	high STR_2
   771  000722  6E10               	movwf	(lcdString@msg+1)^0,c
   772  000724  ECFD  F00C         	call	_lcdString	;wreg free
   773  000728  EF89  F005         	goto	l2512
   774  00072C                     l2414:
   775                           
   776                           ;main.c: 36:                 kpDebounce();
   777  00072C  ECA2  F009         	call	_kpDebounce	;wreg free
   778                           
   779                           ;main.c: 37:                 if (kpRead() != tecla){
   780  000730  ECDE  F00E         	call	_kpRead	;wreg free
   781  000734  5038               	movf	main@tecla^0,w,c
   782  000736  1801               	xorwf	?_kpRead^0,w,c
   783  000738  E109               	bnz	u2410
   784  00073A  5039               	movf	(main@tecla+1)^0,w,c
   785  00073C  1802               	xorwf	(?_kpRead+1)^0,w,c
   786  00073E  B4D8               	btfsc	status,2,c
   787  000740  EFA4  F003         	goto	u2411
   788  000744  EFA6  F003         	goto	u2410
   789  000748                     u2411:
   790  000748  EF27  F005         	goto	l343
   791  00074C                     u2410:
   792  00074C                     
   793                           ;main.c: 38:                     tecla = kpRead();
   794  00074C  ECDE  F00E         	call	_kpRead	;wreg free
   795  000750  C001  F038         	movff	?_kpRead,main@tecla
   796  000754  C002  F039         	movff	?_kpRead+1,main@tecla+1
   797  000758                     
   798                           ;main.c: 40:                     if (((tecla) & (1<<(0)))&& altitude <= 9500) {
   799  000758  A038               	btfss	main@tecla^0,0,c
   800  00075A  EFB1  F003         	goto	u2421
   801  00075E  EFB3  F003         	goto	u2420
   802  000762                     u2421:
   803  000762  EFC5  F003         	goto	l2424
   804  000766                     u2420:
   805  000766  BE3B               	btfsc	(main@altitude+1)^0,7,c
   806  000768  EFC1  F003         	goto	u2430
   807  00076C  0E1D               	movlw	29
   808  00076E  5C3A               	subwf	main@altitude^0,w,c
   809  000770  0E25               	movlw	37
   810  000772  583B               	subwfb	(main@altitude+1)^0,w,c
   811  000774  B0D8               	btfsc	status,0,c
   812  000776  EFBF  F003         	goto	u2431
   813  00077A  EFC1  F003         	goto	u2430
   814  00077E                     u2431:
   815  00077E  EFC5  F003         	goto	l2424
   816  000782                     u2430:
   817  000782                     
   818                           ;main.c: 41:                         altitude+=500;
   819  000782  0EF4               	movlw	244
   820  000784  263A               	addwf	main@altitude^0,f,c
   821  000786  0E01               	movlw	1
   822  000788  223B               	addwfc	(main@altitude+1)^0,f,c
   823  00078A                     l2424:
   824                           
   825                           ;main.c: 43:                     if (((tecla) & (1<<(2))) && altitude>0) {
   826  00078A  A438               	btfss	main@tecla^0,2,c
   827  00078C  EFCA  F003         	goto	u2441
   828  000790  EFCC  F003         	goto	u2440
   829  000794                     u2441:
   830  000794  EFDD  F003         	goto	l2430
   831  000798                     u2440:
   832  000798  BE3B               	btfsc	(main@altitude+1)^0,7,c
   833  00079A  EFD7  F003         	goto	u2451
   834  00079E  503B               	movf	(main@altitude+1)^0,w,c
   835  0007A0  E108               	bnz	u2450
   836  0007A2  043A               	decf	main@altitude^0,w,c
   837  0007A4  A0D8               	btfss	status,0,c
   838  0007A6  EFD7  F003         	goto	u2451
   839  0007AA  EFD9  F003         	goto	u2450
   840  0007AE                     u2451:
   841  0007AE  EFDD  F003         	goto	l2430
   842  0007B2                     u2450:
   843  0007B2                     
   844                           ;main.c: 44:                         altitude-=500;
   845  0007B2  0E0C               	movlw	12
   846  0007B4  263A               	addwf	main@altitude^0,f,c
   847  0007B6  0EFE               	movlw	254
   848  0007B8  223B               	addwfc	(main@altitude+1)^0,f,c
   849  0007BA                     l2430:
   850                           
   851                           ;main.c: 47:                     if (((tecla) & (1<<(1)))){
   852  0007BA  A238               	btfss	main@tecla^0,1,c
   853  0007BC  EFE2  F003         	goto	u2461
   854  0007C0  EFE4  F003         	goto	u2460
   855  0007C4                     u2461:
   856  0007C4  EFE6  F003         	goto	l2434
   857  0007C8                     u2460:
   858  0007C8                     
   859                           ;main.c: 48:                         op = 0;
   860  0007C8  0E00               	movlw	0
   861  0007CA  6E33               	movwf	main@op^0,c
   862  0007CC                     l2434:
   863                           
   864                           ;main.c: 50:                     if (((tecla) & (1<<(3)))) {
   865  0007CC  A638               	btfss	main@tecla^0,3,c
   866  0007CE  EFEB  F003         	goto	u2471
   867  0007D2  EFED  F003         	goto	u2470
   868  0007D6                     u2471:
   869  0007D6  EFEF  F003         	goto	l2438
   870  0007DA                     u2470:
   871  0007DA                     
   872                           ;main.c: 51:                         op = 1;
   873  0007DA  0E01               	movlw	1
   874  0007DC  6E33               	movwf	main@op^0,c
   875  0007DE                     l2438:
   876                           
   877                           ;main.c: 54:                     if(altitude>=ultimoAlt[k+1]){
   878  0007DE  5037               	movf	main@k^0,w,c
   879  0007E0  6E15               	movwf	??_main^0,c
   880  0007E2  6A16               	clrf	(??_main+1)^0,c
   881  0007E4  90D8               	bcf	status,0,c
   882  0007E6  3615               	rlcf	??_main^0,f,c
   883  0007E8  3616               	rlcf	(??_main+1)^0,f,c
   884  0007EA  0E02               	movlw	2
   885  0007EC  2615               	addwf	??_main^0,f,c
   886  0007EE  0E00               	movlw	0
   887  0007F0  2216               	addwfc	(??_main+1)^0,f,c
   888  0007F2  0E21               	movlw	low main@ultimoAlt
   889  0007F4  2415               	addwf	??_main^0,w,c
   890  0007F6  6ED9               	movwf	fsr2l,c
   891  0007F8  0E00               	movlw	high main@ultimoAlt
   892  0007FA  2016               	addwfc	(??_main+1)^0,w,c
   893  0007FC  6EDA               	movwf	fsr2h,c
   894  0007FE  50DE               	movf	postinc2,w,c
   895  000800  5C3A               	subwf	main@altitude^0,w,c
   896  000802  503B               	movf	(main@altitude+1)^0,w,c
   897  000804  0A80               	xorlw	128
   898  000806  6E19               	movwf	(??_main+4)^0,c
   899  000808  50DE               	movf	postinc2,w,c
   900  00080A  0A80               	xorlw	128
   901  00080C  5819               	subwfb	(??_main+4)^0,w,c
   902  00080E  A0D8               	btfss	status,0,c
   903  000810  EF0C  F004         	goto	u2481
   904  000814  EF0E  F004         	goto	u2480
   905  000818                     u2481:
   906  000818  EF11  F004         	goto	l2442
   907  00081C                     u2480:
   908  00081C                     
   909                           ;main.c: 55:                         k++;
   910  00081C  2A37               	incf	main@k^0,f,c
   911                           
   912                           ;main.c: 56:                     }else if(altitude<ultimoAlt[k]){
   913  00081E  EF29  F004         	goto	l2446
   914  000822                     l2442:
   915  000822  5037               	movf	main@k^0,w,c
   916  000824  0D02               	mullw	2
   917  000826  0E21               	movlw	low main@ultimoAlt
   918  000828  24F3               	addwf	243,w,c
   919  00082A  6ED9               	movwf	fsr2l,c
   920  00082C  0E00               	movlw	high main@ultimoAlt
   921  00082E  20F4               	addwfc	prodh,w,c
   922  000830  6EDA               	movwf	fsr2h,c
   923  000832  50DE               	movf	postinc2,w,c
   924  000834  5C3A               	subwf	main@altitude^0,w,c
   925  000836  503B               	movf	(main@altitude+1)^0,w,c
   926  000838  0A80               	xorlw	128
   927  00083A  6E17               	movwf	(??_main+2)^0,c
   928  00083C  50DE               	movf	postinc2,w,c
   929  00083E  0A80               	xorlw	128
   930  000840  5817               	subwfb	(??_main+2)^0,w,c
   931  000842  B0D8               	btfsc	status,0,c
   932  000844  EF26  F004         	goto	u2491
   933  000848  EF28  F004         	goto	u2490
   934  00084C                     u2491:
   935  00084C  EF29  F004         	goto	l2446
   936  000850                     u2490:
   937  000850                     
   938                           ;main.c: 57:                         k--;
   939  000850  0637               	decf	main@k^0,f,c
   940  000852                     l2446:
   941                           
   942                           ;main.c: 60:                     if(altitude>=6000&&altitude<7000){
   943  000852  BE3B               	btfsc	(main@altitude+1)^0,7,c
   944  000854  EF35  F004         	goto	u2501
   945  000858  0E70               	movlw	112
   946  00085A  5C3A               	subwf	main@altitude^0,w,c
   947  00085C  0E17               	movlw	23
   948  00085E  583B               	subwfb	(main@altitude+1)^0,w,c
   949  000860  A0D8               	btfss	status,0,c
   950  000862  EF35  F004         	goto	u2501
   951  000866  EF37  F004         	goto	u2500
   952  00086A                     u2501:
   953  00086A  EF59  F004         	goto	l2458
   954  00086E                     u2500:
   955  00086E  BE3B               	btfsc	(main@altitude+1)^0,7,c
   956  000870  EF45  F004         	goto	u2510
   957  000874  0E58               	movlw	88
   958  000876  5C3A               	subwf	main@altitude^0,w,c
   959  000878  0E1B               	movlw	27
   960  00087A  583B               	subwfb	(main@altitude+1)^0,w,c
   961  00087C  B0D8               	btfsc	status,0,c
   962  00087E  EF43  F004         	goto	u2511
   963  000882  EF45  F004         	goto	u2510
   964  000886                     u2511:
   965  000886  EF59  F004         	goto	l2458
   966  00088A                     u2510:
   967  00088A                     
   968                           ;main.c: 61:                         lcdPosition(1,0);
   969  00088A  0E00               	movlw	0
   970  00088C  6E10               	movwf	(lcdPosition@line+1)^0,c
   971  00088E  0E01               	movlw	1
   972  000890  6E0F               	movwf	lcdPosition@line^0,c
   973  000892  0E00               	movlw	0
   974  000894  6E12               	movwf	(lcdPosition@col+1)^0,c
   975  000896  0E00               	movlw	0
   976  000898  6E11               	movwf	lcdPosition@col^0,c
   977  00089A  ECDB  F00D         	call	_lcdPosition	;wreg free
   978  00089E                     
   979                           ;main.c: 62:                         lcdString("Voo de cruzeiro");
   980  00089E  0E6F               	movlw	low STR_3
   981  0008A0  6E0F               	movwf	lcdString@msg^0,c
   982  0008A2  0E06               	movlw	high STR_3
   983  0008A4  6E10               	movwf	(lcdString@msg+1)^0,c
   984  0008A6  ECFD  F00C         	call	_lcdString	;wreg free
   985  0008AA                     
   986                           ;main.c: 63:                         pwmVal = 0;
   987  0008AA  0E00               	movlw	0
   988  0008AC  6E34               	movwf	main@pwmVal^0,c
   989  0008AE                     
   990                           ;main.c: 64:                         j=1;
   991  0008AE  0E01               	movlw	1
   992  0008B0  6E36               	movwf	main@j^0,c
   993  0008B2                     l2458:
   994                           
   995                           ;main.c: 66:                     if(altitude<6000 && altitude>1 && j<1){
   996  0008B2  BE3B               	btfsc	(main@altitude+1)^0,7,c
   997  0008B4  EF67  F004         	goto	u2520
   998  0008B8  0E70               	movlw	112
   999  0008BA  5C3A               	subwf	main@altitude^0,w,c
  1000  0008BC  0E17               	movlw	23
  1001  0008BE  583B               	subwfb	(main@altitude+1)^0,w,c
  1002  0008C0  B0D8               	btfsc	status,0,c
  1003  0008C2  EF65  F004         	goto	u2521
  1004  0008C6  EF67  F004         	goto	u2520
  1005  0008CA                     u2521:
  1006  0008CA  EF8D  F004         	goto	l2468
  1007  0008CE                     u2520:
  1008  0008CE  BE3B               	btfsc	(main@altitude+1)^0,7,c
  1009  0008D0  EF73  F004         	goto	u2531
  1010  0008D4  503B               	movf	(main@altitude+1)^0,w,c
  1011  0008D6  E109               	bnz	u2530
  1012  0008D8  0E02               	movlw	2
  1013  0008DA  5C3A               	subwf	main@altitude^0,w,c
  1014  0008DC  A0D8               	btfss	status,0,c
  1015  0008DE  EF73  F004         	goto	u2531
  1016  0008E2  EF75  F004         	goto	u2530
  1017  0008E6                     u2531:
  1018  0008E6  EF8D  F004         	goto	l2468
  1019  0008EA                     u2530:
  1020  0008EA  5036               	movf	main@j^0,w,c
  1021  0008EC  A4D8               	btfss	status,2,c
  1022  0008EE  EF7B  F004         	goto	u2541
  1023  0008F2  EF7D  F004         	goto	u2540
  1024  0008F6                     u2541:
  1025  0008F6  EF8D  F004         	goto	l2468
  1026  0008FA                     u2540:
  1027  0008FA                     
  1028                           ;main.c: 67:                         lcdPosition(1,0);
  1029  0008FA  0E00               	movlw	0
  1030  0008FC  6E10               	movwf	(lcdPosition@line+1)^0,c
  1031  0008FE  0E01               	movlw	1
  1032  000900  6E0F               	movwf	lcdPosition@line^0,c
  1033  000902  0E00               	movlw	0
  1034  000904  6E12               	movwf	(lcdPosition@col+1)^0,c
  1035  000906  0E00               	movlw	0
  1036  000908  6E11               	movwf	lcdPosition@col^0,c
  1037  00090A  ECDB  F00D         	call	_lcdPosition	;wreg free
  1038  00090E                     
  1039                           ;main.c: 68:                         lcdString("Decolando       ");
  1040  00090E  0E3D               	movlw	low STR_4
  1041  000910  6E0F               	movwf	lcdString@msg^0,c
  1042  000912  0E06               	movlw	high STR_4
  1043  000914  6E10               	movwf	(lcdString@msg+1)^0,c
  1044  000916  ECFD  F00C         	call	_lcdString	;wreg free
  1045  00091A                     l2468:
  1046                           
  1047                           ;main.c: 70:                     if(altitude<6000 && altitude>1 && j>0){
  1048  00091A  BE3B               	btfsc	(main@altitude+1)^0,7,c
  1049  00091C  EF9B  F004         	goto	u2550
  1050  000920  0E70               	movlw	112
  1051  000922  5C3A               	subwf	main@altitude^0,w,c
  1052  000924  0E17               	movlw	23
  1053  000926  583B               	subwfb	(main@altitude+1)^0,w,c
  1054  000928  B0D8               	btfsc	status,0,c
  1055  00092A  EF99  F004         	goto	u2551
  1056  00092E  EF9B  F004         	goto	u2550
  1057  000932                     u2551:
  1058  000932  EFC1  F004         	goto	l2478
  1059  000936                     u2550:
  1060  000936  BE3B               	btfsc	(main@altitude+1)^0,7,c
  1061  000938  EFA7  F004         	goto	u2561
  1062  00093C  503B               	movf	(main@altitude+1)^0,w,c
  1063  00093E  E109               	bnz	u2560
  1064  000940  0E02               	movlw	2
  1065  000942  5C3A               	subwf	main@altitude^0,w,c
  1066  000944  A0D8               	btfss	status,0,c
  1067  000946  EFA7  F004         	goto	u2561
  1068  00094A  EFA9  F004         	goto	u2560
  1069  00094E                     u2561:
  1070  00094E  EFC1  F004         	goto	l2478
  1071  000952                     u2560:
  1072  000952  5036               	movf	main@j^0,w,c
  1073  000954  B4D8               	btfsc	status,2,c
  1074  000956  EFAF  F004         	goto	u2571
  1075  00095A  EFB1  F004         	goto	u2570
  1076  00095E                     u2571:
  1077  00095E  EFC1  F004         	goto	l2478
  1078  000962                     u2570:
  1079  000962                     
  1080                           ;main.c: 71:                         lcdPosition(1,0);
  1081  000962  0E00               	movlw	0
  1082  000964  6E10               	movwf	(lcdPosition@line+1)^0,c
  1083  000966  0E01               	movlw	1
  1084  000968  6E0F               	movwf	lcdPosition@line^0,c
  1085  00096A  0E00               	movlw	0
  1086  00096C  6E12               	movwf	(lcdPosition@col+1)^0,c
  1087  00096E  0E00               	movlw	0
  1088  000970  6E11               	movwf	lcdPosition@col^0,c
  1089  000972  ECDB  F00D         	call	_lcdPosition	;wreg free
  1090  000976                     
  1091                           ;main.c: 72:                         lcdString("Pousando        ");
  1092  000976  0E2C               	movlw	low STR_5
  1093  000978  6E0F               	movwf	lcdString@msg^0,c
  1094  00097A  0E06               	movlw	high STR_5
  1095  00097C  6E10               	movwf	(lcdString@msg+1)^0,c
  1096  00097E  ECFD  F00C         	call	_lcdString	;wreg free
  1097  000982                     l2478:
  1098                           
  1099                           ;main.c: 74:                     if(altitude>7000 && altitude<10000){
  1100  000982  BE3B               	btfsc	(main@altitude+1)^0,7,c
  1101  000984  EFCD  F004         	goto	u2581
  1102  000988  0E59               	movlw	89
  1103  00098A  5C3A               	subwf	main@altitude^0,w,c
  1104  00098C  0E1B               	movlw	27
  1105  00098E  583B               	subwfb	(main@altitude+1)^0,w,c
  1106  000990  A0D8               	btfss	status,0,c
  1107  000992  EFCD  F004         	goto	u2581
  1108  000996  EFCF  F004         	goto	u2580
  1109  00099A                     u2581:
  1110  00099A  EFEF  F004         	goto	l2488
  1111  00099E                     u2580:
  1112  00099E  BE3B               	btfsc	(main@altitude+1)^0,7,c
  1113  0009A0  EFDD  F004         	goto	u2590
  1114  0009A4  0E10               	movlw	16
  1115  0009A6  5C3A               	subwf	main@altitude^0,w,c
  1116  0009A8  0E27               	movlw	39
  1117  0009AA  583B               	subwfb	(main@altitude+1)^0,w,c
  1118  0009AC  B0D8               	btfsc	status,0,c
  1119  0009AE  EFDB  F004         	goto	u2591
  1120  0009B2  EFDD  F004         	goto	u2590
  1121  0009B6                     u2591:
  1122  0009B6  EFEF  F004         	goto	l2488
  1123  0009BA                     u2590:
  1124  0009BA                     
  1125                           ;main.c: 75:                         lcdPosition(1,0);
  1126  0009BA  0E00               	movlw	0
  1127  0009BC  6E10               	movwf	(lcdPosition@line+1)^0,c
  1128  0009BE  0E01               	movlw	1
  1129  0009C0  6E0F               	movwf	lcdPosition@line^0,c
  1130  0009C2  0E00               	movlw	0
  1131  0009C4  6E12               	movwf	(lcdPosition@col+1)^0,c
  1132  0009C6  0E00               	movlw	0
  1133  0009C8  6E11               	movwf	lcdPosition@col^0,c
  1134  0009CA  ECDB  F00D         	call	_lcdPosition	;wreg free
  1135  0009CE                     
  1136                           ;main.c: 76:                         lcdString("Muito alto      ");
  1137  0009CE  0E4E               	movlw	low STR_6
  1138  0009D0  6E0F               	movwf	lcdString@msg^0,c
  1139  0009D2  0E06               	movlw	high STR_6
  1140  0009D4  6E10               	movwf	(lcdString@msg+1)^0,c
  1141  0009D6  ECFD  F00C         	call	_lcdString	;wreg free
  1142  0009DA                     
  1143                           ;main.c: 77:                         pwmVal = 100;
  1144  0009DA  0E64               	movlw	100
  1145  0009DC  6E34               	movwf	main@pwmVal^0,c
  1146  0009DE                     l2488:
  1147                           
  1148                           ;main.c: 79:                     if(altitude==0){
  1149  0009DE  503A               	movf	main@altitude^0,w,c
  1150  0009E0  103B               	iorwf	(main@altitude+1)^0,w,c
  1151  0009E2  A4D8               	btfss	status,2,c
  1152  0009E4  EFF6  F004         	goto	u2601
  1153  0009E8  EFF8  F004         	goto	u2600
  1154  0009EC                     u2601:
  1155  0009EC  EF0A  F005         	goto	l2496
  1156  0009F0                     u2600:
  1157  0009F0                     
  1158                           ;main.c: 80:                         lcdPosition(1,0);
  1159  0009F0  0E00               	movlw	0
  1160  0009F2  6E10               	movwf	(lcdPosition@line+1)^0,c
  1161  0009F4  0E01               	movlw	1
  1162  0009F6  6E0F               	movwf	lcdPosition@line^0,c
  1163  0009F8  0E00               	movlw	0
  1164  0009FA  6E12               	movwf	(lcdPosition@col+1)^0,c
  1165  0009FC  0E00               	movlw	0
  1166  0009FE  6E11               	movwf	lcdPosition@col^0,c
  1167  000A00  ECDB  F00D         	call	_lcdPosition	;wreg free
  1168  000A04                     
  1169                           ;main.c: 81:                         lcdString("No chao         ");
  1170  000A04  0E1B               	movlw	low STR_7
  1171  000A06  6E0F               	movwf	lcdString@msg^0,c
  1172  000A08  0E06               	movlw	high STR_7
  1173  000A0A  6E10               	movwf	(lcdString@msg+1)^0,c
  1174  000A0C  ECFD  F00C         	call	_lcdString	;wreg free
  1175  000A10                     
  1176                           ;main.c: 82:                         j=0;
  1177  000A10  0E00               	movlw	0
  1178  000A12  6E36               	movwf	main@j^0,c
  1179  000A14                     l2496:
  1180                           
  1181                           ;main.c: 84:                     if(altitude<0){
  1182  000A14  BE3B               	btfsc	(main@altitude+1)^0,7,c
  1183  000A16  EF11  F005         	goto	u2610
  1184  000A1A  EF0F  F005         	goto	u2611
  1185  000A1E                     u2611:
  1186  000A1E  EF15  F005         	goto	l2500
  1187  000A22                     u2610:
  1188  000A22                     
  1189                           ;main.c: 85:                         altitude = 0;
  1190  000A22  0E00               	movlw	0
  1191  000A24  6E3B               	movwf	(main@altitude+1)^0,c
  1192  000A26  0E00               	movlw	0
  1193  000A28  6E3A               	movwf	main@altitude^0,c
  1194  000A2A                     l2500:
  1195                           
  1196                           ;main.c: 87:                     if(altitude>9999){
  1197  000A2A  BE3B               	btfsc	(main@altitude+1)^0,7,c
  1198  000A2C  EF21  F005         	goto	u2621
  1199  000A30  0E10               	movlw	16
  1200  000A32  5C3A               	subwf	main@altitude^0,w,c
  1201  000A34  0E27               	movlw	39
  1202  000A36  583B               	subwfb	(main@altitude+1)^0,w,c
  1203  000A38  A0D8               	btfss	status,0,c
  1204  000A3A  EF21  F005         	goto	u2621
  1205  000A3E  EF23  F005         	goto	u2620
  1206  000A42                     u2621:
  1207  000A42  EF27  F005         	goto	l343
  1208  000A46                     u2620:
  1209  000A46                     
  1210                           ;main.c: 88:                         altitude = 9999;
  1211  000A46  0E27               	movlw	39
  1212  000A48  6E3B               	movwf	(main@altitude+1)^0,c
  1213  000A4A  0E0F               	movlw	15
  1214  000A4C  6E3A               	movwf	main@altitude^0,c
  1215  000A4E                     l343:
  1216                           
  1217                           ;main.c: 91:                 slot = 1;
  1218  000A4E  0E01               	movlw	1
  1219  000A50  6E35               	movwf	main@slot^0,c
  1220                           
  1221                           ;main.c: 92:                 break;
  1222  000A52  EF9E  F005         	goto	l2514
  1223  000A56                     l2504:
  1224                           
  1225                           ;main.c: 95:                 ssdDigit(((altitude/1)%10),3);
  1226  000A56  0E03               	movlw	3
  1227  000A58  6E0F               	movwf	ssdDigit@pos^0,c
  1228  000A5A  C03A  F009         	movff	main@altitude,___awmod@dividend
  1229  000A5E  C03B  F00A         	movff	main@altitude+1,___awmod@dividend+1
  1230  000A62  0E00               	movlw	0
  1231  000A64  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1232  000A66  0E0A               	movlw	10
  1233  000A68  6E0B               	movwf	___awmod@divisor^0,c
  1234  000A6A  EC7F  F00B         	call	___awmod	;wreg free
  1235  000A6E  5009               	movf	?___awmod^0,w,c
  1236  000A70  ECA6  F00C         	call	_ssdDigit
  1237                           
  1238                           ;main.c: 96:                 ssdDigit(((altitude/10)%10),2);
  1239  000A74  0E02               	movlw	2
  1240  000A76  6E0F               	movwf	ssdDigit@pos^0,c
  1241  000A78  0E00               	movlw	0
  1242  000A7A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1243  000A7C  0E0A               	movlw	10
  1244  000A7E  6E03               	movwf	___awdiv@divisor^0,c
  1245  000A80  C03A  F001         	movff	main@altitude,___awdiv@dividend
  1246  000A84  C03B  F002         	movff	main@altitude+1,___awdiv@dividend+1
  1247  000A88  ECC3  F00A         	call	___awdiv	;wreg free
  1248  000A8C  C001  F009         	movff	?___awdiv,___awmod@dividend
  1249  000A90  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1250  000A94  0E00               	movlw	0
  1251  000A96  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1252  000A98  0E0A               	movlw	10
  1253  000A9A  6E0B               	movwf	___awmod@divisor^0,c
  1254  000A9C  EC7F  F00B         	call	___awmod	;wreg free
  1255  000AA0  5009               	movf	?___awmod^0,w,c
  1256  000AA2  ECA6  F00C         	call	_ssdDigit
  1257                           
  1258                           ;main.c: 97:                 ssdDigit(((altitude/100)%10),1);
  1259  000AA6  0E01               	movlw	1
  1260  000AA8  6E0F               	movwf	ssdDigit@pos^0,c
  1261  000AAA  0E00               	movlw	0
  1262  000AAC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1263  000AAE  0E64               	movlw	100
  1264  000AB0  6E03               	movwf	___awdiv@divisor^0,c
  1265  000AB2  C03A  F001         	movff	main@altitude,___awdiv@dividend
  1266  000AB6  C03B  F002         	movff	main@altitude+1,___awdiv@dividend+1
  1267  000ABA  ECC3  F00A         	call	___awdiv	;wreg free
  1268  000ABE  C001  F009         	movff	?___awdiv,___awmod@dividend
  1269  000AC2  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1270  000AC6  0E00               	movlw	0
  1271  000AC8  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1272  000ACA  0E0A               	movlw	10
  1273  000ACC  6E0B               	movwf	___awmod@divisor^0,c
  1274  000ACE  EC7F  F00B         	call	___awmod	;wreg free
  1275  000AD2  5009               	movf	?___awmod^0,w,c
  1276  000AD4  ECA6  F00C         	call	_ssdDigit
  1277                           
  1278                           ;main.c: 98:                 ssdDigit(((altitude/1000)%10),0);
  1279  000AD8  0E00               	movlw	0
  1280  000ADA  6E0F               	movwf	ssdDigit@pos^0,c
  1281  000ADC  0E03               	movlw	3
  1282  000ADE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1283  000AE0  0EE8               	movlw	232
  1284  000AE2  6E03               	movwf	___awdiv@divisor^0,c
  1285  000AE4  C03A  F001         	movff	main@altitude,___awdiv@dividend
  1286  000AE8  C03B  F002         	movff	main@altitude+1,___awdiv@dividend+1
  1287  000AEC  ECC3  F00A         	call	___awdiv	;wreg free
  1288  000AF0  C001  F009         	movff	?___awdiv,___awmod@dividend
  1289  000AF4  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1290  000AF8  0E00               	movlw	0
  1291  000AFA  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1292  000AFC  0E0A               	movlw	10
  1293  000AFE  6E0B               	movwf	___awmod@divisor^0,c
  1294  000B00  EC7F  F00B         	call	___awmod	;wreg free
  1295  000B04  5009               	movf	?___awmod^0,w,c
  1296  000B06  ECA6  F00C         	call	_ssdDigit
  1297  000B0A                     l2506:
  1298                           
  1299                           ;main.c: 99:                 slot = 0;
  1300  000B0A  0E00               	movlw	0
  1301  000B0C  6E35               	movwf	main@slot^0,c
  1302                           
  1303                           ;main.c: 100:                 break;
  1304  000B0E  EF9E  F005         	goto	l2514
  1305  000B12                     l2512:
  1306  000B12  5035               	movf	main@slot^0,w,c
  1307  000B14  6E15               	movwf	??_main^0,c
  1308  000B16  6A16               	clrf	(??_main+1)^0,c
  1309                           
  1310                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1311                           ; Switch size 1, requested type "simple"
  1312                           ; Number of cases is 1, Range of values is 0 to 0
  1313                           ; switch strategies available:
  1314                           ; Name         Instructions Cycles
  1315                           ; simple_byte            4     3 (average)
  1316                           ;	Chosen strategy is simple_byte
  1317  000B18  5016               	movf	(??_main+1)^0,w,c
  1318  000B1A  0A00               	xorlw	0	; case 0
  1319  000B1C  B4D8               	btfsc	status,2,c
  1320  000B1E  EF93  F005         	goto	l2544
  1321  000B22  EF85  F005         	goto	l2506
  1322  000B26                     l2544:
  1323                           
  1324                           ; Switch size 1, requested type "simple"
  1325                           ; Number of cases is 2, Range of values is 0 to 1
  1326                           ; switch strategies available:
  1327                           ; Name         Instructions Cycles
  1328                           ; simple_byte            7     4 (average)
  1329                           ;	Chosen strategy is simple_byte
  1330  000B26  5015               	movf	??_main^0,w,c
  1331  000B28  0A00               	xorlw	0	; case 0
  1332  000B2A  B4D8               	btfsc	status,2,c
  1333  000B2C  EF96  F003         	goto	l2414
  1334  000B30  0A01               	xorlw	1	; case 1
  1335  000B32  B4D8               	btfsc	status,2,c
  1336  000B34  EF2B  F005         	goto	l2504
  1337  000B38  EF85  F005         	goto	l2506
  1338  000B3C                     l2514:
  1339                           
  1340                           ;main.c: 105:         if(op==0){
  1341  000B3C  5033               	movf	main@op^0,w,c
  1342  000B3E  A4D8               	btfss	status,2,c
  1343  000B40  EFA4  F005         	goto	u2631
  1344  000B44  EFA6  F005         	goto	u2630
  1345  000B48                     u2631:
  1346  000B48  EFAA  F005         	goto	l2518
  1347  000B4C                     u2630:
  1348  000B4C                     
  1349                           ;main.c: 106:             ssdUpdate();
  1350  000B4C  EC37  F008         	call	_ssdUpdate	;wreg free
  1351                           
  1352                           ;main.c: 107:         }else{
  1353  000B50  EFB2  F005         	goto	l2520
  1354  000B54                     l2518:
  1355                           
  1356                           ;main.c: 108:             PORTD = leds[k];
  1357  000B54  0E1A               	movlw	low main@leds
  1358  000B56  2437               	addwf	main@k^0,w,c
  1359  000B58  6ED9               	movwf	fsr2l,c
  1360  000B5A  6ADA               	clrf	fsr2h,c
  1361  000B5C  0E00               	movlw	high main@leds
  1362  000B5E  22DA               	addwfc	fsr2h,f,c
  1363  000B60  50DF               	movf	indf2,w,c
  1364  000B62  6E83               	movwf	131,c	;volatile
  1365  000B64                     l2520:
  1366                           
  1367                           ;main.c: 110:         mudancaGradual = adcRead(0);
  1368  000B64  0E00               	movlw	0
  1369  000B66  6E02               	movwf	(adcRead@channel+1)^0,c
  1370  000B68  0E00               	movlw	0
  1371  000B6A  6E01               	movwf	adcRead@channel^0,c
  1372  000B6C  EC28  F00D         	call	_adcRead	;wreg free
  1373  000B70  C001  F031         	movff	?_adcRead,main@mudancaGradual
  1374  000B74  C002  F032         	movff	?_adcRead+1,main@mudancaGradual+1
  1375  000B78                     
  1376                           ;main.c: 111:         if(altitude>7000){
  1377  000B78  BE3B               	btfsc	(main@altitude+1)^0,7,c
  1378  000B7A  EFC8  F005         	goto	u2641
  1379  000B7E  0E59               	movlw	89
  1380  000B80  5C3A               	subwf	main@altitude^0,w,c
  1381  000B82  0E1B               	movlw	27
  1382  000B84  583B               	subwfb	(main@altitude+1)^0,w,c
  1383  000B86  A0D8               	btfss	status,0,c
  1384  000B88  EFC8  F005         	goto	u2641
  1385  000B8C  EFCA  F005         	goto	u2640
  1386  000B90                     u2641:
  1387  000B90  EFDA  F005         	goto	l2526
  1388  000B94                     u2640:
  1389  000B94                     
  1390                           ;main.c: 112:             altitude -= mudancaGradual/100;
  1391  000B94  C031  F001         	movff	main@mudancaGradual,___awdiv@dividend
  1392  000B98  C032  F002         	movff	main@mudancaGradual+1,___awdiv@dividend+1
  1393  000B9C  0E00               	movlw	0
  1394  000B9E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1395  000BA0  0E64               	movlw	100
  1396  000BA2  6E03               	movwf	___awdiv@divisor^0,c
  1397  000BA4  ECC3  F00A         	call	___awdiv	;wreg free
  1398  000BA8  5001               	movf	?___awdiv^0,w,c
  1399  000BAA  5E3A               	subwf	main@altitude^0,f,c
  1400  000BAC  5002               	movf	(?___awdiv+1)^0,w,c
  1401  000BAE  5A3B               	subwfb	(main@altitude+1)^0,f,c
  1402                           
  1403                           ;main.c: 113:         }else{
  1404  000BB0  EFDC  F005         	goto	l2528
  1405  000BB4                     l2526:
  1406                           
  1407                           ;main.c: 114:             pwmVal = 0;
  1408  000BB4  0E00               	movlw	0
  1409  000BB6  6E34               	movwf	main@pwmVal^0,c
  1410  000BB8                     l2528:
  1411                           
  1412                           ;main.c: 117:         pwmSet(pwmVal);
  1413  000BB8  5034               	movf	main@pwmVal^0,w,c
  1414  000BBA  EC11  F00C         	call	_pwmSet
  1415  000BBE                     
  1416                           ;main.c: 118:         atraso_ms(20);
  1417  000BBE  0E00               	movlw	0
  1418  000BC0  6E02               	movwf	(atraso_ms@num+1)^0,c
  1419  000BC2  0E14               	movlw	20
  1420  000BC4  6E01               	movwf	atraso_ms@num^0,c
  1421  000BC6  EC47  F00C         	call	_atraso_ms	;wreg free
  1422                           
  1423                           ;main.c: 119:     }
  1424  000BCA  EF89  F005         	goto	l2512
  1425  000BCE  EF00  F000         	goto	start
  1426  000BD2                     __end_of_main:
  1427                           	callstack 0
  1428                           
  1429 ;; *************** function _ssdUpdate *****************
  1430 ;; Defined at:
  1431 ;;		line 50 in file "ssd.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1445 ;;      Params:         0       0       0       0       0       0       0
  1446 ;;      Locals:         0       0       0       0       0       0       0
  1447 ;;      Temps:          2       0       0       0       0       0       0
  1448 ;;      Totals:         2       0       0       0       0       0       0
  1449 ;;Total ram usage:        2 bytes
  1450 ;; Hardware stack levels used: 1
  1451 ;; Hardware stack levels required when called: 3
  1452 ;; This function calls:
  1453 ;;		_digitalWrite
  1454 ;;		_soWrite
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text1
  1461  00106E                     __ptext1:
  1462                           	callstack 0
  1463  00106E                     _ssdUpdate:
  1464                           	callstack 27
  1465  00106E                     
  1466                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  1467  00106E  0E00               	movlw	0
  1468  001070  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1469  001072  0E18               	movlw	24
  1470  001074  6E01               	movwf	digitalWrite@pin^0,c
  1471  001076  0E00               	movlw	0
  1472  001078  6E04               	movwf	(digitalWrite@value+1)^0,c
  1473  00107A  0E00               	movlw	0
  1474  00107C  6E03               	movwf	digitalWrite@value^0,c
  1475  00107E  ECE9  F005         	call	_digitalWrite	;wreg free
  1476                           
  1477                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  1478  001082  0E00               	movlw	0
  1479  001084  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1480  001086  0E19               	movlw	25
  1481  001088  6E01               	movwf	digitalWrite@pin^0,c
  1482  00108A  0E00               	movlw	0
  1483  00108C  6E04               	movwf	(digitalWrite@value+1)^0,c
  1484  00108E  0E00               	movlw	0
  1485  001090  6E03               	movwf	digitalWrite@value^0,c
  1486  001092  ECE9  F005         	call	_digitalWrite	;wreg free
  1487                           
  1488                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  1489  001096  0E00               	movlw	0
  1490  001098  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1491  00109A  0E1A               	movlw	26
  1492  00109C  6E01               	movwf	digitalWrite@pin^0,c
  1493  00109E  0E00               	movlw	0
  1494  0010A0  6E04               	movwf	(digitalWrite@value+1)^0,c
  1495  0010A2  0E00               	movlw	0
  1496  0010A4  6E03               	movwf	digitalWrite@value^0,c
  1497  0010A6  ECE9  F005         	call	_digitalWrite	;wreg free
  1498                           
  1499                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  1500  0010AA  0E00               	movlw	0
  1501  0010AC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1502  0010AE  0E1B               	movlw	27
  1503  0010B0  6E01               	movwf	digitalWrite@pin^0,c
  1504  0010B2  0E00               	movlw	0
  1505  0010B4  6E04               	movwf	(digitalWrite@value+1)^0,c
  1506  0010B6  0E00               	movlw	0
  1507  0010B8  6E03               	movwf	digitalWrite@value^0,c
  1508  0010BA  ECE9  F005         	call	_digitalWrite	;wreg free
  1509                           
  1510                           ;ssd.c: 60:     soWrite(0x00);
  1511  0010BE  0E00               	movlw	0
  1512  0010C0  6E08               	movwf	(soWrite@value+1)^0,c
  1513  0010C2  0E00               	movlw	0
  1514  0010C4  6E07               	movwf	soWrite@value^0,c
  1515  0010C6  EC50  F00D         	call	_soWrite	;wreg free
  1516                           
  1517                           ;ssd.c: 62:     switch (display)
  1518  0010CA  EFCF  F008         	goto	l2250
  1519  0010CE                     l2222:
  1520                           
  1521                           ;ssd.c: 65:             soWrite(valor[v0]);
  1522  0010CE  0E01               	movlw	low _valor
  1523  0010D0  245C               	addwf	_v0^0,w,c
  1524  0010D2  6EF6               	movwf	tblptrl,c
  1525  0010D4  6AF7               	clrf	tblptrh,c
  1526  0010D6  0E06               	movlw	high _valor
  1527  0010D8  22F7               	addwfc	tblptrh,f,c
  1528  0010DA                     	if	0	;There are less than 3 active tblptr bytes
  1529  0010DA                     	endif
  1530  0010DA  0008               	tblrd		*
  1531  0010DC  50F5               	movf	tablat,w,c
  1532  0010DE  6E07               	movwf	soWrite@value^0,c
  1533  0010E0  6A08               	clrf	(soWrite@value+1)^0,c
  1534  0010E2  EC50  F00D         	call	_soWrite	;wreg free
  1535  0010E6                     
  1536                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  1537  0010E6  0E00               	movlw	0
  1538  0010E8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1539  0010EA  0E18               	movlw	24
  1540  0010EC  6E01               	movwf	digitalWrite@pin^0,c
  1541  0010EE  0E00               	movlw	0
  1542  0010F0  6E04               	movwf	(digitalWrite@value+1)^0,c
  1543  0010F2  0E01               	movlw	1
  1544  0010F4  6E03               	movwf	digitalWrite@value^0,c
  1545  0010F6  ECE9  F005         	call	_digitalWrite	;wreg free
  1546  0010FA                     
  1547                           ;ssd.c: 67:             display = 1;
  1548  0010FA  0E01               	movlw	1
  1549  0010FC  6E5D               	movwf	_display^0,c
  1550                           
  1551                           ;ssd.c: 68:             break;
  1552  0010FE  EFEC  F008         	goto	l403
  1553  001102                     l2228:
  1554                           
  1555                           ;ssd.c: 71:             soWrite(valor[v1]);
  1556  001102  0E01               	movlw	low _valor
  1557  001104  245B               	addwf	_v1^0,w,c
  1558  001106  6EF6               	movwf	tblptrl,c
  1559  001108  6AF7               	clrf	tblptrh,c
  1560  00110A  0E06               	movlw	high _valor
  1561  00110C  22F7               	addwfc	tblptrh,f,c
  1562  00110E                     	if	0	;There are less than 3 active tblptr bytes
  1563  00110E                     	endif
  1564  00110E  0008               	tblrd		*
  1565  001110  50F5               	movf	tablat,w,c
  1566  001112  6E07               	movwf	soWrite@value^0,c
  1567  001114  6A08               	clrf	(soWrite@value+1)^0,c
  1568  001116  EC50  F00D         	call	_soWrite	;wreg free
  1569  00111A                     
  1570                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  1571  00111A  0E00               	movlw	0
  1572  00111C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1573  00111E  0E19               	movlw	25
  1574  001120  6E01               	movwf	digitalWrite@pin^0,c
  1575  001122  0E00               	movlw	0
  1576  001124  6E04               	movwf	(digitalWrite@value+1)^0,c
  1577  001126  0E01               	movlw	1
  1578  001128  6E03               	movwf	digitalWrite@value^0,c
  1579  00112A  ECE9  F005         	call	_digitalWrite	;wreg free
  1580  00112E                     
  1581                           ;ssd.c: 73:             display = 2;
  1582  00112E  0E02               	movlw	2
  1583  001130  6E5D               	movwf	_display^0,c
  1584                           
  1585                           ;ssd.c: 74:             break;
  1586  001132  EFEC  F008         	goto	l403
  1587  001136                     l2234:
  1588                           
  1589                           ;ssd.c: 77:             soWrite(valor[v2]);
  1590  001136  0E01               	movlw	low _valor
  1591  001138  245A               	addwf	_v2^0,w,c
  1592  00113A  6EF6               	movwf	tblptrl,c
  1593  00113C  6AF7               	clrf	tblptrh,c
  1594  00113E  0E06               	movlw	high _valor
  1595  001140  22F7               	addwfc	tblptrh,f,c
  1596  001142                     	if	0	;There are less than 3 active tblptr bytes
  1597  001142                     	endif
  1598  001142  0008               	tblrd		*
  1599  001144  50F5               	movf	tablat,w,c
  1600  001146  6E07               	movwf	soWrite@value^0,c
  1601  001148  6A08               	clrf	(soWrite@value+1)^0,c
  1602  00114A  EC50  F00D         	call	_soWrite	;wreg free
  1603  00114E                     
  1604                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  1605  00114E  0E00               	movlw	0
  1606  001150  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1607  001152  0E1A               	movlw	26
  1608  001154  6E01               	movwf	digitalWrite@pin^0,c
  1609  001156  0E00               	movlw	0
  1610  001158  6E04               	movwf	(digitalWrite@value+1)^0,c
  1611  00115A  0E01               	movlw	1
  1612  00115C  6E03               	movwf	digitalWrite@value^0,c
  1613  00115E  ECE9  F005         	call	_digitalWrite	;wreg free
  1614  001162                     
  1615                           ;ssd.c: 79:             display = 3;
  1616  001162  0E03               	movlw	3
  1617  001164  6E5D               	movwf	_display^0,c
  1618                           
  1619                           ;ssd.c: 80:             break;
  1620  001166  EFEC  F008         	goto	l403
  1621  00116A                     l2240:
  1622                           
  1623                           ;ssd.c: 83:             soWrite(valor[v3]);
  1624  00116A  0E01               	movlw	low _valor
  1625  00116C  2459               	addwf	_v3^0,w,c
  1626  00116E  6EF6               	movwf	tblptrl,c
  1627  001170  6AF7               	clrf	tblptrh,c
  1628  001172  0E06               	movlw	high _valor
  1629  001174  22F7               	addwfc	tblptrh,f,c
  1630  001176                     	if	0	;There are less than 3 active tblptr bytes
  1631  001176                     	endif
  1632  001176  0008               	tblrd		*
  1633  001178  50F5               	movf	tablat,w,c
  1634  00117A  6E07               	movwf	soWrite@value^0,c
  1635  00117C  6A08               	clrf	(soWrite@value+1)^0,c
  1636  00117E  EC50  F00D         	call	_soWrite	;wreg free
  1637  001182                     
  1638                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  1639  001182  0E00               	movlw	0
  1640  001184  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1641  001186  0E1B               	movlw	27
  1642  001188  6E01               	movwf	digitalWrite@pin^0,c
  1643  00118A  0E00               	movlw	0
  1644  00118C  6E04               	movwf	(digitalWrite@value+1)^0,c
  1645  00118E  0E01               	movlw	1
  1646  001190  6E03               	movwf	digitalWrite@value^0,c
  1647  001192  ECE9  F005         	call	_digitalWrite	;wreg free
  1648  001196                     l2244:
  1649                           
  1650                           ;ssd.c: 85:             display = 0;
  1651  001196  0E00               	movlw	0
  1652  001198  6E5D               	movwf	_display^0,c
  1653                           
  1654                           ;ssd.c: 86:             break;
  1655  00119A  EFEC  F008         	goto	l403
  1656  00119E                     l2250:
  1657  00119E  505D               	movf	_display^0,w,c
  1658  0011A0  6E0A               	movwf	??_ssdUpdate^0,c
  1659  0011A2  6A0B               	clrf	(??_ssdUpdate+1)^0,c
  1660                           
  1661                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1662                           ; Switch size 1, requested type "simple"
  1663                           ; Number of cases is 1, Range of values is 0 to 0
  1664                           ; switch strategies available:
  1665                           ; Name         Instructions Cycles
  1666                           ; simple_byte            4     3 (average)
  1667                           ;	Chosen strategy is simple_byte
  1668  0011A4  500B               	movf	(??_ssdUpdate+1)^0,w,c
  1669  0011A6  0A00               	xorlw	0	; case 0
  1670  0011A8  B4D8               	btfsc	status,2,c
  1671  0011AA  EFD9  F008         	goto	l2546
  1672  0011AE  EFCB  F008         	goto	l2244
  1673  0011B2                     l2546:
  1674                           
  1675                           ; Switch size 1, requested type "simple"
  1676                           ; Number of cases is 4, Range of values is 0 to 3
  1677                           ; switch strategies available:
  1678                           ; Name         Instructions Cycles
  1679                           ; simple_byte           13     7 (average)
  1680                           ;	Chosen strategy is simple_byte
  1681  0011B2  500A               	movf	??_ssdUpdate^0,w,c
  1682  0011B4  0A00               	xorlw	0	; case 0
  1683  0011B6  B4D8               	btfsc	status,2,c
  1684  0011B8  EF67  F008         	goto	l2222
  1685  0011BC  0A01               	xorlw	1	; case 1
  1686  0011BE  B4D8               	btfsc	status,2,c
  1687  0011C0  EF81  F008         	goto	l2228
  1688  0011C4  0A03               	xorlw	3	; case 2
  1689  0011C6  B4D8               	btfsc	status,2,c
  1690  0011C8  EF9B  F008         	goto	l2234
  1691  0011CC  0A01               	xorlw	1	; case 3
  1692  0011CE  B4D8               	btfsc	status,2,c
  1693  0011D0  EFB5  F008         	goto	l2240
  1694  0011D4  EFCB  F008         	goto	l2244
  1695  0011D8                     l403:
  1696  0011D8  0012               	return		;funcret
  1697  0011DA                     __end_of_ssdUpdate:
  1698                           	callstack 0
  1699                           
  1700 ;; *************** function _ssdInit *****************
  1701 ;; Defined at:
  1702 ;;		line 94 in file "ssd.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;		None
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1716 ;;      Params:         0       0       0       0       0       0       0
  1717 ;;      Locals:         0       0       0       0       0       0       0
  1718 ;;      Temps:          0       0       0       0       0       0       0
  1719 ;;      Totals:         0       0       0       0       0       0       0
  1720 ;;Total ram usage:        0 bytes
  1721 ;; Hardware stack levels used: 1
  1722 ;; Hardware stack levels required when called: 2
  1723 ;; This function calls:
  1724 ;;		_pinMode
  1725 ;;		_soInit
  1726 ;; This function is called by:
  1727 ;;		_main
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text2
  1732  0019A4                     __ptext2:
  1733                           	callstack 0
  1734  0019A4                     _ssdInit:
  1735                           	callstack 28
  1736  0019A4                     
  1737                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  1738  0019A4  0E00               	movlw	0
  1739  0019A6  6E02               	movwf	(pinMode@pin+1)^0,c
  1740  0019A8  0E18               	movlw	24
  1741  0019AA  6E01               	movwf	pinMode@pin^0,c
  1742  0019AC  0E00               	movlw	0
  1743  0019AE  6E04               	movwf	(pinMode@type+1)^0,c
  1744  0019B0  0E00               	movlw	0
  1745  0019B2  6E03               	movwf	pinMode@type^0,c
  1746  0019B4  EC10  F007         	call	_pinMode	;wreg free
  1747                           
  1748                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  1749  0019B8  0E00               	movlw	0
  1750  0019BA  6E02               	movwf	(pinMode@pin+1)^0,c
  1751  0019BC  0E19               	movlw	25
  1752  0019BE  6E01               	movwf	pinMode@pin^0,c
  1753  0019C0  0E00               	movlw	0
  1754  0019C2  6E04               	movwf	(pinMode@type+1)^0,c
  1755  0019C4  0E00               	movlw	0
  1756  0019C6  6E03               	movwf	pinMode@type^0,c
  1757  0019C8  EC10  F007         	call	_pinMode	;wreg free
  1758                           
  1759                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  1760  0019CC  0E00               	movlw	0
  1761  0019CE  6E02               	movwf	(pinMode@pin+1)^0,c
  1762  0019D0  0E1A               	movlw	26
  1763  0019D2  6E01               	movwf	pinMode@pin^0,c
  1764  0019D4  0E00               	movlw	0
  1765  0019D6  6E04               	movwf	(pinMode@type+1)^0,c
  1766  0019D8  0E00               	movlw	0
  1767  0019DA  6E03               	movwf	pinMode@type^0,c
  1768  0019DC  EC10  F007         	call	_pinMode	;wreg free
  1769                           
  1770                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  1771  0019E0  0E00               	movlw	0
  1772  0019E2  6E02               	movwf	(pinMode@pin+1)^0,c
  1773  0019E4  0E1B               	movlw	27
  1774  0019E6  6E01               	movwf	pinMode@pin^0,c
  1775  0019E8  0E00               	movlw	0
  1776  0019EA  6E04               	movwf	(pinMode@type+1)^0,c
  1777  0019EC  0E00               	movlw	0
  1778  0019EE  6E03               	movwf	pinMode@type^0,c
  1779  0019F0  EC10  F007         	call	_pinMode	;wreg free
  1780                           
  1781                           ;ssd.c: 102:     soInit();
  1782  0019F4  ECBC  F00D         	call	_soInit	;wreg free
  1783  0019F8  0012               	return		;funcret
  1784  0019FA                     __end_of_ssdInit:
  1785                           	callstack 0
  1786                           
  1787 ;; *************** function _ssdDigit *****************
  1788 ;; Defined at:
  1789 ;;		line 34 in file "ssd.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;  val             1    wreg     unsigned char 
  1792 ;;  pos             1   14[COMRAM] unsigned char 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  val             1   15[COMRAM] unsigned char 
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		wreg, status,2, status,0
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1804 ;;      Params:         1       0       0       0       0       0       0
  1805 ;;      Locals:         1       0       0       0       0       0       0
  1806 ;;      Temps:          0       0       0       0       0       0       0
  1807 ;;      Totals:         2       0       0       0       0       0       0
  1808 ;;Total ram usage:        2 bytes
  1809 ;; Hardware stack levels used: 1
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_main
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text3
  1818  00194C                     __ptext3:
  1819                           	callstack 0
  1820  00194C                     _ssdDigit:
  1821                           	callstack 30
  1822                           
  1823                           ;incstack = 0
  1824                           ;ssdDigit@val stored from wreg
  1825  00194C  6E10               	movwf	ssdDigit@val^0,c
  1826  00194E                     
  1827                           ;ssd.c: 35:     if (pos == 0) {
  1828  00194E  500F               	movf	ssdDigit@pos^0,w,c
  1829  001950  A4D8               	btfss	status,2,c
  1830  001952  EFAD  F00C         	goto	u2131
  1831  001956  EFAF  F00C         	goto	u2130
  1832  00195A                     u2131:
  1833  00195A  EFB1  F00C         	goto	l2208
  1834  00195E                     u2130:
  1835  00195E                     
  1836                           ;ssd.c: 36:         v0 = val;
  1837  00195E  C010  F05C         	movff	ssdDigit@val,_v0
  1838  001962                     l2208:
  1839                           
  1840                           ;ssd.c: 38:     if (pos == 1) {
  1841  001962  040F               	decf	ssdDigit@pos^0,w,c
  1842  001964  A4D8               	btfss	status,2,c
  1843  001966  EFB7  F00C         	goto	u2141
  1844  00196A  EFB9  F00C         	goto	u2140
  1845  00196E                     u2141:
  1846  00196E  EFBB  F00C         	goto	l2212
  1847  001972                     u2140:
  1848  001972                     
  1849                           ;ssd.c: 39:         v1 = val;
  1850  001972  C010  F05B         	movff	ssdDigit@val,_v1
  1851  001976                     l2212:
  1852                           
  1853                           ;ssd.c: 41:     if (pos == 2) {
  1854  001976  0E02               	movlw	2
  1855  001978  180F               	xorwf	ssdDigit@pos^0,w,c
  1856  00197A  A4D8               	btfss	status,2,c
  1857  00197C  EFC2  F00C         	goto	u2151
  1858  001980  EFC4  F00C         	goto	u2150
  1859  001984                     u2151:
  1860  001984  EFC6  F00C         	goto	l2216
  1861  001988                     u2150:
  1862  001988                     
  1863                           ;ssd.c: 42:         v2 = val;
  1864  001988  C010  F05A         	movff	ssdDigit@val,_v2
  1865  00198C                     l2216:
  1866                           
  1867                           ;ssd.c: 44:     if (pos == 3) {
  1868  00198C  0E03               	movlw	3
  1869  00198E  180F               	xorwf	ssdDigit@pos^0,w,c
  1870  001990  A4D8               	btfss	status,2,c
  1871  001992  EFCD  F00C         	goto	u2161
  1872  001996  EFCF  F00C         	goto	u2160
  1873  00199A                     u2161:
  1874  00199A  EFD1  F00C         	goto	l393
  1875  00199E                     u2160:
  1876  00199E                     
  1877                           ;ssd.c: 45:         v3 = val;
  1878  00199E  C010  F059         	movff	ssdDigit@val,_v3
  1879  0019A2                     l393:
  1880  0019A2  0012               	return		;funcret
  1881  0019A4                     __end_of_ssdDigit:
  1882                           	callstack 0
  1883                           
  1884 ;; *************** function _pwmSet *****************
  1885 ;; Defined at:
  1886 ;;		line 24 in file "pwm.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;  porcento        1    wreg     unsigned char 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  porcento        1    9[COMRAM] unsigned char 
  1891 ;;  val             2   10[COMRAM] unsigned int 
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1901 ;;      Params:         0       0       0       0       0       0       0
  1902 ;;      Locals:         3       0       0       0       0       0       0
  1903 ;;      Temps:          2       0       0       0       0       0       0
  1904 ;;      Totals:         5       0       0       0       0       0       0
  1905 ;;Total ram usage:        5 bytes
  1906 ;; Hardware stack levels used: 1
  1907 ;; Hardware stack levels required when called: 1
  1908 ;; This function calls:
  1909 ;;		___lwdiv
  1910 ;;		___wmul
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text4
  1917  001822                     __ptext4:
  1918                           	callstack 0
  1919  001822                     _pwmSet:
  1920                           	callstack 29
  1921                           
  1922                           ;incstack = 0
  1923                           ;pwmSet@porcento stored from wreg
  1924  001822  6E0A               	movwf	pwmSet@porcento^0,c
  1925  001824                     
  1926                           ;pwm.c: 24: void pwmSet(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int va
      +                          l = ((unsigned int)porcento) *(PR2+1);
  1927  001824  0E01               	movlw	1
  1928  001826  24CB               	addwf	203,w,c	;volatile
  1929  001828  6E01               	movwf	___wmul@multiplier^0,c
  1930  00182A  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1931  00182C  0E00               	movlw	0
  1932  00182E  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  1933  001830  C00A  F003         	movff	pwmSet@porcento,___wmul@multiplicand
  1934  001834  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  1935  001836  EC6E  F00E         	call	___wmul	;wreg free
  1936  00183A  C001  F00B         	movff	?___wmul,pwmSet@val
  1937  00183E  C002  F00C         	movff	?___wmul+1,pwmSet@val+1
  1938  001842                     
  1939                           ;pwm.c: 33:     val = val / 25;
  1940  001842  C00B  F001         	movff	pwmSet@val,___lwdiv@dividend
  1941  001846  C00C  F002         	movff	pwmSet@val+1,___lwdiv@dividend+1
  1942  00184A  0E00               	movlw	0
  1943  00184C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1944  00184E  0E19               	movlw	25
  1945  001850  6E03               	movwf	___lwdiv@divisor^0,c
  1946  001852  ECD7  F00B         	call	___lwdiv	;wreg free
  1947  001856  C001  F00B         	movff	?___lwdiv,pwmSet@val
  1948  00185A  C002  F00C         	movff	?___lwdiv+1,pwmSet@val+1
  1949  00185E                     
  1950                           ;pwm.c: 35:  val &= 0x03ff;
  1951  00185E  0EFF               	movlw	255
  1952  001860  160B               	andwf	pwmSet@val^0,f,c
  1953  001862  0E03               	movlw	3
  1954  001864  160C               	andwf	(pwmSet@val+1)^0,f,c
  1955  001866                     
  1956                           ;pwm.c: 37:  CCPR2L = val >> 2;
  1957  001866  C00B  F008         	movff	pwmSet@val,??_pwmSet
  1958  00186A  C00C  F009         	movff	pwmSet@val+1,??_pwmSet+1
  1959  00186E  90D8               	bcf	status,0,c
  1960  001870  3209               	rrcf	(??_pwmSet+1)^0,f,c
  1961  001872  3208               	rrcf	??_pwmSet^0,f,c
  1962  001874  90D8               	bcf	status,0,c
  1963  001876  3209               	rrcf	(??_pwmSet+1)^0,f,c
  1964  001878  3208               	rrcf	??_pwmSet^0,f,c
  1965  00187A  5008               	movf	??_pwmSet^0,w,c
  1966  00187C  6EBB               	movwf	187,c	;volatile
  1967  00187E                     
  1968                           ;pwm.c: 39:  CCP2CON |= (val & 0x0003) << 4;
  1969  00187E  C00B  F008         	movff	pwmSet@val,??_pwmSet	;volatile
  1970  001882  0E03               	movlw	3
  1971  001884  1608               	andwf	??_pwmSet^0,f,c
  1972  001886  3808               	swapf	??_pwmSet^0,w,c
  1973  001888  0BF0               	andlw	240
  1974  00188A  12BA               	iorwf	186,f,c	;volatile
  1975  00188C  0012               	return		;funcret
  1976  00188E                     __end_of_pwmSet:
  1977                           	callstack 0
  1978                           
  1979 ;; *************** function ___wmul *****************
  1980 ;; Defined at:
  1981 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  multiplier      2    0[COMRAM] unsigned int 
  1984 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  product         2    4[COMRAM] unsigned int 
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  2    0[COMRAM] unsigned int 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2, status,0, prodl, prodh
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1996 ;;      Params:         4       0       0       0       0       0       0
  1997 ;;      Locals:         2       0       0       0       0       0       0
  1998 ;;      Temps:          0       0       0       0       0       0       0
  1999 ;;      Totals:         6       0       0       0       0       0       0
  2000 ;;Total ram usage:        6 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_pwmSet
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text5
  2010  001CDC                     __ptext5:
  2011                           	callstack 0
  2012  001CDC                     ___wmul:
  2013                           	callstack 29
  2014  001CDC  5001               	movf	___wmul@multiplier^0,w,c
  2015  001CDE  0203               	mulwf	___wmul@multiplicand^0,c
  2016  001CE0  CFF3 F005          	movff	prodl,___wmul@product
  2017  001CE4  CFF4 F006          	movff	prodh,___wmul@product+1
  2018  001CE8  5001               	movf	___wmul@multiplier^0,w,c
  2019  001CEA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2020  001CEC  50F3               	movf	243,w,c
  2021  001CEE  2606               	addwf	(___wmul@product+1)^0,f,c
  2022  001CF0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2023  001CF2  0203               	mulwf	___wmul@multiplicand^0,c
  2024  001CF4  50F3               	movf	243,w,c
  2025  001CF6  2606               	addwf	(___wmul@product+1)^0,f,c
  2026  001CF8  C005  F001         	movff	___wmul@product,?___wmul
  2027  001CFC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2028  001D00  0012               	return		;funcret
  2029  001D02                     __end_of___wmul:
  2030                           	callstack 0
  2031                           
  2032 ;; *************** function ___lwdiv *****************
  2033 ;; Defined at:
  2034 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  dividend        2    0[COMRAM] unsigned int 
  2037 ;;  divisor         2    2[COMRAM] unsigned int 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  quotient        2    4[COMRAM] unsigned int 
  2040 ;;  counter         1    6[COMRAM] unsigned char 
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  2    0[COMRAM] unsigned int 
  2043 ;; Registers used:
  2044 ;;		wreg, status,2, status,0
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2050 ;;      Params:         4       0       0       0       0       0       0
  2051 ;;      Locals:         3       0       0       0       0       0       0
  2052 ;;      Temps:          0       0       0       0       0       0       0
  2053 ;;      Totals:         7       0       0       0       0       0       0
  2054 ;;Total ram usage:        7 bytes
  2055 ;; Hardware stack levels used: 1
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_pwmSet
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text6
  2064  0017AE                     __ptext6:
  2065                           	callstack 0
  2066  0017AE                     ___lwdiv:
  2067                           	callstack 29
  2068  0017AE  0E00               	movlw	0
  2069  0017B0  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2070  0017B2  0E00               	movlw	0
  2071  0017B4  6E05               	movwf	___lwdiv@quotient^0,c
  2072  0017B6  5003               	movf	___lwdiv@divisor^0,w,c
  2073  0017B8  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2074  0017BA  B4D8               	btfsc	status,2,c
  2075  0017BC  EFE2  F00B         	goto	u1941
  2076  0017C0  EFE4  F00B         	goto	u1940
  2077  0017C4                     u1941:
  2078  0017C4  EF0C  F00C         	goto	l900
  2079  0017C8                     u1940:
  2080  0017C8  0E01               	movlw	1
  2081  0017CA  6E07               	movwf	___lwdiv@counter^0,c
  2082  0017CC  EFEC  F00B         	goto	l2054
  2083  0017D0                     l2052:
  2084  0017D0  90D8               	bcf	status,0,c
  2085  0017D2  3603               	rlcf	___lwdiv@divisor^0,f,c
  2086  0017D4  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2087  0017D6  2A07               	incf	___lwdiv@counter^0,f,c
  2088  0017D8                     l2054:
  2089  0017D8  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2090  0017DA  EFF1  F00B         	goto	u1951
  2091  0017DE  EFF3  F00B         	goto	u1950
  2092  0017E2                     u1951:
  2093  0017E2  EFE8  F00B         	goto	l2052
  2094  0017E6                     u1950:
  2095  0017E6                     l2056:
  2096  0017E6  90D8               	bcf	status,0,c
  2097  0017E8  3605               	rlcf	___lwdiv@quotient^0,f,c
  2098  0017EA  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2099  0017EC  5003               	movf	___lwdiv@divisor^0,w,c
  2100  0017EE  5C01               	subwf	___lwdiv@dividend^0,w,c
  2101  0017F0  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2102  0017F2  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2103  0017F4  A0D8               	btfss	status,0,c
  2104  0017F6  EFFF  F00B         	goto	u1961
  2105  0017FA  EF01  F00C         	goto	u1960
  2106  0017FE                     u1961:
  2107  0017FE  EF06  F00C         	goto	l2064
  2108  001802                     u1960:
  2109  001802  5003               	movf	___lwdiv@divisor^0,w,c
  2110  001804  5E01               	subwf	___lwdiv@dividend^0,f,c
  2111  001806  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2112  001808  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2113  00180A  8005               	bsf	___lwdiv@quotient^0,0,c
  2114  00180C                     l2064:
  2115  00180C  90D8               	bcf	status,0,c
  2116  00180E  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2117  001810  3203               	rrcf	___lwdiv@divisor^0,f,c
  2118  001812  2E07               	decfsz	___lwdiv@counter^0,f,c
  2119  001814  EFF3  F00B         	goto	l2056
  2120  001818                     l900:
  2121  001818  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2122  00181C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2123  001820  0012               	return		;funcret
  2124  001822                     __end_of___lwdiv:
  2125                           	callstack 0
  2126                           
  2127 ;; *************** function _pwmInit *****************
  2128 ;; Defined at:
  2129 ;;		line 51 in file "pwm.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2143 ;;      Params:         0       0       0       0       0       0       0
  2144 ;;      Locals:         0       0       0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0
  2146 ;;      Totals:         0       0       0       0       0       0       0
  2147 ;;Total ram usage:        0 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; Hardware stack levels required when called: 2
  2150 ;; This function calls:
  2151 ;;		_pwmFrequency
  2152 ;; This function is called by:
  2153 ;;		_main
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text7
  2158  001D8A                     __ptext7:
  2159                           	callstack 0
  2160  001D8A                     _pwmInit:
  2161                           	callstack 28
  2162  001D8A                     
  2163                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(1)));
  2164  001D8A  9294               	bcf	148,1,c	;volatile
  2165  001D8C                     
  2166                           ;pwm.c: 55:  T2CON |= 0b00000011;
  2167  001D8C  0E03               	movlw	3
  2168  001D8E  12CA               	iorwf	202,f,c	;volatile
  2169  001D90                     
  2170                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
  2171  001D90  84CA               	bsf	202,2,c	;volatile
  2172  001D92                     
  2173                           ;pwm.c: 58:  CCP2CON = 0b00001100;
  2174  001D92  0E0C               	movlw	12
  2175  001D94  6EBA               	movwf	186,c	;volatile
  2176  001D96                     
  2177                           ;pwm.c: 60:     pwmFrequency(100);
  2178  001D96  0E00               	movlw	0
  2179  001D98  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  2180  001D9A  0E64               	movlw	100
  2181  001D9C  6E0F               	movwf	pwmFrequency@freq^0,c
  2182  001D9E  EC81  F00E         	call	_pwmFrequency	;wreg free
  2183  001DA2  0012               	return		;funcret
  2184  001DA4                     __end_of_pwmInit:
  2185                           	callstack 0
  2186                           
  2187 ;; *************** function _pwmFrequency *****************
  2188 ;; Defined at:
  2189 ;;		line 44 in file "pwm.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;  freq            2   14[COMRAM] unsigned int 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;		None
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      void 
  2196 ;; Registers used:
  2197 ;;		wreg, status,2, status,0, cstack
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2203 ;;      Params:         2       0       0       0       0       0       0
  2204 ;;      Locals:         0       0       0       0       0       0       0
  2205 ;;      Temps:          0       0       0       0       0       0       0
  2206 ;;      Totals:         2       0       0       0       0       0       0
  2207 ;;Total ram usage:        2 bytes
  2208 ;; Hardware stack levels used: 1
  2209 ;; Hardware stack levels required when called: 1
  2210 ;; This function calls:
  2211 ;;		___aldiv
  2212 ;; This function is called by:
  2213 ;;		_pwmInit
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text8
  2218  001D02                     __ptext8:
  2219                           	callstack 0
  2220  001D02                     _pwmFrequency:
  2221                           	callstack 28
  2222  001D02                     
  2223                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  2224  001D02  0E48               	movlw	72
  2225  001D04  6E01               	movwf	___aldiv@dividend^0,c
  2226  001D06  0EE8               	movlw	232
  2227  001D08  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2228  001D0A  0E01               	movlw	1
  2229  001D0C  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2230  001D0E  0E00               	movlw	0
  2231  001D10  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2232  001D12  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  2233  001D16  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  2234  001D1A  6A07               	clrf	(___aldiv@divisor+2)^0,c
  2235  001D1C  6A08               	clrf	(___aldiv@divisor+3)^0,c
  2236  001D1E  EC3D  F00A         	call	___aldiv	;wreg free
  2237  001D22  0401               	decf	?___aldiv^0,w,c
  2238  001D24  6ECB               	movwf	203,c	;volatile
  2239  001D26  0012               	return		;funcret
  2240  001D28                     __end_of_pwmFrequency:
  2241                           	callstack 0
  2242                           
  2243 ;; *************** function ___aldiv *****************
  2244 ;; Defined at:
  2245 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  dividend        4    0[COMRAM] long 
  2248 ;;  divisor         4    4[COMRAM] long 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  quotient        4   10[COMRAM] long 
  2251 ;;  sign            1    9[COMRAM] unsigned char 
  2252 ;;  counter         1    8[COMRAM] unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  4    0[COMRAM] long 
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2262 ;;      Params:         8       0       0       0       0       0       0
  2263 ;;      Locals:         6       0       0       0       0       0       0
  2264 ;;      Temps:          0       0       0       0       0       0       0
  2265 ;;      Totals:        14       0       0       0       0       0       0
  2266 ;;Total ram usage:       14 bytes
  2267 ;; Hardware stack levels used: 1
  2268 ;; This function calls:
  2269 ;;		Nothing
  2270 ;; This function is called by:
  2271 ;;		_pwmFrequency
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text9
  2276  00147A                     __ptext9:
  2277                           	callstack 0
  2278  00147A                     ___aldiv:
  2279                           	callstack 28
  2280  00147A  0E00               	movlw	0
  2281  00147C  6E0A               	movwf	___aldiv@sign^0,c
  2282  00147E  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2283  001480  EF46  F00A         	goto	u1780
  2284  001484  EF44  F00A         	goto	u1781
  2285  001488                     u1781:
  2286  001488  EF50  F00A         	goto	l1954
  2287  00148C                     u1780:
  2288  00148C  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2289  00148E  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2290  001490  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2291  001492  6C05               	negf	___aldiv@divisor^0,c
  2292  001494  0E00               	movlw	0
  2293  001496  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2294  001498  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2295  00149A  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2296  00149C  0E01               	movlw	1
  2297  00149E  6E0A               	movwf	___aldiv@sign^0,c
  2298  0014A0                     l1954:
  2299  0014A0  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2300  0014A2  EF57  F00A         	goto	u1790
  2301  0014A6  EF55  F00A         	goto	u1791
  2302  0014AA                     u1791:
  2303  0014AA  EF61  F00A         	goto	l1960
  2304  0014AE                     u1790:
  2305  0014AE  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2306  0014B0  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2307  0014B2  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2308  0014B4  6C01               	negf	___aldiv@dividend^0,c
  2309  0014B6  0E00               	movlw	0
  2310  0014B8  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2311  0014BA  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2312  0014BC  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2313  0014BE  0E01               	movlw	1
  2314  0014C0  1A0A               	xorwf	___aldiv@sign^0,f,c
  2315  0014C2                     l1960:
  2316  0014C2  0E00               	movlw	0
  2317  0014C4  6E0B               	movwf	___aldiv@quotient^0,c
  2318  0014C6  0E00               	movlw	0
  2319  0014C8  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2320  0014CA  0E00               	movlw	0
  2321  0014CC  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2322  0014CE  0E00               	movlw	0
  2323  0014D0  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2324  0014D2  5005               	movf	___aldiv@divisor^0,w,c
  2325  0014D4  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2326  0014D6  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2327  0014D8  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2328  0014DA  B4D8               	btfsc	status,2,c
  2329  0014DC  EF72  F00A         	goto	u1801
  2330  0014E0  EF74  F00A         	goto	u1800
  2331  0014E4                     u1801:
  2332  0014E4  EFAA  F00A         	goto	l1982
  2333  0014E8                     u1800:
  2334  0014E8  0E01               	movlw	1
  2335  0014EA  6E09               	movwf	___aldiv@counter^0,c
  2336  0014EC  EF7E  F00A         	goto	l1968
  2337  0014F0                     l1966:
  2338  0014F0  90D8               	bcf	status,0,c
  2339  0014F2  3605               	rlcf	___aldiv@divisor^0,f,c
  2340  0014F4  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2341  0014F6  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2342  0014F8  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2343  0014FA  2A09               	incf	___aldiv@counter^0,f,c
  2344  0014FC                     l1968:
  2345  0014FC  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2346  0014FE  EF83  F00A         	goto	u1811
  2347  001502  EF85  F00A         	goto	u1810
  2348  001506                     u1811:
  2349  001506  EF78  F00A         	goto	l1966
  2350  00150A                     u1810:
  2351  00150A                     l1970:
  2352  00150A  90D8               	bcf	status,0,c
  2353  00150C  360B               	rlcf	___aldiv@quotient^0,f,c
  2354  00150E  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2355  001510  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2356  001512  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2357  001514  5005               	movf	___aldiv@divisor^0,w,c
  2358  001516  5C01               	subwf	___aldiv@dividend^0,w,c
  2359  001518  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2360  00151A  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2361  00151C  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2362  00151E  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2363  001520  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2364  001522  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2365  001524  A0D8               	btfss	status,0,c
  2366  001526  EF97  F00A         	goto	u1821
  2367  00152A  EF99  F00A         	goto	u1820
  2368  00152E                     u1821:
  2369  00152E  EFA2  F00A         	goto	l1978
  2370  001532                     u1820:
  2371  001532  5005               	movf	___aldiv@divisor^0,w,c
  2372  001534  5E01               	subwf	___aldiv@dividend^0,f,c
  2373  001536  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2374  001538  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2375  00153A  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2376  00153C  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2377  00153E  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2378  001540  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2379  001542  800B               	bsf	___aldiv@quotient^0,0,c
  2380  001544                     l1978:
  2381  001544  90D8               	bcf	status,0,c
  2382  001546  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2383  001548  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2384  00154A  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2385  00154C  3205               	rrcf	___aldiv@divisor^0,f,c
  2386  00154E  2E09               	decfsz	___aldiv@counter^0,f,c
  2387  001550  EF85  F00A         	goto	l1970
  2388  001554                     l1982:
  2389  001554  500A               	movf	___aldiv@sign^0,w,c
  2390  001556  B4D8               	btfsc	status,2,c
  2391  001558  EFB0  F00A         	goto	u1831
  2392  00155C  EFB2  F00A         	goto	u1830
  2393  001560                     u1831:
  2394  001560  EFBA  F00A         	goto	l1986
  2395  001564                     u1830:
  2396  001564  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2397  001566  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2398  001568  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2399  00156A  6C0B               	negf	___aldiv@quotient^0,c
  2400  00156C  0E00               	movlw	0
  2401  00156E  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2402  001570  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2403  001572  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2404  001574                     l1986:
  2405  001574  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2406  001578  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2407  00157C  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2408  001580  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2409  001584  0012               	return		;funcret
  2410  001586                     __end_of___aldiv:
  2411                           	callstack 0
  2412                           
  2413 ;; *************** function _lcdString *****************
  2414 ;; Defined at:
  2415 ;;		line 57 in file "lcd.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  msg             2   14[COMRAM] PTR unsigned char 
  2418 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  2419 ;;		 -> STR_3(16), STR_2(8), STR_1(16), 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  i               2   18[COMRAM] int 
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2431 ;;      Params:         2       0       0       0       0       0       0
  2432 ;;      Locals:         2       0       0       0       0       0       0
  2433 ;;      Temps:          2       0       0       0       0       0       0
  2434 ;;      Totals:         6       0       0       0       0       0       0
  2435 ;;Total ram usage:        6 bytes
  2436 ;; Hardware stack levels used: 1
  2437 ;; Hardware stack levels required when called: 5
  2438 ;; This function calls:
  2439 ;;		_lcdChar
  2440 ;; This function is called by:
  2441 ;;		_main
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text10
  2446  0019FA                     __ptext10:
  2447                           	callstack 0
  2448  0019FA                     _lcdString:
  2449                           	callstack 25
  2450  0019FA                     
  2451                           ;lcd.c: 58:  int i = 0;
  2452  0019FA  0E00               	movlw	0
  2453  0019FC  6E14               	movwf	(lcdString@i+1)^0,c
  2454  0019FE  0E00               	movlw	0
  2455  001A00  6E13               	movwf	lcdString@i^0,c
  2456                           
  2457                           ;lcd.c: 59:  while (msg[i] != 0) {
  2458  001A02  EF13  F00D         	goto	l2164
  2459  001A06                     l2160:
  2460                           
  2461                           ;lcd.c: 60:   lcdChar(msg[i]);
  2462  001A06  5013               	movf	lcdString@i^0,w,c
  2463  001A08  240F               	addwf	lcdString@msg^0,w,c
  2464  001A0A  6E11               	movwf	??_lcdString^0,c
  2465  001A0C  5014               	movf	(lcdString@i+1)^0,w,c
  2466  001A0E  2010               	addwfc	(lcdString@msg+1)^0,w,c
  2467  001A10  6E12               	movwf	(??_lcdString+1)^0,c
  2468  001A12  C011  FFF6         	movff	??_lcdString,tblptrl
  2469  001A16  C012  FFF7         	movff	??_lcdString+1,tblptrh
  2470  001A1A                     	if	0	;tblptru may be non-zero
  2471  001A1A                     	endif
  2472  001A1A                     	if	0	;tblptru may be non-zero
  2473  001A1A                     	endif
  2474  001A1A  0008               	tblrd		*
  2475  001A1C  50F5               	movf	tablat,w,c
  2476  001A1E  ECA7  F00E         	call	_lcdChar
  2477  001A22                     
  2478                           ;lcd.c: 61:   i++;
  2479  001A22  4A13               	infsnz	lcdString@i^0,f,c
  2480  001A24  2A14               	incf	(lcdString@i+1)^0,f,c
  2481  001A26                     l2164:
  2482                           
  2483                           ;lcd.c: 59:  while (msg[i] != 0) {
  2484  001A26  5013               	movf	lcdString@i^0,w,c
  2485  001A28  240F               	addwf	lcdString@msg^0,w,c
  2486  001A2A  6E11               	movwf	??_lcdString^0,c
  2487  001A2C  5014               	movf	(lcdString@i+1)^0,w,c
  2488  001A2E  2010               	addwfc	(lcdString@msg+1)^0,w,c
  2489  001A30  6E12               	movwf	(??_lcdString+1)^0,c
  2490  001A32  C011  FFF6         	movff	??_lcdString,tblptrl
  2491  001A36  C012  FFF7         	movff	??_lcdString+1,tblptrh
  2492  001A3A                     	if	0	;tblptru may be non-zero
  2493  001A3A                     	endif
  2494  001A3A                     	if	0	;tblptru may be non-zero
  2495  001A3A                     	endif
  2496  001A3A  0008               	tblrd		*
  2497  001A3C  50F5               	movf	tablat,w,c
  2498  001A3E  0900               	iorlw	0
  2499  001A40  A4D8               	btfss	status,2,c
  2500  001A42  EF25  F00D         	goto	u2121
  2501  001A46  EF27  F00D         	goto	u2120
  2502  001A4A                     u2121:
  2503  001A4A  EF03  F00D         	goto	l2160
  2504  001A4E                     u2120:
  2505  001A4E  0012               	return		;funcret
  2506  001A50                     __end_of_lcdString:
  2507                           	callstack 0
  2508                           
  2509 ;; *************** function _lcdChar *****************
  2510 ;; Defined at:
  2511 ;;		line 52 in file "lcd.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;  value           1    wreg     unsigned char 
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;  value           1   13[COMRAM] unsigned char 
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      void 
  2518 ;; Registers used:
  2519 ;;		wreg, status,2, status,0, cstack
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2525 ;;      Params:         0       0       0       0       0       0       0
  2526 ;;      Locals:         1       0       0       0       0       0       0
  2527 ;;      Temps:          0       0       0       0       0       0       0
  2528 ;;      Totals:         1       0       0       0       0       0       0
  2529 ;;Total ram usage:        1 bytes
  2530 ;; Hardware stack levels used: 1
  2531 ;; Hardware stack levels required when called: 4
  2532 ;; This function calls:
  2533 ;;		_delayMicro
  2534 ;;		_pushByte
  2535 ;; This function is called by:
  2536 ;;		_lcdString
  2537 ;;		_lcdNumber
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           	psect	text11
  2542  001D4E                     __ptext11:
  2543                           	callstack 0
  2544  001D4E                     _lcdChar:
  2545                           	callstack 25
  2546                           
  2547                           ;incstack = 0
  2548                           ;lcdChar@value stored from wreg
  2549  001D4E  6E0E               	movwf	lcdChar@value^0,c
  2550  001D50                     
  2551                           ;lcd.c: 53:  pushByte(value, 1);
  2552  001D50  0E00               	movlw	0
  2553  001D52  6E0B               	movwf	(pushByte@rs+1)^0,c
  2554  001D54  0E01               	movlw	1
  2555  001D56  6E0A               	movwf	pushByte@rs^0,c
  2556  001D58  500E               	movf	lcdChar@value^0,w,c
  2557  001D5A  EC79  F00C         	call	_pushByte
  2558  001D5E                     
  2559                           ;lcd.c: 54:  delayMicro(80);
  2560  001D5E  0E00               	movlw	0
  2561  001D60  6E02               	movwf	(delayMicro@a+1)^0,c
  2562  001D62  0E50               	movlw	80
  2563  001D64  6E01               	movwf	delayMicro@a^0,c
  2564  001D66  ECE3  F00E         	call	_delayMicro	;wreg free
  2565  001D6A  0012               	return		;funcret
  2566  001D6C                     __end_of_lcdChar:
  2567                           	callstack 0
  2568                           
  2569 ;; *************** function _lcdPosition *****************
  2570 ;; Defined at:
  2571 ;;		line 44 in file "lcd.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  line            2   14[COMRAM] int 
  2574 ;;  col             2   16[COMRAM] int 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;		None
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      void 
  2579 ;; Registers used:
  2580 ;;		wreg, status,2, status,0, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2586 ;;      Params:         4       0       0       0       0       0       0
  2587 ;;      Locals:         0       0       0       0       0       0       0
  2588 ;;      Temps:          0       0       0       0       0       0       0
  2589 ;;      Totals:         4       0       0       0       0       0       0
  2590 ;;Total ram usage:        4 bytes
  2591 ;; Hardware stack levels used: 1
  2592 ;; Hardware stack levels required when called: 5
  2593 ;; This function calls:
  2594 ;;		_lcdCommand
  2595 ;; This function is called by:
  2596 ;;		_main
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           	psect	text12
  2601  001BB6                     __ptext12:
  2602                           	callstack 0
  2603  001BB6                     _lcdPosition:
  2604                           	callstack 25
  2605  001BB6                     
  2606                           ;lcd.c: 45:  if (line == 0) {
  2607  001BB6  500F               	movf	lcdPosition@line^0,w,c
  2608  001BB8  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  2609  001BBA  A4D8               	btfss	status,2,c
  2610  001BBC  EFE2  F00D         	goto	u2101
  2611  001BC0  EFE4  F00D         	goto	u2100
  2612  001BC4                     u2101:
  2613  001BC4  EFE9  F00D         	goto	l2154
  2614  001BC8                     u2100:
  2615  001BC8                     
  2616                           ;lcd.c: 46:   lcdCommand(0x80 + (col % 16));
  2617  001BC8  5011               	movf	lcdPosition@col^0,w,c
  2618  001BCA  0B0F               	andlw	15
  2619  001BCC  0F80               	addlw	128
  2620  001BCE  ECB6  F00E         	call	_lcdCommand
  2621  001BD2                     l2154:
  2622                           
  2623                           ;lcd.c: 48:  if (line == 1) {
  2624  001BD2  040F               	decf	lcdPosition@line^0,w,c
  2625  001BD4  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  2626  001BD6  A4D8               	btfss	status,2,c
  2627  001BD8  EFF0  F00D         	goto	u2111
  2628  001BDC  EFF2  F00D         	goto	u2110
  2629  001BE0                     u2111:
  2630  001BE0  EFF7  F00D         	goto	l184
  2631  001BE4                     u2110:
  2632  001BE4                     
  2633                           ;lcd.c: 49:   lcdCommand(0xC0 + (col % 16));
  2634  001BE4  5011               	movf	lcdPosition@col^0,w,c
  2635  001BE6  0B0F               	andlw	15
  2636  001BE8  0FC0               	addlw	192
  2637  001BEA  ECB6  F00E         	call	_lcdCommand
  2638  001BEE                     l184:
  2639  001BEE  0012               	return		;funcret
  2640  001BF0                     __end_of_lcdPosition:
  2641                           	callstack 0
  2642                           
  2643 ;; *************** function _lcdInit *****************
  2644 ;; Defined at:
  2645 ;;		line 72 in file "lcd.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;		None
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0, cstack
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2659 ;;      Params:         0       0       0       0       0       0       0
  2660 ;;      Locals:         0       0       0       0       0       0       0
  2661 ;;      Temps:          0       0       0       0       0       0       0
  2662 ;;      Totals:         0       0       0       0       0       0       0
  2663 ;;Total ram usage:        0 bytes
  2664 ;; Hardware stack levels used: 1
  2665 ;; Hardware stack levels required when called: 5
  2666 ;; This function calls:
  2667 ;;		_delayMicro
  2668 ;;		_delayMili
  2669 ;;		_lcdCommand
  2670 ;;		_pinMode
  2671 ;;		_pushNibble
  2672 ;;		_soInit
  2673 ;; This function is called by:
  2674 ;;		_main
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text13
  2679  00164A                     __ptext13:
  2680                           	callstack 0
  2681  00164A                     _lcdInit:
  2682                           	callstack 25
  2683  00164A                     
  2684                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  2685  00164A  0E00               	movlw	0
  2686  00164C  6E02               	movwf	(pinMode@pin+1)^0,c
  2687  00164E  0E1C               	movlw	28
  2688  001650  6E01               	movwf	pinMode@pin^0,c
  2689  001652  0E00               	movlw	0
  2690  001654  6E04               	movwf	(pinMode@type+1)^0,c
  2691  001656  0E00               	movlw	0
  2692  001658  6E03               	movwf	pinMode@type^0,c
  2693  00165A  EC10  F007         	call	_pinMode	;wreg free
  2694                           
  2695                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  2696  00165E  0E00               	movlw	0
  2697  001660  6E02               	movwf	(pinMode@pin+1)^0,c
  2698  001662  0E1D               	movlw	29
  2699  001664  6E01               	movwf	pinMode@pin^0,c
  2700  001666  0E00               	movlw	0
  2701  001668  6E04               	movwf	(pinMode@type+1)^0,c
  2702  00166A  0E00               	movlw	0
  2703  00166C  6E03               	movwf	pinMode@type^0,c
  2704  00166E  EC10  F007         	call	_pinMode	;wreg free
  2705                           
  2706                           ;lcd.c: 75:  soInit();
  2707  001672  ECBC  F00D         	call	_soInit	;wreg free
  2708                           
  2709                           ;lcd.c: 76:  delayMili(15);
  2710  001676  0E00               	movlw	0
  2711  001678  6E02               	movwf	(delayMili@a+1)^0,c
  2712  00167A  0E0F               	movlw	15
  2713  00167C  6E01               	movwf	delayMili@a^0,c
  2714  00167E  EC2C  F00E         	call	_delayMili	;wreg free
  2715                           
  2716                           ;lcd.c: 78:  pushNibble(0x03, 0);
  2717  001682  0E00               	movlw	0
  2718  001684  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2719  001686  0E00               	movlw	0
  2720  001688  6E0A               	movwf	pushNibble@rs^0,c
  2721  00168A  0E03               	movlw	3
  2722  00168C  EC94  F00E         	call	_pushNibble
  2723                           
  2724                           ;lcd.c: 79:  delayMili(5);
  2725  001690  0E00               	movlw	0
  2726  001692  6E02               	movwf	(delayMili@a+1)^0,c
  2727  001694  0E05               	movlw	5
  2728  001696  6E01               	movwf	delayMili@a^0,c
  2729  001698  EC2C  F00E         	call	_delayMili	;wreg free
  2730                           
  2731                           ;lcd.c: 80:  pushNibble(0x03, 0);
  2732  00169C  0E00               	movlw	0
  2733  00169E  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2734  0016A0  0E00               	movlw	0
  2735  0016A2  6E0A               	movwf	pushNibble@rs^0,c
  2736  0016A4  0E03               	movlw	3
  2737  0016A6  EC94  F00E         	call	_pushNibble
  2738  0016AA                     
  2739                           ;lcd.c: 81:  delayMicro(160);
  2740  0016AA  0E00               	movlw	0
  2741  0016AC  6E02               	movwf	(delayMicro@a+1)^0,c
  2742  0016AE  0EA0               	movlw	160
  2743  0016B0  6E01               	movwf	delayMicro@a^0,c
  2744  0016B2  ECE3  F00E         	call	_delayMicro	;wreg free
  2745  0016B6                     
  2746                           ;lcd.c: 82:  pushNibble(0x03, 0);
  2747  0016B6  0E00               	movlw	0
  2748  0016B8  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2749  0016BA  0E00               	movlw	0
  2750  0016BC  6E0A               	movwf	pushNibble@rs^0,c
  2751  0016BE  0E03               	movlw	3
  2752  0016C0  EC94  F00E         	call	_pushNibble
  2753                           
  2754                           ;lcd.c: 83:  delayMicro(160);
  2755  0016C4  0E00               	movlw	0
  2756  0016C6  6E02               	movwf	(delayMicro@a+1)^0,c
  2757  0016C8  0EA0               	movlw	160
  2758  0016CA  6E01               	movwf	delayMicro@a^0,c
  2759  0016CC  ECE3  F00E         	call	_delayMicro	;wreg free
  2760  0016D0                     
  2761                           ;lcd.c: 85:  pushNibble(0x02, 0);
  2762  0016D0  0E00               	movlw	0
  2763  0016D2  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2764  0016D4  0E00               	movlw	0
  2765  0016D6  6E0A               	movwf	pushNibble@rs^0,c
  2766  0016D8  0E02               	movlw	2
  2767  0016DA  EC94  F00E         	call	_pushNibble
  2768  0016DE                     
  2769                           ;lcd.c: 86:  delayMili(10);
  2770  0016DE  0E00               	movlw	0
  2771  0016E0  6E02               	movwf	(delayMili@a+1)^0,c
  2772  0016E2  0E0A               	movlw	10
  2773  0016E4  6E01               	movwf	delayMili@a^0,c
  2774  0016E6  EC2C  F00E         	call	_delayMili	;wreg free
  2775  0016EA                     
  2776                           ;lcd.c: 88:  lcdCommand(0x28);
  2777  0016EA  0E28               	movlw	40
  2778  0016EC  ECB6  F00E         	call	_lcdCommand
  2779  0016F0                     
  2780                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  2781  0016F0  0E0C               	movlw	12
  2782  0016F2  ECB6  F00E         	call	_lcdCommand
  2783  0016F6                     
  2784                           ;lcd.c: 90:  lcdCommand(0x01);
  2785  0016F6  0E01               	movlw	1
  2786  0016F8  ECB6  F00E         	call	_lcdCommand
  2787  0016FC  0012               	return		;funcret
  2788  0016FE                     __end_of_lcdInit:
  2789                           	callstack 0
  2790                           
  2791 ;; *************** function _pushNibble *****************
  2792 ;; Defined at:
  2793 ;;		line 25 in file "lcd.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;  value           1    wreg     unsigned char 
  2796 ;;  rs              2    9[COMRAM] int 
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;  value           1   11[COMRAM] unsigned char 
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2808 ;;      Params:         2       0       0       0       0       0       0
  2809 ;;      Locals:         1       0       0       0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0       0       0
  2811 ;;      Totals:         3       0       0       0       0       0       0
  2812 ;;Total ram usage:        3 bytes
  2813 ;; Hardware stack levels used: 1
  2814 ;; Hardware stack levels required when called: 3
  2815 ;; This function calls:
  2816 ;;		_digitalWrite
  2817 ;;		_pulseEnablePin
  2818 ;;		_soWrite
  2819 ;; This function is called by:
  2820 ;;		_lcdInit
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text14
  2825  001D28                     __ptext14:
  2826                           	callstack 0
  2827  001D28                     _pushNibble:
  2828                           	callstack 26
  2829                           
  2830                           ;incstack = 0
  2831                           ;pushNibble@value stored from wreg
  2832  001D28  6E0C               	movwf	pushNibble@value^0,c
  2833  001D2A                     
  2834                           ;lcd.c: 26:  soWrite(value);
  2835  001D2A  C00C  F007         	movff	pushNibble@value,soWrite@value
  2836  001D2E  6A08               	clrf	(soWrite@value+1)^0,c
  2837  001D30  EC50  F00D         	call	_soWrite	;wreg free
  2838                           
  2839                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  2840  001D34  0E00               	movlw	0
  2841  001D36  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2842  001D38  0E1D               	movlw	29
  2843  001D3A  6E01               	movwf	digitalWrite@pin^0,c
  2844  001D3C  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  2845  001D40  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  2846  001D44  ECE9  F005         	call	_digitalWrite	;wreg free
  2847                           
  2848                           ;lcd.c: 28:  pulseEnablePin();
  2849  001D48  EC9B  F00D         	call	_pulseEnablePin	;wreg free
  2850  001D4C  0012               	return		;funcret
  2851  001D4E                     __end_of_pushNibble:
  2852                           	callstack 0
  2853                           
  2854 ;; *************** function _lcdCommand *****************
  2855 ;; Defined at:
  2856 ;;		line 40 in file "lcd.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;  value           1    wreg     unsigned char 
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;  value           1   13[COMRAM] unsigned char 
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  1    wreg      void 
  2863 ;; Registers used:
  2864 ;;		wreg, status,2, status,0, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2870 ;;      Params:         0       0       0       0       0       0       0
  2871 ;;      Locals:         1       0       0       0       0       0       0
  2872 ;;      Temps:          0       0       0       0       0       0       0
  2873 ;;      Totals:         1       0       0       0       0       0       0
  2874 ;;Total ram usage:        1 bytes
  2875 ;; Hardware stack levels used: 1
  2876 ;; Hardware stack levels required when called: 4
  2877 ;; This function calls:
  2878 ;;		_delayMili
  2879 ;;		_pushByte
  2880 ;; This function is called by:
  2881 ;;		_lcdPosition
  2882 ;;		_lcdInit
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	text15
  2887  001D6C                     __ptext15:
  2888                           	callstack 0
  2889  001D6C                     _lcdCommand:
  2890                           	callstack 25
  2891                           
  2892                           ;incstack = 0
  2893                           ;lcdCommand@value stored from wreg
  2894  001D6C  6E0E               	movwf	lcdCommand@value^0,c
  2895  001D6E                     
  2896                           ;lcd.c: 41:  pushByte(value, 0);
  2897  001D6E  0E00               	movlw	0
  2898  001D70  6E0B               	movwf	(pushByte@rs+1)^0,c
  2899  001D72  0E00               	movlw	0
  2900  001D74  6E0A               	movwf	pushByte@rs^0,c
  2901  001D76  500E               	movf	lcdCommand@value^0,w,c
  2902  001D78  EC79  F00C         	call	_pushByte
  2903                           
  2904                           ;lcd.c: 42:  delayMili(2);
  2905  001D7C  0E00               	movlw	0
  2906  001D7E  6E02               	movwf	(delayMili@a+1)^0,c
  2907  001D80  0E02               	movlw	2
  2908  001D82  6E01               	movwf	delayMili@a^0,c
  2909  001D84  EC2C  F00E         	call	_delayMili	;wreg free
  2910  001D88  0012               	return		;funcret
  2911  001D8A                     __end_of_lcdCommand:
  2912                           	callstack 0
  2913                           
  2914 ;; *************** function _pushByte *****************
  2915 ;; Defined at:
  2916 ;;		line 31 in file "lcd.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  value           1    wreg     unsigned char 
  2919 ;;  rs              2    9[COMRAM] int 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  value           1   12[COMRAM] unsigned char 
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      void 
  2924 ;; Registers used:
  2925 ;;		wreg, status,2, status,0, cstack
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2931 ;;      Params:         2       0       0       0       0       0       0
  2932 ;;      Locals:         1       0       0       0       0       0       0
  2933 ;;      Temps:          1       0       0       0       0       0       0
  2934 ;;      Totals:         4       0       0       0       0       0       0
  2935 ;;Total ram usage:        4 bytes
  2936 ;; Hardware stack levels used: 1
  2937 ;; Hardware stack levels required when called: 3
  2938 ;; This function calls:
  2939 ;;		_digitalWrite
  2940 ;;		_pulseEnablePin
  2941 ;;		_soWrite
  2942 ;; This function is called by:
  2943 ;;		_lcdCommand
  2944 ;;		_lcdChar
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text16
  2949  0018F2                     __ptext16:
  2950                           	callstack 0
  2951  0018F2                     _pushByte:
  2952                           	callstack 25
  2953                           
  2954                           ;incstack = 0
  2955                           ;pushByte@value stored from wreg
  2956  0018F2  6E0D               	movwf	pushByte@value^0,c
  2957  0018F4                     
  2958                           ;lcd.c: 32:  soWrite(value >> 4);
  2959  0018F4  C00D  F00C         	movff	pushByte@value,??_pushByte
  2960  0018F8  3A0C               	swapf	??_pushByte^0,f,c
  2961  0018FA  0E0F               	movlw	15
  2962  0018FC  160C               	andwf	??_pushByte^0,f,c
  2963  0018FE  500C               	movf	??_pushByte^0,w,c
  2964  001900  6E07               	movwf	soWrite@value^0,c
  2965  001902  6A08               	clrf	(soWrite@value+1)^0,c
  2966  001904  EC50  F00D         	call	_soWrite	;wreg free
  2967                           
  2968                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  2969  001908  0E00               	movlw	0
  2970  00190A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2971  00190C  0E1D               	movlw	29
  2972  00190E  6E01               	movwf	digitalWrite@pin^0,c
  2973  001910  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  2974  001914  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  2975  001918  ECE9  F005         	call	_digitalWrite	;wreg free
  2976                           
  2977                           ;lcd.c: 34:  pulseEnablePin();
  2978  00191C  EC9B  F00D         	call	_pulseEnablePin	;wreg free
  2979                           
  2980                           ;lcd.c: 36:  soWrite(value & 0x0F);
  2981  001920  C00D  F00C         	movff	pushByte@value,??_pushByte
  2982  001924  0E0F               	movlw	15
  2983  001926  160C               	andwf	??_pushByte^0,f,c
  2984  001928  500C               	movf	??_pushByte^0,w,c
  2985  00192A  6E07               	movwf	soWrite@value^0,c
  2986  00192C  6A08               	clrf	(soWrite@value+1)^0,c
  2987  00192E  EC50  F00D         	call	_soWrite	;wreg free
  2988                           
  2989                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  2990  001932  0E00               	movlw	0
  2991  001934  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2992  001936  0E1D               	movlw	29
  2993  001938  6E01               	movwf	digitalWrite@pin^0,c
  2994  00193A  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  2995  00193E  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  2996  001942  ECE9  F005         	call	_digitalWrite	;wreg free
  2997                           
  2998                           ;lcd.c: 38:  pulseEnablePin();
  2999  001946  EC9B  F00D         	call	_pulseEnablePin	;wreg free
  3000  00194A  0012               	return		;funcret
  3001  00194C                     __end_of_pushByte:
  3002                           	callstack 0
  3003                           
  3004 ;; *************** function _pulseEnablePin *****************
  3005 ;; Defined at:
  3006 ;;		line 18 in file "lcd.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;		None
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;		None
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, status,2, status,0, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3020 ;;      Params:         0       0       0       0       0       0       0
  3021 ;;      Locals:         0       0       0       0       0       0       0
  3022 ;;      Temps:          0       0       0       0       0       0       0
  3023 ;;      Totals:         0       0       0       0       0       0       0
  3024 ;;Total ram usage:        0 bytes
  3025 ;; Hardware stack levels used: 1
  3026 ;; Hardware stack levels required when called: 1
  3027 ;; This function calls:
  3028 ;;		_delayMicro
  3029 ;;		_digitalWrite
  3030 ;; This function is called by:
  3031 ;;		_pushNibble
  3032 ;;		_pushByte
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text17
  3037  001B36                     __ptext17:
  3038                           	callstack 0
  3039  001B36                     _pulseEnablePin:
  3040                           	callstack 26
  3041  001B36                     
  3042                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  3043  001B36  0E00               	movlw	0
  3044  001B38  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3045  001B3A  0E1C               	movlw	28
  3046  001B3C  6E01               	movwf	digitalWrite@pin^0,c
  3047  001B3E  0E00               	movlw	0
  3048  001B40  6E04               	movwf	(digitalWrite@value+1)^0,c
  3049  001B42  0E01               	movlw	1
  3050  001B44  6E03               	movwf	digitalWrite@value^0,c
  3051  001B46  ECE9  F005         	call	_digitalWrite	;wreg free
  3052  001B4A                     
  3053                           ;lcd.c: 20:  delayMicro(5);
  3054  001B4A  0E00               	movlw	0
  3055  001B4C  6E02               	movwf	(delayMicro@a+1)^0,c
  3056  001B4E  0E05               	movlw	5
  3057  001B50  6E01               	movwf	delayMicro@a^0,c
  3058  001B52  ECE3  F00E         	call	_delayMicro	;wreg free
  3059  001B56                     
  3060                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  3061  001B56  0E00               	movlw	0
  3062  001B58  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3063  001B5A  0E1C               	movlw	28
  3064  001B5C  6E01               	movwf	digitalWrite@pin^0,c
  3065  001B5E  0E00               	movlw	0
  3066  001B60  6E04               	movwf	(digitalWrite@value+1)^0,c
  3067  001B62  0E00               	movlw	0
  3068  001B64  6E03               	movwf	digitalWrite@value^0,c
  3069  001B66  ECE9  F005         	call	_digitalWrite	;wreg free
  3070                           
  3071                           ;lcd.c: 22:  delayMicro(5);
  3072  001B6A  0E00               	movlw	0
  3073  001B6C  6E02               	movwf	(delayMicro@a+1)^0,c
  3074  001B6E  0E05               	movlw	5
  3075  001B70  6E01               	movwf	delayMicro@a^0,c
  3076  001B72  ECE3  F00E         	call	_delayMicro	;wreg free
  3077  001B76  0012               	return		;funcret
  3078  001B78                     __end_of_pulseEnablePin:
  3079                           	callstack 0
  3080                           
  3081 ;; *************** function _delayMicro *****************
  3082 ;; Defined at:
  3083 ;;		line 5 in file "lcd.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  a               2    0[COMRAM] int 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  i               2    0        volatile int 
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  1    wreg      void 
  3090 ;; Registers used:
  3091 ;;		None
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3097 ;;      Params:         2       0       0       0       0       0       0
  3098 ;;      Locals:         0       0       0       0       0       0       0
  3099 ;;      Temps:          0       0       0       0       0       0       0
  3100 ;;      Totals:         2       0       0       0       0       0       0
  3101 ;;Total ram usage:        2 bytes
  3102 ;; Hardware stack levels used: 1
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_pulseEnablePin
  3107 ;;		_lcdChar
  3108 ;;		_lcdInit
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text18
  3113  001DC6                     __ptext18:
  3114                           	callstack 0
  3115  001DC6                     _delayMicro:
  3116                           	callstack 26
  3117  001DC6  0012               	return		;funcret
  3118  001DC8                     __end_of_delayMicro:
  3119                           	callstack 0
  3120                           
  3121 ;; *************** function _delayMili *****************
  3122 ;; Defined at:
  3123 ;;		line 10 in file "lcd.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  a               2    0[COMRAM] int 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  i               2    3[COMRAM] volatile int 
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  1    wreg      void 
  3130 ;; Registers used:
  3131 ;;		wreg, status,2, status,0
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3137 ;;      Params:         2       0       0       0       0       0       0
  3138 ;;      Locals:         2       0       0       0       0       0       0
  3139 ;;      Temps:          1       0       0       0       0       0       0
  3140 ;;      Totals:         5       0       0       0       0       0       0
  3141 ;;Total ram usage:        5 bytes
  3142 ;; Hardware stack levels used: 1
  3143 ;; This function calls:
  3144 ;;		Nothing
  3145 ;; This function is called by:
  3146 ;;		_lcdCommand
  3147 ;;		_lcdInit
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text19
  3152  001C58                     __ptext19:
  3153                           	callstack 0
  3154  001C58                     _delayMili:
  3155                           	callstack 28
  3156  001C58                     
  3157                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  3158  001C58  0E00               	movlw	0
  3159  001C5A  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  3160  001C5C  0E00               	movlw	0
  3161  001C5E  6E04               	movwf	delayMili@i^0,c	;volatile
  3162  001C60  EF34  F00E         	goto	l1942
  3163  001C64                     l1940:
  3164                           
  3165                           ;lcd.c: 15:  }
  3166  001C64  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  3167  001C66  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  3168  001C68                     l1942:
  3169  001C68  5001               	movf	delayMili@a^0,w,c
  3170  001C6A  5C04               	subwf	delayMili@i^0,w,c	;volatile
  3171  001C6C  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  3172  001C6E  0A80               	xorlw	128
  3173  001C70  6E03               	movwf	??_delayMili^0,c
  3174  001C72  5002               	movf	(delayMili@a+1)^0,w,c
  3175  001C74  0A80               	xorlw	128
  3176  001C76  5803               	subwfb	??_delayMili^0,w,c
  3177  001C78  A0D8               	btfss	status,0,c
  3178  001C7A  EF41  F00E         	goto	u1771
  3179  001C7E  EF43  F00E         	goto	u1770
  3180  001C82                     u1771:
  3181  001C82  EF32  F00E         	goto	l1940
  3182  001C86                     u1770:
  3183  001C86  0012               	return		;funcret
  3184  001C88                     __end_of_delayMili:
  3185                           	callstack 0
  3186                           
  3187 ;; *************** function _kpRead *****************
  3188 ;; Defined at:
  3189 ;;		line 14 in file "keypad.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;		None
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  2    0[COMRAM] unsigned int 
  3196 ;; Registers used:
  3197 ;;		None
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3203 ;;      Params:         2       0       0       0       0       0       0
  3204 ;;      Locals:         0       0       0       0       0       0       0
  3205 ;;      Temps:          0       0       0       0       0       0       0
  3206 ;;      Totals:         2       0       0       0       0       0       0
  3207 ;;Total ram usage:        2 bytes
  3208 ;; Hardware stack levels used: 1
  3209 ;; This function calls:
  3210 ;;		Nothing
  3211 ;; This function is called by:
  3212 ;;		_main
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           	psect	text20
  3217  001DBC                     __ptext20:
  3218                           	callstack 0
  3219  001DBC                     _kpRead:
  3220                           	callstack 30
  3221  001DBC                     
  3222                           ;keypad.c: 15:     return keys;
  3223  001DBC  C057  F001         	movff	_keys,?_kpRead
  3224  001DC0  C058  F002         	movff	_keys+1,?_kpRead+1
  3225  001DC4  0012               	return		;funcret
  3226  001DC6                     __end_of_kpRead:
  3227                           	callstack 0
  3228                           
  3229 ;; *************** function _kpInit *****************
  3230 ;; Defined at:
  3231 ;;		line 54 in file "keypad.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;		None
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;		None
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0, cstack
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3245 ;;      Params:         0       0       0       0       0       0       0
  3246 ;;      Locals:         0       0       0       0       0       0       0
  3247 ;;      Temps:          0       0       0       0       0       0       0
  3248 ;;      Totals:         0       0       0       0       0       0       0
  3249 ;;Total ram usage:        0 bytes
  3250 ;; Hardware stack levels used: 1
  3251 ;; Hardware stack levels required when called: 2
  3252 ;; This function calls:
  3253 ;;		_pinMode
  3254 ;;		_soInit
  3255 ;; This function is called by:
  3256 ;;		_main
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           	psect	text21
  3261  001C26                     __ptext21:
  3262                           	callstack 0
  3263  001C26                     _kpInit:
  3264                           	callstack 28
  3265  001C26                     
  3266                           ;keypad.c: 55:   soInit();
  3267  001C26  ECBC  F00D         	call	_soInit	;wreg free
  3268                           
  3269                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  3270  001C2A  0E00               	movlw	0
  3271  001C2C  6E02               	movwf	(pinMode@pin+1)^0,c
  3272  001C2E  0E0A               	movlw	10
  3273  001C30  6E01               	movwf	pinMode@pin^0,c
  3274  001C32  0E00               	movlw	0
  3275  001C34  6E04               	movwf	(pinMode@type+1)^0,c
  3276  001C36  0E01               	movlw	1
  3277  001C38  6E03               	movwf	pinMode@type^0,c
  3278  001C3A  EC10  F007         	call	_pinMode	;wreg free
  3279                           
  3280                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  3281  001C3E  0E00               	movlw	0
  3282  001C40  6E02               	movwf	(pinMode@pin+1)^0,c
  3283  001C42  0E09               	movlw	9
  3284  001C44  6E01               	movwf	pinMode@pin^0,c
  3285  001C46  0E00               	movlw	0
  3286  001C48  6E04               	movwf	(pinMode@type+1)^0,c
  3287  001C4A  0E01               	movlw	1
  3288  001C4C  6E03               	movwf	pinMode@type^0,c
  3289  001C4E  EC10  F007         	call	_pinMode	;wreg free
  3290  001C52                     
  3291                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  3292  001C52  0E0C               	movlw	12
  3293  001C54  6EC1               	movwf	193,c	;volatile
  3294  001C56  0012               	return		;funcret
  3295  001C58                     __end_of_kpInit:
  3296                           	callstack 0
  3297                           
  3298 ;; *************** function _soInit *****************
  3299 ;; Defined at:
  3300 ;;		line 3 in file "so.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;		None
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;		None
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  1    wreg      void 
  3307 ;; Registers used:
  3308 ;;		wreg, status,2, status,0, cstack
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3314 ;;      Params:         0       0       0       0       0       0       0
  3315 ;;      Locals:         0       0       0       0       0       0       0
  3316 ;;      Temps:          0       0       0       0       0       0       0
  3317 ;;      Totals:         0       0       0       0       0       0       0
  3318 ;;Total ram usage:        0 bytes
  3319 ;; Hardware stack levels used: 1
  3320 ;; Hardware stack levels required when called: 1
  3321 ;; This function calls:
  3322 ;;		_pinMode
  3323 ;; This function is called by:
  3324 ;;		_kpInit
  3325 ;;		_lcdInit
  3326 ;;		_ssdInit
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text22
  3331  001B78                     __ptext22:
  3332                           	callstack 0
  3333  001B78                     _soInit:
  3334                           	callstack 28
  3335  001B78                     
  3336                           ;so.c: 4:  pinMode(PIN_D7, 0);
  3337  001B78  0E00               	movlw	0
  3338  001B7A  6E02               	movwf	(pinMode@pin+1)^0,c
  3339  001B7C  0E1F               	movlw	31
  3340  001B7E  6E01               	movwf	pinMode@pin^0,c
  3341  001B80  0E00               	movlw	0
  3342  001B82  6E04               	movwf	(pinMode@type+1)^0,c
  3343  001B84  0E00               	movlw	0
  3344  001B86  6E03               	movwf	pinMode@type^0,c
  3345  001B88  EC10  F007         	call	_pinMode	;wreg free
  3346                           
  3347                           ;so.c: 5:  pinMode(PIN_B0, 0);
  3348  001B8C  0E00               	movlw	0
  3349  001B8E  6E02               	movwf	(pinMode@pin+1)^0,c
  3350  001B90  0E08               	movlw	8
  3351  001B92  6E01               	movwf	pinMode@pin^0,c
  3352  001B94  0E00               	movlw	0
  3353  001B96  6E04               	movwf	(pinMode@type+1)^0,c
  3354  001B98  0E00               	movlw	0
  3355  001B9A  6E03               	movwf	pinMode@type^0,c
  3356  001B9C  EC10  F007         	call	_pinMode	;wreg free
  3357                           
  3358                           ;so.c: 6:  pinMode(PIN_D6, 0);
  3359  001BA0  0E00               	movlw	0
  3360  001BA2  6E02               	movwf	(pinMode@pin+1)^0,c
  3361  001BA4  0E1E               	movlw	30
  3362  001BA6  6E01               	movwf	pinMode@pin^0,c
  3363  001BA8  0E00               	movlw	0
  3364  001BAA  6E04               	movwf	(pinMode@type+1)^0,c
  3365  001BAC  0E00               	movlw	0
  3366  001BAE  6E03               	movwf	pinMode@type^0,c
  3367  001BB0  EC10  F007         	call	_pinMode	;wreg free
  3368  001BB4  0012               	return		;funcret
  3369  001BB6                     __end_of_soInit:
  3370                           	callstack 0
  3371                           
  3372 ;; *************** function _kpDebounce *****************
  3373 ;; Defined at:
  3374 ;;		line 27 in file "keypad.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;		None
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;  i               2   12[COMRAM] int 
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  1    wreg      void 
  3381 ;; Registers used:
  3382 ;;		wreg, status,2, status,0, cstack
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3388 ;;      Params:         0       0       0       0       0       0       0
  3389 ;;      Locals:         2       0       0       0       0       0       0
  3390 ;;      Temps:          3       0       0       0       0       0       0
  3391 ;;      Totals:         5       0       0       0       0       0       0
  3392 ;;Total ram usage:        5 bytes
  3393 ;; Hardware stack levels used: 1
  3394 ;; Hardware stack levels required when called: 3
  3395 ;; This function calls:
  3396 ;;		_digitalRead
  3397 ;;		_soWrite
  3398 ;; This function is called by:
  3399 ;;		_main
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           	psect	text23
  3404  001344                     __ptext23:
  3405                           	callstack 0
  3406  001344                     _kpDebounce:
  3407                           	callstack 27
  3408  001344                     
  3409                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  3410  001344  0E00               	movlw	0
  3411  001346  6E56               	movwf	(kpDebounce@newRead+1)^0,c
  3412  001348  0E00               	movlw	0
  3413  00134A  6E55               	movwf	kpDebounce@newRead^0,c
  3414                           
  3415                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  3416  00134C  0E00               	movlw	0
  3417  00134E  6E0E               	movwf	(kpDebounce@i+1)^0,c
  3418  001350  0E00               	movlw	0
  3419  001352  6E0D               	movwf	kpDebounce@i^0,c
  3420  001354                     l2120:
  3421  001354  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  3422  001356  EFB6  F009         	goto	u2021
  3423  00135A  500E               	movf	(kpDebounce@i+1)^0,w,c
  3424  00135C  E109               	bnz	u2020
  3425  00135E  0E05               	movlw	5
  3426  001360  5C0D               	subwf	kpDebounce@i^0,w,c
  3427  001362  A0D8               	btfss	status,0,c
  3428  001364  EFB6  F009         	goto	u2021
  3429  001368  EFB8  F009         	goto	u2020
  3430  00136C                     u2021:
  3431  00136C  EFBA  F009         	goto	l2124
  3432  001370                     u2020:
  3433  001370  EF1B  F00A         	goto	l2136
  3434  001374                     l2124:
  3435                           
  3436                           ;keypad.c: 35:       soWrite(1<<(i+3));
  3437  001374  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3438  001378  0E03               	movlw	3
  3439  00137A  260A               	addwf	??_kpDebounce^0,f,c
  3440  00137C  0E01               	movlw	1
  3441  00137E  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3442  001380  0E00               	movlw	0
  3443  001382  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3444  001384  2A0A               	incf	??_kpDebounce^0,f,c
  3445  001386  EFC8  F009         	goto	u2034
  3446  00138A                     u2035:
  3447  00138A  90D8               	bcf	status,0,c
  3448  00138C  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3449  00138E  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3450  001390                     u2034:
  3451  001390  2E0A               	decfsz	??_kpDebounce^0,f,c
  3452  001392  EFC5  F009         	goto	u2035
  3453  001396  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  3454  00139A  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  3455  00139E  EC50  F00D         	call	_soWrite	;wreg free
  3456                           
  3457                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  3458  0013A2  0E00               	movlw	0
  3459  0013A4  6E02               	movwf	(digitalRead@pin+1)^0,c
  3460  0013A6  0E0A               	movlw	10
  3461  0013A8  6E01               	movwf	digitalRead@pin^0,c
  3462  0013AA  ECED  F008         	call	_digitalRead	;wreg free
  3463  0013AE  5001               	movf	?_digitalRead^0,w,c
  3464  0013B0  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3465  0013B2  B4D8               	btfsc	status,2,c
  3466  0013B4  EFDE  F009         	goto	u2041
  3467  0013B8  EFE0  F009         	goto	u2040
  3468  0013BC                     u2041:
  3469  0013BC  EFF3  F009         	goto	l2128
  3470  0013C0                     u2040:
  3471  0013C0                     
  3472                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  3473  0013C0  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3474  0013C4  0E01               	movlw	1
  3475  0013C6  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3476  0013C8  0E00               	movlw	0
  3477  0013CA  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3478  0013CC  2A0A               	incf	??_kpDebounce^0,f,c
  3479  0013CE  EFEC  F009         	goto	u2054
  3480  0013D2                     u2055:
  3481  0013D2  90D8               	bcf	status,0,c
  3482  0013D4  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3483  0013D6  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3484  0013D8                     u2054:
  3485  0013D8  2E0A               	decfsz	??_kpDebounce^0,f,c
  3486  0013DA  EFE9  F009         	goto	u2055
  3487  0013DE  500B               	movf	(??_kpDebounce+1)^0,w,c
  3488  0013E0  1255               	iorwf	kpDebounce@newRead^0,f,c
  3489  0013E2  500C               	movf	(??_kpDebounce+2)^0,w,c
  3490  0013E4  1256               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3491  0013E6                     l2128:
  3492                           
  3493                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  3494  0013E6  0E00               	movlw	0
  3495  0013E8  6E02               	movwf	(digitalRead@pin+1)^0,c
  3496  0013EA  0E09               	movlw	9
  3497  0013EC  6E01               	movwf	digitalRead@pin^0,c
  3498  0013EE  ECED  F008         	call	_digitalRead	;wreg free
  3499  0013F2  5001               	movf	?_digitalRead^0,w,c
  3500  0013F4  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3501  0013F6  B4D8               	btfsc	status,2,c
  3502  0013F8  EF00  F00A         	goto	u2061
  3503  0013FC  EF02  F00A         	goto	u2060
  3504  001400                     u2061:
  3505  001400  EF17  F00A         	goto	l2132
  3506  001404                     u2060:
  3507  001404                     
  3508                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  3509  001404  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3510  001408  0E05               	movlw	5
  3511  00140A  260A               	addwf	??_kpDebounce^0,f,c
  3512  00140C  0E01               	movlw	1
  3513  00140E  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3514  001410  0E00               	movlw	0
  3515  001412  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3516  001414  2A0A               	incf	??_kpDebounce^0,f,c
  3517  001416  EF10  F00A         	goto	u2074
  3518  00141A                     u2075:
  3519  00141A  90D8               	bcf	status,0,c
  3520  00141C  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3521  00141E  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3522  001420                     u2074:
  3523  001420  2E0A               	decfsz	??_kpDebounce^0,f,c
  3524  001422  EF0D  F00A         	goto	u2075
  3525  001426  500B               	movf	(??_kpDebounce+1)^0,w,c
  3526  001428  1255               	iorwf	kpDebounce@newRead^0,f,c
  3527  00142A  500C               	movf	(??_kpDebounce+2)^0,w,c
  3528  00142C  1256               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3529  00142E                     l2132:
  3530                           
  3531                           ;keypad.c: 42:     }
  3532  00142E  4A0D               	infsnz	kpDebounce@i^0,f,c
  3533  001430  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  3534  001432  EFAA  F009         	goto	l2120
  3535  001436                     l2136:
  3536                           
  3537                           ;keypad.c: 43:     if (oldRead == newRead) {
  3538  001436  5055               	movf	kpDebounce@newRead^0,w,c
  3539  001438  1853               	xorwf	kpDebounce@oldRead^0,w,c
  3540  00143A  E107               	bnz	u2081
  3541  00143C  5056               	movf	(kpDebounce@newRead+1)^0,w,c
  3542  00143E  1854               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  3543  001440  A4D8               	btfss	status,2,c
  3544  001442  EF25  F00A         	goto	u2081
  3545  001446  EF27  F00A         	goto	u2080
  3546  00144A                     u2081:
  3547  00144A  EF2A  F00A         	goto	l2140
  3548  00144E                     u2080:
  3549  00144E                     
  3550                           ;keypad.c: 44:         tempo--;
  3551  00144E  065E               	decf	kpDebounce@tempo^0,f,c
  3552                           
  3553                           ;keypad.c: 45:     } else {
  3554  001450  EF30  F00A         	goto	l145
  3555  001454                     l2140:
  3556                           
  3557                           ;keypad.c: 46:         tempo = 1;
  3558  001454  0E01               	movlw	1
  3559  001456  6E5E               	movwf	kpDebounce@tempo^0,c
  3560  001458                     
  3561                           ;keypad.c: 47:         oldRead = newRead;
  3562  001458  C055  F053         	movff	kpDebounce@newRead,kpDebounce@oldRead
  3563  00145C  C056  F054         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  3564  001460                     l145:
  3565                           
  3566                           ;keypad.c: 49:     if (tempo == 0) {
  3567  001460  505E               	movf	kpDebounce@tempo^0,w,c
  3568  001462  A4D8               	btfss	status,2,c
  3569  001464  EF36  F00A         	goto	u2091
  3570  001468  EF38  F00A         	goto	u2090
  3571  00146C                     u2091:
  3572  00146C  EF3C  F00A         	goto	l147
  3573  001470                     u2090:
  3574  001470                     
  3575                           ;keypad.c: 50:         keys = oldRead;
  3576  001470  C053  F057         	movff	kpDebounce@oldRead,_keys
  3577  001474  C054  F058         	movff	kpDebounce@oldRead+1,_keys+1
  3578  001478                     l147:
  3579  001478  0012               	return		;funcret
  3580  00147A                     __end_of_kpDebounce:
  3581                           	callstack 0
  3582                           
  3583 ;; *************** function _soWrite *****************
  3584 ;; Defined at:
  3585 ;;		line 18 in file "so.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  value           2    6[COMRAM] int 
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;  i               1    8[COMRAM] unsigned char 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  1    wreg      void 
  3592 ;; Registers used:
  3593 ;;		wreg, status,2, status,0, cstack
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3599 ;;      Params:         2       0       0       0       0       0       0
  3600 ;;      Locals:         1       0       0       0       0       0       0
  3601 ;;      Temps:          0       0       0       0       0       0       0
  3602 ;;      Totals:         3       0       0       0       0       0       0
  3603 ;;Total ram usage:        3 bytes
  3604 ;; Hardware stack levels used: 1
  3605 ;; Hardware stack levels required when called: 2
  3606 ;; This function calls:
  3607 ;;		_PulseClockData
  3608 ;;		_PulseEnClock
  3609 ;;		_digitalWrite
  3610 ;; This function is called by:
  3611 ;;		_kpDebounce
  3612 ;;		_pushNibble
  3613 ;;		_pushByte
  3614 ;;		_ssdUpdate
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           	psect	text24
  3619  001AA0                     __ptext24:
  3620                           	callstack 0
  3621  001AA0                     _soWrite:
  3622                           	callstack 27
  3623  001AA0                     
  3624                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  3625  001AA0  0E00               	movlw	0
  3626  001AA2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3627  001AA4  0E08               	movlw	8
  3628  001AA6  6E01               	movwf	digitalWrite@pin^0,c
  3629  001AA8  0E00               	movlw	0
  3630  001AAA  6E04               	movwf	(digitalWrite@value+1)^0,c
  3631  001AAC  0E00               	movlw	0
  3632  001AAE  6E03               	movwf	digitalWrite@value^0,c
  3633  001AB0  ECE9  F005         	call	_digitalWrite	;wreg free
  3634  001AB4                     
  3635                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  3636  001AB4  0E00               	movlw	0
  3637  001AB6  6E09               	movwf	soWrite@i^0,c
  3638  001AB8                     l1882:
  3639                           
  3640                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  3641  001AB8  0E00               	movlw	0
  3642  001ABA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3643  001ABC  0E1E               	movlw	30
  3644  001ABE  6E01               	movwf	digitalWrite@pin^0,c
  3645  001AC0  0E80               	movlw	128
  3646  001AC2  1407               	andwf	soWrite@value^0,w,c
  3647  001AC4  6E03               	movwf	digitalWrite@value^0,c
  3648  001AC6  6A04               	clrf	(digitalWrite@value+1)^0,c
  3649  001AC8  ECE9  F005         	call	_digitalWrite	;wreg free
  3650                           
  3651                           ;so.c: 23:   PulseClockData();
  3652  001ACC  EC59  F00E         	call	_PulseClockData	;wreg free
  3653  001AD0                     
  3654                           ;so.c: 24:   value <<= 1;
  3655  001AD0  90D8               	bcf	status,0,c
  3656  001AD2  3607               	rlcf	soWrite@value^0,f,c
  3657  001AD4  3608               	rlcf	(soWrite@value+1)^0,f,c
  3658  001AD6                     
  3659                           ;so.c: 25:  }
  3660  001AD6  2A09               	incf	soWrite@i^0,f,c
  3661  001AD8  0E07               	movlw	7
  3662  001ADA  6409               	cpfsgt	soWrite@i^0,c
  3663  001ADC  EF72  F00D         	goto	u1561
  3664  001AE0  EF74  F00D         	goto	u1560
  3665  001AE4                     u1561:
  3666  001AE4  EF5C  F00D         	goto	l1882
  3667  001AE8                     u1560:
  3668  001AE8                     
  3669                           ;so.c: 26:  PulseEnClock();
  3670  001AE8  EC44  F00E         	call	_PulseEnClock	;wreg free
  3671  001AEC  0012               	return		;funcret
  3672  001AEE                     __end_of_soWrite:
  3673                           	callstack 0
  3674                           
  3675 ;; *************** function _PulseEnClock *****************
  3676 ;; Defined at:
  3677 ;;		line 9 in file "so.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;		None
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;		None
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  1    wreg      void 
  3684 ;; Registers used:
  3685 ;;		wreg, status,2, status,0, cstack
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3691 ;;      Params:         0       0       0       0       0       0       0
  3692 ;;      Locals:         0       0       0       0       0       0       0
  3693 ;;      Temps:          0       0       0       0       0       0       0
  3694 ;;      Totals:         0       0       0       0       0       0       0
  3695 ;;Total ram usage:        0 bytes
  3696 ;; Hardware stack levels used: 1
  3697 ;; Hardware stack levels required when called: 1
  3698 ;; This function calls:
  3699 ;;		_digitalWrite
  3700 ;; This function is called by:
  3701 ;;		_soWrite
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text25
  3706  001C88                     __ptext25:
  3707                           	callstack 0
  3708  001C88                     _PulseEnClock:
  3709                           	callstack 27
  3710  001C88                     
  3711                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  3712  001C88  0E00               	movlw	0
  3713  001C8A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3714  001C8C  0E1F               	movlw	31
  3715  001C8E  6E01               	movwf	digitalWrite@pin^0,c
  3716  001C90  0E00               	movlw	0
  3717  001C92  6E04               	movwf	(digitalWrite@value+1)^0,c
  3718  001C94  0E01               	movlw	1
  3719  001C96  6E03               	movwf	digitalWrite@value^0,c
  3720  001C98  ECE9  F005         	call	_digitalWrite	;wreg free
  3721                           
  3722                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  3723  001C9C  0E00               	movlw	0
  3724  001C9E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3725  001CA0  0E1F               	movlw	31
  3726  001CA2  6E01               	movwf	digitalWrite@pin^0,c
  3727  001CA4  0E00               	movlw	0
  3728  001CA6  6E04               	movwf	(digitalWrite@value+1)^0,c
  3729  001CA8  0E00               	movlw	0
  3730  001CAA  6E03               	movwf	digitalWrite@value^0,c
  3731  001CAC  ECE9  F005         	call	_digitalWrite	;wreg free
  3732  001CB0  0012               	return		;funcret
  3733  001CB2                     __end_of_PulseEnClock:
  3734                           	callstack 0
  3735                           
  3736 ;; *************** function _PulseClockData *****************
  3737 ;; Defined at:
  3738 ;;		line 14 in file "so.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;		None
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;		None
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  1    wreg      void 
  3745 ;; Registers used:
  3746 ;;		wreg, status,2, status,0, cstack
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3752 ;;      Params:         0       0       0       0       0       0       0
  3753 ;;      Locals:         0       0       0       0       0       0       0
  3754 ;;      Temps:          0       0       0       0       0       0       0
  3755 ;;      Totals:         0       0       0       0       0       0       0
  3756 ;;Total ram usage:        0 bytes
  3757 ;; Hardware stack levels used: 1
  3758 ;; Hardware stack levels required when called: 1
  3759 ;; This function calls:
  3760 ;;		_digitalWrite
  3761 ;; This function is called by:
  3762 ;;		_soWrite
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           	psect	text26
  3767  001CB2                     __ptext26:
  3768                           	callstack 0
  3769  001CB2                     _PulseClockData:
  3770                           	callstack 27
  3771  001CB2                     
  3772                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  3773  001CB2  0E00               	movlw	0
  3774  001CB4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3775  001CB6  0E08               	movlw	8
  3776  001CB8  6E01               	movwf	digitalWrite@pin^0,c
  3777  001CBA  0E00               	movlw	0
  3778  001CBC  6E04               	movwf	(digitalWrite@value+1)^0,c
  3779  001CBE  0E01               	movlw	1
  3780  001CC0  6E03               	movwf	digitalWrite@value^0,c
  3781  001CC2  ECE9  F005         	call	_digitalWrite	;wreg free
  3782                           
  3783                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  3784  001CC6  0E00               	movlw	0
  3785  001CC8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3786  001CCA  0E08               	movlw	8
  3787  001CCC  6E01               	movwf	digitalWrite@pin^0,c
  3788  001CCE  0E00               	movlw	0
  3789  001CD0  6E04               	movwf	(digitalWrite@value+1)^0,c
  3790  001CD2  0E00               	movlw	0
  3791  001CD4  6E03               	movwf	digitalWrite@value^0,c
  3792  001CD6  ECE9  F005         	call	_digitalWrite	;wreg free
  3793  001CDA  0012               	return		;funcret
  3794  001CDC                     __end_of_PulseClockData:
  3795                           	callstack 0
  3796                           
  3797 ;; *************** function _digitalWrite *****************
  3798 ;; Defined at:
  3799 ;;		line 14 in file "io.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;  pin             2    0[COMRAM] int 
  3802 ;;  value           2    2[COMRAM] int 
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;		None
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      void 
  3807 ;; Registers used:
  3808 ;;		wreg, status,2, status,0
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3814 ;;      Params:         4       0       0       0       0       0       0
  3815 ;;      Locals:         0       0       0       0       0       0       0
  3816 ;;      Temps:          2       0       0       0       0       0       0
  3817 ;;      Totals:         6       0       0       0       0       0       0
  3818 ;;Total ram usage:        6 bytes
  3819 ;; Hardware stack levels used: 1
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_pulseEnablePin
  3824 ;;		_pushNibble
  3825 ;;		_pushByte
  3826 ;;		_PulseEnClock
  3827 ;;		_PulseClockData
  3828 ;;		_soWrite
  3829 ;;		_ssdUpdate
  3830 ;;		_rgbColor
  3831 ;;		_turnOn
  3832 ;;		_turnOff
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text27
  3837  000BD2                     __ptext27:
  3838                           	callstack 0
  3839  000BD2                     _digitalWrite:
  3840                           	callstack 28
  3841  000BD2                     
  3842                           ;io.c: 16:     if(pin <8){
  3843  000BD2  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3844  000BD4  EFF7  F005         	goto	u1360
  3845  000BD8  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3846  000BDA  E107               	bnz	u1361
  3847  000BDC  0E08               	movlw	8
  3848  000BDE  5C01               	subwf	digitalWrite@pin^0,w,c
  3849  000BE0  B0D8               	btfsc	status,0,c
  3850  000BE2  EFF5  F005         	goto	u1361
  3851  000BE6  EFF7  F005         	goto	u1360
  3852  000BEA                     u1361:
  3853  000BEA  EF21  F006         	goto	l1838
  3854  000BEE                     u1360:
  3855  000BEE                     
  3856                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  3857  000BEE  5003               	movf	digitalWrite@value^0,w,c
  3858  000BF0  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3859  000BF2  B4D8               	btfsc	status,2,c
  3860  000BF4  EFFE  F005         	goto	u1371
  3861  000BF8  EF00  F006         	goto	u1370
  3862  000BFC                     u1371:
  3863  000BFC  EF10  F006         	goto	l1836
  3864  000C00                     u1370:
  3865  000C00  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3866  000C04  0E01               	movlw	1
  3867  000C06  6E06               	movwf	(??_digitalWrite+1)^0,c
  3868  000C08  2A05               	incf	??_digitalWrite^0,f,c
  3869  000C0A  EF09  F006         	goto	u1384
  3870  000C0E                     u1385:
  3871  000C0E  90D8               	bcf	status,0,c
  3872  000C10  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3873  000C12                     u1384:
  3874  000C12  2E05               	decfsz	??_digitalWrite^0,f,c
  3875  000C14  EF07  F006         	goto	u1385
  3876  000C18  5006               	movf	(??_digitalWrite+1)^0,w,c
  3877  000C1A  1280               	iorwf	128,f,c	;volatile
  3878  000C1C  EF0F  F007         	goto	l74
  3879  000C20                     l1836:
  3880  000C20  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3881  000C24  0E01               	movlw	1
  3882  000C26  6E06               	movwf	(??_digitalWrite+1)^0,c
  3883  000C28  2A05               	incf	??_digitalWrite^0,f,c
  3884  000C2A  EF19  F006         	goto	u1394
  3885  000C2E                     u1395:
  3886  000C2E  90D8               	bcf	status,0,c
  3887  000C30  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3888  000C32                     u1394:
  3889  000C32  2E05               	decfsz	??_digitalWrite^0,f,c
  3890  000C34  EF17  F006         	goto	u1395
  3891  000C38  5006               	movf	(??_digitalWrite+1)^0,w,c
  3892  000C3A  0AFF               	xorlw	255
  3893  000C3C  1680               	andwf	128,f,c	;volatile
  3894  000C3E  EF0F  F007         	goto	l74
  3895  000C42                     l1838:
  3896  000C42  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3897  000C44  EF2F  F006         	goto	u1400
  3898  000C48  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3899  000C4A  E107               	bnz	u1401
  3900  000C4C  0E10               	movlw	16
  3901  000C4E  5C01               	subwf	digitalWrite@pin^0,w,c
  3902  000C50  B0D8               	btfsc	status,0,c
  3903  000C52  EF2D  F006         	goto	u1401
  3904  000C56  EF2F  F006         	goto	u1400
  3905  000C5A                     u1401:
  3906  000C5A  EF5D  F006         	goto	l1846
  3907  000C5E                     u1400:
  3908  000C5E                     
  3909                           ;io.c: 20:         pin -=8;
  3910  000C5E  0EF8               	movlw	248
  3911  000C60  2601               	addwf	digitalWrite@pin^0,f,c
  3912  000C62  0EFF               	movlw	255
  3913  000C64  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3914                           
  3915                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  3916  000C66  5003               	movf	digitalWrite@value^0,w,c
  3917  000C68  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3918  000C6A  B4D8               	btfsc	status,2,c
  3919  000C6C  EF3A  F006         	goto	u1411
  3920  000C70  EF3C  F006         	goto	u1410
  3921  000C74                     u1411:
  3922  000C74  EF4C  F006         	goto	l1844
  3923  000C78                     u1410:
  3924  000C78  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3925  000C7C  0E01               	movlw	1
  3926  000C7E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3927  000C80  2A05               	incf	??_digitalWrite^0,f,c
  3928  000C82  EF45  F006         	goto	u1424
  3929  000C86                     u1425:
  3930  000C86  90D8               	bcf	status,0,c
  3931  000C88  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3932  000C8A                     u1424:
  3933  000C8A  2E05               	decfsz	??_digitalWrite^0,f,c
  3934  000C8C  EF43  F006         	goto	u1425
  3935  000C90  5006               	movf	(??_digitalWrite+1)^0,w,c
  3936  000C92  1281               	iorwf	129,f,c	;volatile
  3937  000C94  EF0F  F007         	goto	l74
  3938  000C98                     l1844:
  3939  000C98  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3940  000C9C  0E01               	movlw	1
  3941  000C9E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3942  000CA0  2A05               	incf	??_digitalWrite^0,f,c
  3943  000CA2  EF55  F006         	goto	u1434
  3944  000CA6                     u1435:
  3945  000CA6  90D8               	bcf	status,0,c
  3946  000CA8  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3947  000CAA                     u1434:
  3948  000CAA  2E05               	decfsz	??_digitalWrite^0,f,c
  3949  000CAC  EF53  F006         	goto	u1435
  3950  000CB0  5006               	movf	(??_digitalWrite+1)^0,w,c
  3951  000CB2  0AFF               	xorlw	255
  3952  000CB4  1681               	andwf	129,f,c	;volatile
  3953  000CB6  EF0F  F007         	goto	l74
  3954  000CBA                     l1846:
  3955  000CBA  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3956  000CBC  EF6B  F006         	goto	u1440
  3957  000CC0  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3958  000CC2  E107               	bnz	u1441
  3959  000CC4  0E18               	movlw	24
  3960  000CC6  5C01               	subwf	digitalWrite@pin^0,w,c
  3961  000CC8  B0D8               	btfsc	status,0,c
  3962  000CCA  EF69  F006         	goto	u1441
  3963  000CCE  EF6B  F006         	goto	u1440
  3964  000CD2                     u1441:
  3965  000CD2  EF99  F006         	goto	l1854
  3966  000CD6                     u1440:
  3967  000CD6                     
  3968                           ;io.c: 24:         pin -=16;
  3969  000CD6  0EF0               	movlw	240
  3970  000CD8  2601               	addwf	digitalWrite@pin^0,f,c
  3971  000CDA  0EFF               	movlw	255
  3972  000CDC  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3973                           
  3974                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  3975  000CDE  5003               	movf	digitalWrite@value^0,w,c
  3976  000CE0  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3977  000CE2  B4D8               	btfsc	status,2,c
  3978  000CE4  EF76  F006         	goto	u1451
  3979  000CE8  EF78  F006         	goto	u1450
  3980  000CEC                     u1451:
  3981  000CEC  EF88  F006         	goto	l1852
  3982  000CF0                     u1450:
  3983  000CF0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3984  000CF4  0E01               	movlw	1
  3985  000CF6  6E06               	movwf	(??_digitalWrite+1)^0,c
  3986  000CF8  2A05               	incf	??_digitalWrite^0,f,c
  3987  000CFA  EF81  F006         	goto	u1464
  3988  000CFE                     u1465:
  3989  000CFE  90D8               	bcf	status,0,c
  3990  000D00  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3991  000D02                     u1464:
  3992  000D02  2E05               	decfsz	??_digitalWrite^0,f,c
  3993  000D04  EF7F  F006         	goto	u1465
  3994  000D08  5006               	movf	(??_digitalWrite+1)^0,w,c
  3995  000D0A  1282               	iorwf	130,f,c	;volatile
  3996  000D0C  EF0F  F007         	goto	l74
  3997  000D10                     l1852:
  3998  000D10  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3999  000D14  0E01               	movlw	1
  4000  000D16  6E06               	movwf	(??_digitalWrite+1)^0,c
  4001  000D18  2A05               	incf	??_digitalWrite^0,f,c
  4002  000D1A  EF91  F006         	goto	u1474
  4003  000D1E                     u1475:
  4004  000D1E  90D8               	bcf	status,0,c
  4005  000D20  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4006  000D22                     u1474:
  4007  000D22  2E05               	decfsz	??_digitalWrite^0,f,c
  4008  000D24  EF8F  F006         	goto	u1475
  4009  000D28  5006               	movf	(??_digitalWrite+1)^0,w,c
  4010  000D2A  0AFF               	xorlw	255
  4011  000D2C  1682               	andwf	130,f,c	;volatile
  4012  000D2E  EF0F  F007         	goto	l74
  4013  000D32                     l1854:
  4014  000D32  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4015  000D34  EFA7  F006         	goto	u1480
  4016  000D38  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4017  000D3A  E107               	bnz	u1481
  4018  000D3C  0E20               	movlw	32
  4019  000D3E  5C01               	subwf	digitalWrite@pin^0,w,c
  4020  000D40  B0D8               	btfsc	status,0,c
  4021  000D42  EFA5  F006         	goto	u1481
  4022  000D46  EFA7  F006         	goto	u1480
  4023  000D4A                     u1481:
  4024  000D4A  EFD5  F006         	goto	l1862
  4025  000D4E                     u1480:
  4026  000D4E                     
  4027                           ;io.c: 28:         pin -=24;
  4028  000D4E  0EE8               	movlw	232
  4029  000D50  2601               	addwf	digitalWrite@pin^0,f,c
  4030  000D52  0EFF               	movlw	255
  4031  000D54  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4032                           
  4033                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  4034  000D56  5003               	movf	digitalWrite@value^0,w,c
  4035  000D58  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4036  000D5A  B4D8               	btfsc	status,2,c
  4037  000D5C  EFB2  F006         	goto	u1491
  4038  000D60  EFB4  F006         	goto	u1490
  4039  000D64                     u1491:
  4040  000D64  EFC4  F006         	goto	l1860
  4041  000D68                     u1490:
  4042  000D68  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4043  000D6C  0E01               	movlw	1
  4044  000D6E  6E06               	movwf	(??_digitalWrite+1)^0,c
  4045  000D70  2A05               	incf	??_digitalWrite^0,f,c
  4046  000D72  EFBD  F006         	goto	u1504
  4047  000D76                     u1505:
  4048  000D76  90D8               	bcf	status,0,c
  4049  000D78  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4050  000D7A                     u1504:
  4051  000D7A  2E05               	decfsz	??_digitalWrite^0,f,c
  4052  000D7C  EFBB  F006         	goto	u1505
  4053  000D80  5006               	movf	(??_digitalWrite+1)^0,w,c
  4054  000D82  1283               	iorwf	131,f,c	;volatile
  4055  000D84  EF0F  F007         	goto	l74
  4056  000D88                     l1860:
  4057  000D88  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4058  000D8C  0E01               	movlw	1
  4059  000D8E  6E06               	movwf	(??_digitalWrite+1)^0,c
  4060  000D90  2A05               	incf	??_digitalWrite^0,f,c
  4061  000D92  EFCD  F006         	goto	u1514
  4062  000D96                     u1515:
  4063  000D96  90D8               	bcf	status,0,c
  4064  000D98  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4065  000D9A                     u1514:
  4066  000D9A  2E05               	decfsz	??_digitalWrite^0,f,c
  4067  000D9C  EFCB  F006         	goto	u1515
  4068  000DA0  5006               	movf	(??_digitalWrite+1)^0,w,c
  4069  000DA2  0AFF               	xorlw	255
  4070  000DA4  1683               	andwf	131,f,c	;volatile
  4071  000DA6  EF0F  F007         	goto	l74
  4072  000DAA                     l1862:
  4073  000DAA  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4074  000DAC  EFE3  F006         	goto	u1520
  4075  000DB0  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4076  000DB2  E107               	bnz	u1521
  4077  000DB4  0E28               	movlw	40
  4078  000DB6  5C01               	subwf	digitalWrite@pin^0,w,c
  4079  000DB8  B0D8               	btfsc	status,0,c
  4080  000DBA  EFE1  F006         	goto	u1521
  4081  000DBE  EFE3  F006         	goto	u1520
  4082  000DC2                     u1521:
  4083  000DC2  EF0F  F007         	goto	l74
  4084  000DC6                     u1520:
  4085  000DC6                     
  4086                           ;io.c: 32:         pin -=32;
  4087  000DC6  0EE0               	movlw	224
  4088  000DC8  2601               	addwf	digitalWrite@pin^0,f,c
  4089  000DCA  0EFF               	movlw	255
  4090  000DCC  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4091                           
  4092                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  4093  000DCE  5003               	movf	digitalWrite@value^0,w,c
  4094  000DD0  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4095  000DD2  B4D8               	btfsc	status,2,c
  4096  000DD4  EFEE  F006         	goto	u1531
  4097  000DD8  EFF0  F006         	goto	u1530
  4098  000DDC                     u1531:
  4099  000DDC  EF00  F007         	goto	l1868
  4100  000DE0                     u1530:
  4101  000DE0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4102  000DE4  0E01               	movlw	1
  4103  000DE6  6E06               	movwf	(??_digitalWrite+1)^0,c
  4104  000DE8  2A05               	incf	??_digitalWrite^0,f,c
  4105  000DEA  EFF9  F006         	goto	u1544
  4106  000DEE                     u1545:
  4107  000DEE  90D8               	bcf	status,0,c
  4108  000DF0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4109  000DF2                     u1544:
  4110  000DF2  2E05               	decfsz	??_digitalWrite^0,f,c
  4111  000DF4  EFF7  F006         	goto	u1545
  4112  000DF8  5006               	movf	(??_digitalWrite+1)^0,w,c
  4113  000DFA  1284               	iorwf	132,f,c	;volatile
  4114  000DFC  EF0F  F007         	goto	l74
  4115  000E00                     l1868:
  4116  000E00  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4117  000E04  0E01               	movlw	1
  4118  000E06  6E06               	movwf	(??_digitalWrite+1)^0,c
  4119  000E08  2A05               	incf	??_digitalWrite^0,f,c
  4120  000E0A  EF09  F007         	goto	u1554
  4121  000E0E                     u1555:
  4122  000E0E  90D8               	bcf	status,0,c
  4123  000E10  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4124  000E12                     u1554:
  4125  000E12  2E05               	decfsz	??_digitalWrite^0,f,c
  4126  000E14  EF07  F007         	goto	u1555
  4127  000E18  5006               	movf	(??_digitalWrite+1)^0,w,c
  4128  000E1A  0AFF               	xorlw	255
  4129  000E1C  1684               	andwf	132,f,c	;volatile
  4130  000E1E                     l74:
  4131  000E1E  0012               	return		;funcret
  4132  000E20                     __end_of_digitalWrite:
  4133                           	callstack 0
  4134                           
  4135 ;; *************** function _digitalRead *****************
  4136 ;; Defined at:
  4137 ;;		line 39 in file "io.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  pin             2    0[COMRAM] int 
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;		None
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  2    0[COMRAM] int 
  4144 ;; Registers used:
  4145 ;;		wreg, status,2, status,0
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4151 ;;      Params:         2       0       0       0       0       0       0
  4152 ;;      Locals:         0       0       0       0       0       0       0
  4153 ;;      Temps:          3       0       0       0       0       0       0
  4154 ;;      Totals:         5       0       0       0       0       0       0
  4155 ;;Total ram usage:        5 bytes
  4156 ;; Hardware stack levels used: 1
  4157 ;; This function calls:
  4158 ;;		Nothing
  4159 ;; This function is called by:
  4160 ;;		_kpDebounce
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           	psect	text28
  4165  0011DA                     __ptext28:
  4166                           	callstack 0
  4167  0011DA                     _digitalRead:
  4168                           	callstack 29
  4169  0011DA                     
  4170                           ;io.c: 40:     if(pin <8){
  4171  0011DA  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4172  0011DC  EFFB  F008         	goto	u1840
  4173  0011E0  5002               	movf	(digitalRead@pin+1)^0,w,c
  4174  0011E2  E107               	bnz	u1841
  4175  0011E4  0E08               	movlw	8
  4176  0011E6  5C01               	subwf	digitalRead@pin^0,w,c
  4177  0011E8  B0D8               	btfsc	status,0,c
  4178  0011EA  EFF9  F008         	goto	u1841
  4179  0011EE  EFFB  F008         	goto	u1840
  4180  0011F2                     u1841:
  4181  0011F2  EF0F  F009         	goto	l1998
  4182  0011F6                     u1840:
  4183  0011F6                     
  4184                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  4185  0011F6  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4186  0011FA  0E01               	movlw	1
  4187  0011FC  6E04               	movwf	(??_digitalRead+1)^0,c
  4188  0011FE  2A03               	incf	??_digitalRead^0,f,c
  4189  001200  EF04  F009         	goto	u1854
  4190  001204                     u1855:
  4191  001204  90D8               	bcf	status,0,c
  4192  001206  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4193  001208                     u1854:
  4194  001208  2E03               	decfsz	??_digitalRead^0,f,c
  4195  00120A  EF02  F009         	goto	u1855
  4196  00120E  5004               	movf	(??_digitalRead+1)^0,w,c
  4197  001210  1480               	andwf	128,w,c	;volatile
  4198  001212  6E05               	movwf	(??_digitalRead+2)^0,c
  4199  001214  5005               	movf	(??_digitalRead+2)^0,w,c
  4200  001216  6E01               	movwf	?_digitalRead^0,c
  4201  001218  6A02               	clrf	(?_digitalRead+1)^0,c
  4202  00121A  EFA1  F009         	goto	l78
  4203  00121E                     l1998:
  4204  00121E  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4205  001220  EF1D  F009         	goto	u1860
  4206  001224  5002               	movf	(digitalRead@pin+1)^0,w,c
  4207  001226  E107               	bnz	u1861
  4208  001228  0E10               	movlw	16
  4209  00122A  5C01               	subwf	digitalRead@pin^0,w,c
  4210  00122C  B0D8               	btfsc	status,0,c
  4211  00122E  EF1B  F009         	goto	u1861
  4212  001232  EF1D  F009         	goto	u1860
  4213  001236                     u1861:
  4214  001236  EF33  F009         	goto	l2006
  4215  00123A                     u1860:
  4216  00123A                     
  4217                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  4218  00123A  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4219  00123E  0EF8               	movlw	-8
  4220  001240  2603               	addwf	??_digitalRead^0,f,c
  4221  001242  0E01               	movlw	1
  4222  001244  6E04               	movwf	(??_digitalRead+1)^0,c
  4223  001246  2A03               	incf	??_digitalRead^0,f,c
  4224  001248  EF28  F009         	goto	u1874
  4225  00124C                     u1875:
  4226  00124C  90D8               	bcf	status,0,c
  4227  00124E  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4228  001250                     u1874:
  4229  001250  2E03               	decfsz	??_digitalRead^0,f,c
  4230  001252  EF26  F009         	goto	u1875
  4231  001256  5004               	movf	(??_digitalRead+1)^0,w,c
  4232  001258  1481               	andwf	129,w,c	;volatile
  4233  00125A  6E05               	movwf	(??_digitalRead+2)^0,c
  4234  00125C  5005               	movf	(??_digitalRead+2)^0,w,c
  4235  00125E  6E01               	movwf	?_digitalRead^0,c
  4236  001260  6A02               	clrf	(?_digitalRead+1)^0,c
  4237  001262  EFA1  F009         	goto	l78
  4238  001266                     l2006:
  4239  001266  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4240  001268  EF41  F009         	goto	u1880
  4241  00126C  5002               	movf	(digitalRead@pin+1)^0,w,c
  4242  00126E  E107               	bnz	u1881
  4243  001270  0E18               	movlw	24
  4244  001272  5C01               	subwf	digitalRead@pin^0,w,c
  4245  001274  B0D8               	btfsc	status,0,c
  4246  001276  EF3F  F009         	goto	u1881
  4247  00127A  EF41  F009         	goto	u1880
  4248  00127E                     u1881:
  4249  00127E  EF57  F009         	goto	l2014
  4250  001282                     u1880:
  4251  001282                     
  4252                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  4253  001282  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4254  001286  0EF0               	movlw	-16
  4255  001288  2603               	addwf	??_digitalRead^0,f,c
  4256  00128A  0E01               	movlw	1
  4257  00128C  6E04               	movwf	(??_digitalRead+1)^0,c
  4258  00128E  2A03               	incf	??_digitalRead^0,f,c
  4259  001290  EF4C  F009         	goto	u1894
  4260  001294                     u1895:
  4261  001294  90D8               	bcf	status,0,c
  4262  001296  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4263  001298                     u1894:
  4264  001298  2E03               	decfsz	??_digitalRead^0,f,c
  4265  00129A  EF4A  F009         	goto	u1895
  4266  00129E  5004               	movf	(??_digitalRead+1)^0,w,c
  4267  0012A0  1482               	andwf	130,w,c	;volatile
  4268  0012A2  6E05               	movwf	(??_digitalRead+2)^0,c
  4269  0012A4  5005               	movf	(??_digitalRead+2)^0,w,c
  4270  0012A6  6E01               	movwf	?_digitalRead^0,c
  4271  0012A8  6A02               	clrf	(?_digitalRead+1)^0,c
  4272  0012AA  EFA1  F009         	goto	l78
  4273  0012AE                     l2014:
  4274  0012AE  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4275  0012B0  EF65  F009         	goto	u1900
  4276  0012B4  5002               	movf	(digitalRead@pin+1)^0,w,c
  4277  0012B6  E107               	bnz	u1901
  4278  0012B8  0E20               	movlw	32
  4279  0012BA  5C01               	subwf	digitalRead@pin^0,w,c
  4280  0012BC  B0D8               	btfsc	status,0,c
  4281  0012BE  EF63  F009         	goto	u1901
  4282  0012C2  EF65  F009         	goto	u1900
  4283  0012C6                     u1901:
  4284  0012C6  EF7B  F009         	goto	l2022
  4285  0012CA                     u1900:
  4286  0012CA                     
  4287                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  4288  0012CA  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4289  0012CE  0EE8               	movlw	-24
  4290  0012D0  2603               	addwf	??_digitalRead^0,f,c
  4291  0012D2  0E01               	movlw	1
  4292  0012D4  6E04               	movwf	(??_digitalRead+1)^0,c
  4293  0012D6  2A03               	incf	??_digitalRead^0,f,c
  4294  0012D8  EF70  F009         	goto	u1914
  4295  0012DC                     u1915:
  4296  0012DC  90D8               	bcf	status,0,c
  4297  0012DE  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4298  0012E0                     u1914:
  4299  0012E0  2E03               	decfsz	??_digitalRead^0,f,c
  4300  0012E2  EF6E  F009         	goto	u1915
  4301  0012E6  5004               	movf	(??_digitalRead+1)^0,w,c
  4302  0012E8  1483               	andwf	131,w,c	;volatile
  4303  0012EA  6E05               	movwf	(??_digitalRead+2)^0,c
  4304  0012EC  5005               	movf	(??_digitalRead+2)^0,w,c
  4305  0012EE  6E01               	movwf	?_digitalRead^0,c
  4306  0012F0  6A02               	clrf	(?_digitalRead+1)^0,c
  4307  0012F2  EFA1  F009         	goto	l78
  4308  0012F6                     l2022:
  4309  0012F6  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4310  0012F8  EF89  F009         	goto	u1920
  4311  0012FC  5002               	movf	(digitalRead@pin+1)^0,w,c
  4312  0012FE  E107               	bnz	u1921
  4313  001300  0E28               	movlw	40
  4314  001302  5C01               	subwf	digitalRead@pin^0,w,c
  4315  001304  B0D8               	btfsc	status,0,c
  4316  001306  EF87  F009         	goto	u1921
  4317  00130A  EF89  F009         	goto	u1920
  4318  00130E                     u1921:
  4319  00130E  EF9F  F009         	goto	l83
  4320  001312                     u1920:
  4321  001312                     
  4322                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  4323  001312  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4324  001316  0EE0               	movlw	-32
  4325  001318  2603               	addwf	??_digitalRead^0,f,c
  4326  00131A  0E01               	movlw	1
  4327  00131C  6E04               	movwf	(??_digitalRead+1)^0,c
  4328  00131E  2A03               	incf	??_digitalRead^0,f,c
  4329  001320  EF94  F009         	goto	u1934
  4330  001324                     u1935:
  4331  001324  90D8               	bcf	status,0,c
  4332  001326  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4333  001328                     u1934:
  4334  001328  2E03               	decfsz	??_digitalRead^0,f,c
  4335  00132A  EF92  F009         	goto	u1935
  4336  00132E  5004               	movf	(??_digitalRead+1)^0,w,c
  4337  001330  1484               	andwf	132,w,c	;volatile
  4338  001332  6E05               	movwf	(??_digitalRead+2)^0,c
  4339  001334  5005               	movf	(??_digitalRead+2)^0,w,c
  4340  001336  6E01               	movwf	?_digitalRead^0,c
  4341  001338  6A02               	clrf	(?_digitalRead+1)^0,c
  4342  00133A  EFA1  F009         	goto	l78
  4343  00133E                     l83:
  4344  00133E                     
  4345                           ;io.c: 51:     return -1;
  4346  00133E  6801               	setf	?_digitalRead^0,c
  4347  001340  6802               	setf	(?_digitalRead+1)^0,c
  4348  001342                     l78:
  4349  001342  0012               	return		;funcret
  4350  001344                     __end_of_digitalRead:
  4351                           	callstack 0
  4352                           
  4353 ;; *************** function _atraso_ms *****************
  4354 ;; Defined at:
  4355 ;;		line 2 in file "atraso.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  num             2    0[COMRAM] unsigned int 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;  i               2    2[COMRAM] int 
  4360 ;;  k               1    5[COMRAM] volatile unsigned char 
  4361 ;;  j               1    4[COMRAM] volatile unsigned char 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      void 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2, status,0
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4371 ;;      Params:         2       0       0       0       0       0       0
  4372 ;;      Locals:         4       0       0       0       0       0       0
  4373 ;;      Temps:          0       0       0       0       0       0       0
  4374 ;;      Totals:         6       0       0       0       0       0       0
  4375 ;;Total ram usage:        6 bytes
  4376 ;; Hardware stack levels used: 1
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_main
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text29
  4385  00188E                     __ptext29:
  4386                           	callstack 0
  4387  00188E                     _atraso_ms:
  4388                           	callstack 30
  4389  00188E                     
  4390                           ;atraso.c: 3:     volatile unsigned char j, k;;atraso.c: 4:     for (int i = 0; i < num;
      +                           i++) {
  4391  00188E  0E00               	movlw	0
  4392  001890  6E04               	movwf	(atraso_ms@i+1)^0,c
  4393  001892  0E00               	movlw	0
  4394  001894  6E03               	movwf	atraso_ms@i^0,c
  4395  001896  EF6D  F00C         	goto	l2114
  4396  00189A                     l2092:
  4397                           
  4398                           ;atraso.c: 5:         for (j = 0; j < 41; j++) {
  4399  00189A  0E00               	movlw	0
  4400  00189C  6E05               	movwf	atraso_ms@j^0,c	;volatile
  4401  00189E                     l2094:
  4402  00189E  0E28               	movlw	40
  4403  0018A0  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  4404  0018A2  EF55  F00C         	goto	u1991
  4405  0018A6  EF57  F00C         	goto	u1990
  4406  0018AA                     u1991:
  4407  0018AA  EF59  F00C         	goto	l2098
  4408  0018AE                     u1990:
  4409  0018AE  EF6B  F00C         	goto	l2112
  4410  0018B2                     l2098:
  4411                           
  4412                           ;atraso.c: 6:             for (k = 0; k < 3; k++);
  4413  0018B2  0E00               	movlw	0
  4414  0018B4  6E06               	movwf	atraso_ms@k^0,c	;volatile
  4415  0018B6                     l2100:
  4416  0018B6  0E02               	movlw	2
  4417  0018B8  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  4418  0018BA  EF61  F00C         	goto	u2001
  4419  0018BE  EF63  F00C         	goto	u2000
  4420  0018C2                     u2001:
  4421  0018C2  EF65  F00C         	goto	l2104
  4422  0018C6                     u2000:
  4423  0018C6  EF68  F00C         	goto	l2108
  4424  0018CA                     l2104:
  4425  0018CA  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  4426  0018CC  EF5B  F00C         	goto	l2100
  4427  0018D0                     l2108:
  4428                           
  4429                           ;atraso.c: 7:         }
  4430  0018D0  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  4431  0018D2  EF4F  F00C         	goto	l2094
  4432  0018D6                     l2112:
  4433                           
  4434                           ;atraso.c: 9:     }
  4435  0018D6  4A03               	infsnz	atraso_ms@i^0,f,c
  4436  0018D8  2A04               	incf	(atraso_ms@i+1)^0,f,c
  4437  0018DA                     l2114:
  4438  0018DA  5001               	movf	atraso_ms@num^0,w,c
  4439  0018DC  5C03               	subwf	atraso_ms@i^0,w,c
  4440  0018DE  5002               	movf	(atraso_ms@num+1)^0,w,c
  4441  0018E0  5804               	subwfb	(atraso_ms@i+1)^0,w,c
  4442  0018E2  A0D8               	btfss	status,0,c
  4443  0018E4  EF76  F00C         	goto	u2011
  4444  0018E8  EF78  F00C         	goto	u2010
  4445  0018EC                     u2011:
  4446  0018EC  EF4D  F00C         	goto	l2092
  4447  0018F0                     u2010:
  4448  0018F0  0012               	return		;funcret
  4449  0018F2                     __end_of_atraso_ms:
  4450                           	callstack 0
  4451                           
  4452 ;; *************** function _adcRead *****************
  4453 ;; Defined at:
  4454 ;;		line 38 in file "adc.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  channel         2    0[COMRAM] unsigned int 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  ADvalor         2    2[COMRAM] unsigned int 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  2    0[COMRAM] int 
  4461 ;; Registers used:
  4462 ;;		wreg, status,2, status,0
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4468 ;;      Params:         2       0       0       0       0       0       0
  4469 ;;      Locals:         2       0       0       0       0       0       0
  4470 ;;      Temps:          0       0       0       0       0       0       0
  4471 ;;      Totals:         4       0       0       0       0       0       0
  4472 ;;Total ram usage:        4 bytes
  4473 ;; Hardware stack levels used: 1
  4474 ;; This function calls:
  4475 ;;		Nothing
  4476 ;; This function is called by:
  4477 ;;		_main
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           	psect	text30
  4482  001A50                     __ptext30:
  4483                           	callstack 0
  4484  001A50                     _adcRead:
  4485                           	callstack 30
  4486  001A50                     
  4487                           ;adc.c: 39:     unsigned int ADvalor;;adc.c: 40:     ADCON0 &= 0b11000011;
  4488  001A50  0EC3               	movlw	195
  4489  001A52  16C2               	andwf	194,f,c	;volatile
  4490                           
  4491                           ;adc.c: 41:     if (channel < 3) {
  4492  001A54  5002               	movf	(adcRead@channel+1)^0,w,c
  4493  001A56  E107               	bnz	u1971
  4494  001A58  0E03               	movlw	3
  4495  001A5A  5C01               	subwf	adcRead@channel^0,w,c
  4496  001A5C  B0D8               	btfsc	status,0,c
  4497  001A5E  EF33  F00D         	goto	u1971
  4498  001A62  EF35  F00D         	goto	u1970
  4499  001A66                     u1971:
  4500  001A66  EF39  F00D         	goto	l2080
  4501  001A6A                     u1970:
  4502  001A6A                     
  4503                           ;adc.c: 42:         ADCON0 |= channel << 2;
  4504  001A6A  4401               	rlncf	adcRead@channel^0,w,c	;volatile
  4505  001A6C  46E8               	rlncf	wreg,f,c
  4506  001A6E  0BFC               	andlw	252
  4507  001A70  12C2               	iorwf	194,f,c	;volatile
  4508  001A72                     l2080:
  4509                           
  4510                           ;adc.c: 45:     ADCON0 |= 0b00000010;
  4511  001A72  82C2               	bsf	194,1,c	;volatile
  4512  001A74                     l19:
  4513  001A74  B2C2               	btfsc	194,1,c	;volatile
  4514  001A76  EF3F  F00D         	goto	u1981
  4515  001A7A  EF41  F00D         	goto	u1980
  4516  001A7E                     u1981:
  4517  001A7E  EF3A  F00D         	goto	l19
  4518  001A82                     u1980:
  4519  001A82                     
  4520                           ;adc.c: 49:     ADvalor = ADRESH;
  4521  001A82  CFC4 F003          	movff	4036,adcRead@ADvalor	;volatile
  4522  001A86  6A04               	clrf	(adcRead@ADvalor+1)^0,c
  4523  001A88                     
  4524                           ;adc.c: 50:     ADvalor <<= 8;
  4525  001A88  5003               	movf	adcRead@ADvalor^0,w,c
  4526  001A8A  6E04               	movwf	(adcRead@ADvalor+1)^0,c
  4527  001A8C  6A03               	clrf	adcRead@ADvalor^0,c
  4528  001A8E                     
  4529                           ;adc.c: 51:     ADvalor += ADRESL;
  4530  001A8E  50C3               	movf	195,w,c	;volatile
  4531  001A90  2603               	addwf	adcRead@ADvalor^0,f,c
  4532  001A92  0E00               	movlw	0
  4533  001A94  2204               	addwfc	(adcRead@ADvalor+1)^0,f,c
  4534  001A96                     
  4535                           ;adc.c: 52:     return ADvalor;
  4536  001A96  C003  F001         	movff	adcRead@ADvalor,?_adcRead
  4537  001A9A  C004  F002         	movff	adcRead@ADvalor+1,?_adcRead+1
  4538  001A9E  0012               	return		;funcret
  4539  001AA0                     __end_of_adcRead:
  4540                           	callstack 0
  4541                           
  4542 ;; *************** function _adcInit *****************
  4543 ;; Defined at:
  4544 ;;		line 25 in file "adc.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;		None
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4558 ;;      Params:         0       0       0       0       0       0       0
  4559 ;;      Locals:         0       0       0       0       0       0       0
  4560 ;;      Temps:          0       0       0       0       0       0       0
  4561 ;;      Totals:         0       0       0       0       0       0       0
  4562 ;;Total ram usage:        0 bytes
  4563 ;; Hardware stack levels used: 1
  4564 ;; Hardware stack levels required when called: 1
  4565 ;; This function calls:
  4566 ;;		_pinMode
  4567 ;; This function is called by:
  4568 ;;		_main
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           	psect	text31
  4573  001AEE                     __ptext31:
  4574                           	callstack 0
  4575  001AEE                     _adcInit:
  4576                           	callstack 29
  4577  001AEE                     
  4578                           ;adc.c: 27:     pinMode(PIN_A0, 1);
  4579  001AEE  0E00               	movlw	0
  4580  001AF0  6E02               	movwf	(pinMode@pin+1)^0,c
  4581  001AF2  0E00               	movlw	0
  4582  001AF4  6E01               	movwf	pinMode@pin^0,c
  4583  001AF6  0E00               	movlw	0
  4584  001AF8  6E04               	movwf	(pinMode@type+1)^0,c
  4585  001AFA  0E01               	movlw	1
  4586  001AFC  6E03               	movwf	pinMode@type^0,c
  4587  001AFE  EC10  F007         	call	_pinMode	;wreg free
  4588                           
  4589                           ;adc.c: 28:     pinMode(PIN_A1, 1);
  4590  001B02  0E00               	movlw	0
  4591  001B04  6E02               	movwf	(pinMode@pin+1)^0,c
  4592  001B06  0E01               	movlw	1
  4593  001B08  6E01               	movwf	pinMode@pin^0,c
  4594  001B0A  0E00               	movlw	0
  4595  001B0C  6E04               	movwf	(pinMode@type+1)^0,c
  4596  001B0E  0E01               	movlw	1
  4597  001B10  6E03               	movwf	pinMode@type^0,c
  4598  001B12  EC10  F007         	call	_pinMode	;wreg free
  4599                           
  4600                           ;adc.c: 29:     pinMode(PIN_A2, 1);
  4601  001B16  0E00               	movlw	0
  4602  001B18  6E02               	movwf	(pinMode@pin+1)^0,c
  4603  001B1A  0E02               	movlw	2
  4604  001B1C  6E01               	movwf	pinMode@pin^0,c
  4605  001B1E  0E00               	movlw	0
  4606  001B20  6E04               	movwf	(pinMode@type+1)^0,c
  4607  001B22  0E01               	movlw	1
  4608  001B24  6E03               	movwf	pinMode@type^0,c
  4609  001B26  EC10  F007         	call	_pinMode	;wreg free
  4610  001B2A                     
  4611                           ;adc.c: 31:     ((ADCON0) |= (1<<(0)));
  4612  001B2A  80C2               	bsf	194,0,c	;volatile
  4613  001B2C                     
  4614                           ;adc.c: 33:     ADCON1 = 0b00001100;
  4615  001B2C  0E0C               	movlw	12
  4616  001B2E  6EC1               	movwf	193,c	;volatile
  4617  001B30                     
  4618                           ;adc.c: 34:     ADCON2 = 0b10101010;
  4619  001B30  0EAA               	movlw	170
  4620  001B32  6EC0               	movwf	192,c	;volatile
  4621  001B34  0012               	return		;funcret
  4622  001B36                     __end_of_adcInit:
  4623                           	callstack 0
  4624                           
  4625 ;; *************** function _pinMode *****************
  4626 ;; Defined at:
  4627 ;;		line 54 in file "io.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  pin             2    0[COMRAM] int 
  4630 ;;  type            2    2[COMRAM] int 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		wreg, status,2, status,0
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4642 ;;      Params:         4       0       0       0       0       0       0
  4643 ;;      Locals:         0       0       0       0       0       0       0
  4644 ;;      Temps:          2       0       0       0       0       0       0
  4645 ;;      Totals:         6       0       0       0       0       0       0
  4646 ;;Total ram usage:        6 bytes
  4647 ;; Hardware stack levels used: 1
  4648 ;; This function calls:
  4649 ;;		Nothing
  4650 ;; This function is called by:
  4651 ;;		_adcInit
  4652 ;;		_kpInit
  4653 ;;		_lcdInit
  4654 ;;		_soInit
  4655 ;;		_ssdInit
  4656 ;;		_rgbInit
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           	psect	text32
  4661  000E20                     __ptext32:
  4662                           	callstack 0
  4663  000E20                     _pinMode:
  4664                           	callstack 28
  4665  000E20                     
  4666                           ;io.c: 56:     if(pin <8){
  4667  000E20  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4668  000E22  EF1E  F007         	goto	u1570
  4669  000E26  5002               	movf	(pinMode@pin+1)^0,w,c
  4670  000E28  E107               	bnz	u1571
  4671  000E2A  0E08               	movlw	8
  4672  000E2C  5C01               	subwf	pinMode@pin^0,w,c
  4673  000E2E  B0D8               	btfsc	status,0,c
  4674  000E30  EF1C  F007         	goto	u1571
  4675  000E34  EF1E  F007         	goto	u1570
  4676  000E38                     u1571:
  4677  000E38  EF48  F007         	goto	l1906
  4678  000E3C                     u1570:
  4679  000E3C                     
  4680                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  4681  000E3C  5003               	movf	pinMode@type^0,w,c
  4682  000E3E  1004               	iorwf	(pinMode@type+1)^0,w,c
  4683  000E40  B4D8               	btfsc	status,2,c
  4684  000E42  EF25  F007         	goto	u1581
  4685  000E46  EF27  F007         	goto	u1580
  4686  000E4A                     u1581:
  4687  000E4A  EF37  F007         	goto	l1904
  4688  000E4E                     u1580:
  4689  000E4E  C001  F005         	movff	pinMode@pin,??_pinMode
  4690  000E52  0E01               	movlw	1
  4691  000E54  6E06               	movwf	(??_pinMode+1)^0,c
  4692  000E56  2A05               	incf	??_pinMode^0,f,c
  4693  000E58  EF30  F007         	goto	u1594
  4694  000E5C                     u1595:
  4695  000E5C  90D8               	bcf	status,0,c
  4696  000E5E  3606               	rlcf	(??_pinMode+1)^0,f,c
  4697  000E60                     u1594:
  4698  000E60  2E05               	decfsz	??_pinMode^0,f,c
  4699  000E62  EF2E  F007         	goto	u1595
  4700  000E66  5006               	movf	(??_pinMode+1)^0,w,c
  4701  000E68  1292               	iorwf	146,f,c	;volatile
  4702  000E6A  EF36  F008         	goto	l108
  4703  000E6E                     l1904:
  4704  000E6E  C001  F005         	movff	pinMode@pin,??_pinMode
  4705  000E72  0E01               	movlw	1
  4706  000E74  6E06               	movwf	(??_pinMode+1)^0,c
  4707  000E76  2A05               	incf	??_pinMode^0,f,c
  4708  000E78  EF40  F007         	goto	u1604
  4709  000E7C                     u1605:
  4710  000E7C  90D8               	bcf	status,0,c
  4711  000E7E  3606               	rlcf	(??_pinMode+1)^0,f,c
  4712  000E80                     u1604:
  4713  000E80  2E05               	decfsz	??_pinMode^0,f,c
  4714  000E82  EF3E  F007         	goto	u1605
  4715  000E86  5006               	movf	(??_pinMode+1)^0,w,c
  4716  000E88  0AFF               	xorlw	255
  4717  000E8A  1692               	andwf	146,f,c	;volatile
  4718  000E8C  EF36  F008         	goto	l108
  4719  000E90                     l1906:
  4720  000E90  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4721  000E92  EF56  F007         	goto	u1610
  4722  000E96  5002               	movf	(pinMode@pin+1)^0,w,c
  4723  000E98  E107               	bnz	u1611
  4724  000E9A  0E10               	movlw	16
  4725  000E9C  5C01               	subwf	pinMode@pin^0,w,c
  4726  000E9E  B0D8               	btfsc	status,0,c
  4727  000EA0  EF54  F007         	goto	u1611
  4728  000EA4  EF56  F007         	goto	u1610
  4729  000EA8                     u1611:
  4730  000EA8  EF84  F007         	goto	l1914
  4731  000EAC                     u1610:
  4732  000EAC                     
  4733                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  4734  000EAC  5003               	movf	pinMode@type^0,w,c
  4735  000EAE  1004               	iorwf	(pinMode@type+1)^0,w,c
  4736  000EB0  B4D8               	btfsc	status,2,c
  4737  000EB2  EF5D  F007         	goto	u1621
  4738  000EB6  EF5F  F007         	goto	u1620
  4739  000EBA                     u1621:
  4740  000EBA  EF71  F007         	goto	l1912
  4741  000EBE                     u1620:
  4742  000EBE  C001  F005         	movff	pinMode@pin,??_pinMode
  4743  000EC2  0EF8               	movlw	-8
  4744  000EC4  2605               	addwf	??_pinMode^0,f,c
  4745  000EC6  0E01               	movlw	1
  4746  000EC8  6E06               	movwf	(??_pinMode+1)^0,c
  4747  000ECA  2A05               	incf	??_pinMode^0,f,c
  4748  000ECC  EF6A  F007         	goto	u1634
  4749  000ED0                     u1635:
  4750  000ED0  90D8               	bcf	status,0,c
  4751  000ED2  3606               	rlcf	(??_pinMode+1)^0,f,c
  4752  000ED4                     u1634:
  4753  000ED4  2E05               	decfsz	??_pinMode^0,f,c
  4754  000ED6  EF68  F007         	goto	u1635
  4755  000EDA  5006               	movf	(??_pinMode+1)^0,w,c
  4756  000EDC  1293               	iorwf	147,f,c	;volatile
  4757  000EDE  EF36  F008         	goto	l108
  4758  000EE2                     l1912:
  4759  000EE2  C001  F005         	movff	pinMode@pin,??_pinMode
  4760  000EE6  0EF8               	movlw	-8
  4761  000EE8  2605               	addwf	??_pinMode^0,f,c
  4762  000EEA  0E01               	movlw	1
  4763  000EEC  6E06               	movwf	(??_pinMode+1)^0,c
  4764  000EEE  2A05               	incf	??_pinMode^0,f,c
  4765  000EF0  EF7C  F007         	goto	u1644
  4766  000EF4                     u1645:
  4767  000EF4  90D8               	bcf	status,0,c
  4768  000EF6  3606               	rlcf	(??_pinMode+1)^0,f,c
  4769  000EF8                     u1644:
  4770  000EF8  2E05               	decfsz	??_pinMode^0,f,c
  4771  000EFA  EF7A  F007         	goto	u1645
  4772  000EFE  5006               	movf	(??_pinMode+1)^0,w,c
  4773  000F00  0AFF               	xorlw	255
  4774  000F02  1693               	andwf	147,f,c	;volatile
  4775  000F04  EF36  F008         	goto	l108
  4776  000F08                     l1914:
  4777  000F08  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4778  000F0A  EF92  F007         	goto	u1650
  4779  000F0E  5002               	movf	(pinMode@pin+1)^0,w,c
  4780  000F10  E107               	bnz	u1651
  4781  000F12  0E18               	movlw	24
  4782  000F14  5C01               	subwf	pinMode@pin^0,w,c
  4783  000F16  B0D8               	btfsc	status,0,c
  4784  000F18  EF90  F007         	goto	u1651
  4785  000F1C  EF92  F007         	goto	u1650
  4786  000F20                     u1651:
  4787  000F20  EFC0  F007         	goto	l1922
  4788  000F24                     u1650:
  4789  000F24                     
  4790                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  4791  000F24  5003               	movf	pinMode@type^0,w,c
  4792  000F26  1004               	iorwf	(pinMode@type+1)^0,w,c
  4793  000F28  B4D8               	btfsc	status,2,c
  4794  000F2A  EF99  F007         	goto	u1661
  4795  000F2E  EF9B  F007         	goto	u1660
  4796  000F32                     u1661:
  4797  000F32  EFAD  F007         	goto	l1920
  4798  000F36                     u1660:
  4799  000F36  C001  F005         	movff	pinMode@pin,??_pinMode
  4800  000F3A  0EF0               	movlw	-16
  4801  000F3C  2605               	addwf	??_pinMode^0,f,c
  4802  000F3E  0E01               	movlw	1
  4803  000F40  6E06               	movwf	(??_pinMode+1)^0,c
  4804  000F42  2A05               	incf	??_pinMode^0,f,c
  4805  000F44  EFA6  F007         	goto	u1674
  4806  000F48                     u1675:
  4807  000F48  90D8               	bcf	status,0,c
  4808  000F4A  3606               	rlcf	(??_pinMode+1)^0,f,c
  4809  000F4C                     u1674:
  4810  000F4C  2E05               	decfsz	??_pinMode^0,f,c
  4811  000F4E  EFA4  F007         	goto	u1675
  4812  000F52  5006               	movf	(??_pinMode+1)^0,w,c
  4813  000F54  1294               	iorwf	148,f,c	;volatile
  4814  000F56  EF36  F008         	goto	l108
  4815  000F5A                     l1920:
  4816  000F5A  C001  F005         	movff	pinMode@pin,??_pinMode
  4817  000F5E  0EF0               	movlw	-16
  4818  000F60  2605               	addwf	??_pinMode^0,f,c
  4819  000F62  0E01               	movlw	1
  4820  000F64  6E06               	movwf	(??_pinMode+1)^0,c
  4821  000F66  2A05               	incf	??_pinMode^0,f,c
  4822  000F68  EFB8  F007         	goto	u1684
  4823  000F6C                     u1685:
  4824  000F6C  90D8               	bcf	status,0,c
  4825  000F6E  3606               	rlcf	(??_pinMode+1)^0,f,c
  4826  000F70                     u1684:
  4827  000F70  2E05               	decfsz	??_pinMode^0,f,c
  4828  000F72  EFB6  F007         	goto	u1685
  4829  000F76  5006               	movf	(??_pinMode+1)^0,w,c
  4830  000F78  0AFF               	xorlw	255
  4831  000F7A  1694               	andwf	148,f,c	;volatile
  4832  000F7C  EF36  F008         	goto	l108
  4833  000F80                     l1922:
  4834  000F80  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4835  000F82  EFCE  F007         	goto	u1690
  4836  000F86  5002               	movf	(pinMode@pin+1)^0,w,c
  4837  000F88  E107               	bnz	u1691
  4838  000F8A  0E20               	movlw	32
  4839  000F8C  5C01               	subwf	pinMode@pin^0,w,c
  4840  000F8E  B0D8               	btfsc	status,0,c
  4841  000F90  EFCC  F007         	goto	u1691
  4842  000F94  EFCE  F007         	goto	u1690
  4843  000F98                     u1691:
  4844  000F98  EFFC  F007         	goto	l1930
  4845  000F9C                     u1690:
  4846  000F9C                     
  4847                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  4848  000F9C  5003               	movf	pinMode@type^0,w,c
  4849  000F9E  1004               	iorwf	(pinMode@type+1)^0,w,c
  4850  000FA0  B4D8               	btfsc	status,2,c
  4851  000FA2  EFD5  F007         	goto	u1701
  4852  000FA6  EFD7  F007         	goto	u1700
  4853  000FAA                     u1701:
  4854  000FAA  EFE9  F007         	goto	l1928
  4855  000FAE                     u1700:
  4856  000FAE  C001  F005         	movff	pinMode@pin,??_pinMode
  4857  000FB2  0EE8               	movlw	-24
  4858  000FB4  2605               	addwf	??_pinMode^0,f,c
  4859  000FB6  0E01               	movlw	1
  4860  000FB8  6E06               	movwf	(??_pinMode+1)^0,c
  4861  000FBA  2A05               	incf	??_pinMode^0,f,c
  4862  000FBC  EFE2  F007         	goto	u1714
  4863  000FC0                     u1715:
  4864  000FC0  90D8               	bcf	status,0,c
  4865  000FC2  3606               	rlcf	(??_pinMode+1)^0,f,c
  4866  000FC4                     u1714:
  4867  000FC4  2E05               	decfsz	??_pinMode^0,f,c
  4868  000FC6  EFE0  F007         	goto	u1715
  4869  000FCA  5006               	movf	(??_pinMode+1)^0,w,c
  4870  000FCC  1295               	iorwf	149,f,c	;volatile
  4871  000FCE  EF36  F008         	goto	l108
  4872  000FD2                     l1928:
  4873  000FD2  C001  F005         	movff	pinMode@pin,??_pinMode
  4874  000FD6  0EE8               	movlw	-24
  4875  000FD8  2605               	addwf	??_pinMode^0,f,c
  4876  000FDA  0E01               	movlw	1
  4877  000FDC  6E06               	movwf	(??_pinMode+1)^0,c
  4878  000FDE  2A05               	incf	??_pinMode^0,f,c
  4879  000FE0  EFF4  F007         	goto	u1724
  4880  000FE4                     u1725:
  4881  000FE4  90D8               	bcf	status,0,c
  4882  000FE6  3606               	rlcf	(??_pinMode+1)^0,f,c
  4883  000FE8                     u1724:
  4884  000FE8  2E05               	decfsz	??_pinMode^0,f,c
  4885  000FEA  EFF2  F007         	goto	u1725
  4886  000FEE  5006               	movf	(??_pinMode+1)^0,w,c
  4887  000FF0  0AFF               	xorlw	255
  4888  000FF2  1695               	andwf	149,f,c	;volatile
  4889  000FF4  EF36  F008         	goto	l108
  4890  000FF8                     l1930:
  4891  000FF8  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4892  000FFA  EF0A  F008         	goto	u1730
  4893  000FFE  5002               	movf	(pinMode@pin+1)^0,w,c
  4894  001000  E107               	bnz	u1731
  4895  001002  0E28               	movlw	40
  4896  001004  5C01               	subwf	pinMode@pin^0,w,c
  4897  001006  B0D8               	btfsc	status,0,c
  4898  001008  EF08  F008         	goto	u1731
  4899  00100C  EF0A  F008         	goto	u1730
  4900  001010                     u1731:
  4901  001010  EF36  F008         	goto	l108
  4902  001014                     u1730:
  4903  001014                     
  4904                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  4905  001014  5003               	movf	pinMode@type^0,w,c
  4906  001016  1004               	iorwf	(pinMode@type+1)^0,w,c
  4907  001018  B4D8               	btfsc	status,2,c
  4908  00101A  EF11  F008         	goto	u1741
  4909  00101E  EF13  F008         	goto	u1740
  4910  001022                     u1741:
  4911  001022  EF25  F008         	goto	l1936
  4912  001026                     u1740:
  4913  001026  C001  F005         	movff	pinMode@pin,??_pinMode
  4914  00102A  0EE0               	movlw	-32
  4915  00102C  2605               	addwf	??_pinMode^0,f,c
  4916  00102E  0E01               	movlw	1
  4917  001030  6E06               	movwf	(??_pinMode+1)^0,c
  4918  001032  2A05               	incf	??_pinMode^0,f,c
  4919  001034  EF1E  F008         	goto	u1754
  4920  001038                     u1755:
  4921  001038  90D8               	bcf	status,0,c
  4922  00103A  3606               	rlcf	(??_pinMode+1)^0,f,c
  4923  00103C                     u1754:
  4924  00103C  2E05               	decfsz	??_pinMode^0,f,c
  4925  00103E  EF1C  F008         	goto	u1755
  4926  001042  5006               	movf	(??_pinMode+1)^0,w,c
  4927  001044  1296               	iorwf	150,f,c	;volatile
  4928  001046  EF36  F008         	goto	l108
  4929  00104A                     l1936:
  4930  00104A  C001  F005         	movff	pinMode@pin,??_pinMode
  4931  00104E  0EE0               	movlw	-32
  4932  001050  2605               	addwf	??_pinMode^0,f,c
  4933  001052  0E01               	movlw	1
  4934  001054  6E06               	movwf	(??_pinMode+1)^0,c
  4935  001056  2A05               	incf	??_pinMode^0,f,c
  4936  001058  EF30  F008         	goto	u1764
  4937  00105C                     u1765:
  4938  00105C  90D8               	bcf	status,0,c
  4939  00105E  3606               	rlcf	(??_pinMode+1)^0,f,c
  4940  001060                     u1764:
  4941  001060  2E05               	decfsz	??_pinMode^0,f,c
  4942  001062  EF2E  F008         	goto	u1765
  4943  001066  5006               	movf	(??_pinMode+1)^0,w,c
  4944  001068  0AFF               	xorlw	255
  4945  00106A  1696               	andwf	150,f,c	;volatile
  4946  00106C                     l108:
  4947  00106C  0012               	return		;funcret
  4948  00106E                     __end_of_pinMode:
  4949                           	callstack 0
  4950                           
  4951 ;; *************** function ___awmod *****************
  4952 ;; Defined at:
  4953 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  dividend        2    8[COMRAM] int 
  4956 ;;  divisor         2   10[COMRAM] int 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;  sign            1   13[COMRAM] unsigned char 
  4959 ;;  counter         1   12[COMRAM] unsigned char 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  2    8[COMRAM] int 
  4962 ;; Registers used:
  4963 ;;		wreg, status,2, status,0
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4969 ;;      Params:         4       0       0       0       0       0       0
  4970 ;;      Locals:         2       0       0       0       0       0       0
  4971 ;;      Temps:          0       0       0       0       0       0       0
  4972 ;;      Totals:         6       0       0       0       0       0       0
  4973 ;;Total ram usage:        6 bytes
  4974 ;; Hardware stack levels used: 1
  4975 ;; This function calls:
  4976 ;;		Nothing
  4977 ;; This function is called by:
  4978 ;;		_main
  4979 ;;		_lcdNumber
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           	psect	text33
  4984  0016FE                     __ptext33:
  4985                           	callstack 0
  4986  0016FE                     ___awmod:
  4987                           	callstack 30
  4988  0016FE  0E00               	movlw	0
  4989  001700  6E0E               	movwf	___awmod@sign^0,c
  4990  001702  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  4991  001704  EF88  F00B         	goto	u2230
  4992  001708  EF86  F00B         	goto	u2231
  4993  00170C                     u2231:
  4994  00170C  EF8E  F00B         	goto	l2308
  4995  001710                     u2230:
  4996  001710  6C09               	negf	___awmod@dividend^0,c
  4997  001712  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4998  001714  B0D8               	btfsc	status,0,c
  4999  001716  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  5000  001718  0E01               	movlw	1
  5001  00171A  6E0E               	movwf	___awmod@sign^0,c
  5002  00171C                     l2308:
  5003  00171C  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  5004  00171E  EF95  F00B         	goto	u2240
  5005  001722  EF93  F00B         	goto	u2241
  5006  001726                     u2241:
  5007  001726  EF99  F00B         	goto	l2312
  5008  00172A                     u2240:
  5009  00172A  6C0B               	negf	___awmod@divisor^0,c
  5010  00172C  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  5011  00172E  B0D8               	btfsc	status,0,c
  5012  001730  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  5013  001732                     l2312:
  5014  001732  500B               	movf	___awmod@divisor^0,w,c
  5015  001734  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  5016  001736  B4D8               	btfsc	status,2,c
  5017  001738  EFA0  F00B         	goto	u2251
  5018  00173C  EFA2  F00B         	goto	u2250
  5019  001740                     u2251:
  5020  001740  EFC6  F00B         	goto	l2328
  5021  001744                     u2250:
  5022  001744  0E01               	movlw	1
  5023  001746  6E0D               	movwf	___awmod@counter^0,c
  5024  001748  EFAA  F00B         	goto	l2318
  5025  00174C                     l2316:
  5026  00174C  90D8               	bcf	status,0,c
  5027  00174E  360B               	rlcf	___awmod@divisor^0,f,c
  5028  001750  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  5029  001752  2A0D               	incf	___awmod@counter^0,f,c
  5030  001754                     l2318:
  5031  001754  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  5032  001756  EFAF  F00B         	goto	u2261
  5033  00175A  EFB1  F00B         	goto	u2260
  5034  00175E                     u2261:
  5035  00175E  EFA6  F00B         	goto	l2316
  5036  001762                     u2260:
  5037  001762                     l2320:
  5038  001762  500B               	movf	___awmod@divisor^0,w,c
  5039  001764  5C09               	subwf	___awmod@dividend^0,w,c
  5040  001766  500C               	movf	(___awmod@divisor+1)^0,w,c
  5041  001768  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  5042  00176A  A0D8               	btfss	status,0,c
  5043  00176C  EFBA  F00B         	goto	u2271
  5044  001770  EFBC  F00B         	goto	u2270
  5045  001774                     u2271:
  5046  001774  EFC0  F00B         	goto	l2324
  5047  001778                     u2270:
  5048  001778  500B               	movf	___awmod@divisor^0,w,c
  5049  00177A  5E09               	subwf	___awmod@dividend^0,f,c
  5050  00177C  500C               	movf	(___awmod@divisor+1)^0,w,c
  5051  00177E  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  5052  001780                     l2324:
  5053  001780  90D8               	bcf	status,0,c
  5054  001782  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  5055  001784  320B               	rrcf	___awmod@divisor^0,f,c
  5056  001786  2E0D               	decfsz	___awmod@counter^0,f,c
  5057  001788  EFB1  F00B         	goto	l2320
  5058  00178C                     l2328:
  5059  00178C  500E               	movf	___awmod@sign^0,w,c
  5060  00178E  B4D8               	btfsc	status,2,c
  5061  001790  EFCC  F00B         	goto	u2281
  5062  001794  EFCE  F00B         	goto	u2280
  5063  001798                     u2281:
  5064  001798  EFD2  F00B         	goto	l2332
  5065  00179C                     u2280:
  5066  00179C  6C09               	negf	___awmod@dividend^0,c
  5067  00179E  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  5068  0017A0  B0D8               	btfsc	status,0,c
  5069  0017A2  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  5070  0017A4                     l2332:
  5071  0017A4  C009  F009         	movff	___awmod@dividend,?___awmod
  5072  0017A8  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  5073  0017AC  0012               	return		;funcret
  5074  0017AE                     __end_of___awmod:
  5075                           	callstack 0
  5076                           
  5077 ;; *************** function ___awdiv *****************
  5078 ;; Defined at:
  5079 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;  dividend        2    0[COMRAM] int 
  5082 ;;  divisor         2    2[COMRAM] int 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  quotient        2    6[COMRAM] int 
  5085 ;;  sign            1    5[COMRAM] unsigned char 
  5086 ;;  counter         1    4[COMRAM] unsigned char 
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  2    0[COMRAM] int 
  5089 ;; Registers used:
  5090 ;;		wreg, status,2, status,0
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5096 ;;      Params:         4       0       0       0       0       0       0
  5097 ;;      Locals:         4       0       0       0       0       0       0
  5098 ;;      Temps:          0       0       0       0       0       0       0
  5099 ;;      Totals:         8       0       0       0       0       0       0
  5100 ;;Total ram usage:        8 bytes
  5101 ;; Hardware stack levels used: 1
  5102 ;; This function calls:
  5103 ;;		Nothing
  5104 ;; This function is called by:
  5105 ;;		_main
  5106 ;;		_lcdNumber
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text34
  5111  001586                     __ptext34:
  5112                           	callstack 0
  5113  001586                     ___awdiv:
  5114                           	callstack 30
  5115  001586  0E00               	movlw	0
  5116  001588  6E06               	movwf	___awdiv@sign^0,c
  5117  00158A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5118  00158C  EFCC  F00A         	goto	u2170
  5119  001590  EFCA  F00A         	goto	u2171
  5120  001594                     u2171:
  5121  001594  EFD2  F00A         	goto	l2264
  5122  001598                     u2170:
  5123  001598  6C03               	negf	___awdiv@divisor^0,c
  5124  00159A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5125  00159C  B0D8               	btfsc	status,0,c
  5126  00159E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5127  0015A0  0E01               	movlw	1
  5128  0015A2  6E06               	movwf	___awdiv@sign^0,c
  5129  0015A4                     l2264:
  5130  0015A4  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5131  0015A6  EFD9  F00A         	goto	u2180
  5132  0015AA  EFD7  F00A         	goto	u2181
  5133  0015AE                     u2181:
  5134  0015AE  EFDF  F00A         	goto	l2270
  5135  0015B2                     u2180:
  5136  0015B2  6C01               	negf	___awdiv@dividend^0,c
  5137  0015B4  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5138  0015B6  B0D8               	btfsc	status,0,c
  5139  0015B8  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5140  0015BA  0E01               	movlw	1
  5141  0015BC  1A06               	xorwf	___awdiv@sign^0,f,c
  5142  0015BE                     l2270:
  5143  0015BE  0E00               	movlw	0
  5144  0015C0  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5145  0015C2  0E00               	movlw	0
  5146  0015C4  6E07               	movwf	___awdiv@quotient^0,c
  5147  0015C6  5003               	movf	___awdiv@divisor^0,w,c
  5148  0015C8  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5149  0015CA  B4D8               	btfsc	status,2,c
  5150  0015CC  EFEA  F00A         	goto	u2191
  5151  0015D0  EFEC  F00A         	goto	u2190
  5152  0015D4                     u2191:
  5153  0015D4  EF14  F00B         	goto	l2292
  5154  0015D8                     u2190:
  5155  0015D8  0E01               	movlw	1
  5156  0015DA  6E05               	movwf	___awdiv@counter^0,c
  5157  0015DC  EFF4  F00A         	goto	l2278
  5158  0015E0                     l2276:
  5159  0015E0  90D8               	bcf	status,0,c
  5160  0015E2  3603               	rlcf	___awdiv@divisor^0,f,c
  5161  0015E4  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5162  0015E6  2A05               	incf	___awdiv@counter^0,f,c
  5163  0015E8                     l2278:
  5164  0015E8  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5165  0015EA  EFF9  F00A         	goto	u2201
  5166  0015EE  EFFB  F00A         	goto	u2200
  5167  0015F2                     u2201:
  5168  0015F2  EFF0  F00A         	goto	l2276
  5169  0015F6                     u2200:
  5170  0015F6                     l2280:
  5171  0015F6  90D8               	bcf	status,0,c
  5172  0015F8  3607               	rlcf	___awdiv@quotient^0,f,c
  5173  0015FA  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5174  0015FC  5003               	movf	___awdiv@divisor^0,w,c
  5175  0015FE  5C01               	subwf	___awdiv@dividend^0,w,c
  5176  001600  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5177  001602  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5178  001604  A0D8               	btfss	status,0,c
  5179  001606  EF07  F00B         	goto	u2211
  5180  00160A  EF09  F00B         	goto	u2210
  5181  00160E                     u2211:
  5182  00160E  EF0E  F00B         	goto	l2288
  5183  001612                     u2210:
  5184  001612  5003               	movf	___awdiv@divisor^0,w,c
  5185  001614  5E01               	subwf	___awdiv@dividend^0,f,c
  5186  001616  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5187  001618  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5188  00161A  8007               	bsf	___awdiv@quotient^0,0,c
  5189  00161C                     l2288:
  5190  00161C  90D8               	bcf	status,0,c
  5191  00161E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5192  001620  3203               	rrcf	___awdiv@divisor^0,f,c
  5193  001622  2E05               	decfsz	___awdiv@counter^0,f,c
  5194  001624  EFFB  F00A         	goto	l2280
  5195  001628                     l2292:
  5196  001628  5006               	movf	___awdiv@sign^0,w,c
  5197  00162A  B4D8               	btfsc	status,2,c
  5198  00162C  EF1A  F00B         	goto	u2221
  5199  001630  EF1C  F00B         	goto	u2220
  5200  001634                     u2221:
  5201  001634  EF20  F00B         	goto	l2296
  5202  001638                     u2220:
  5203  001638  6C07               	negf	___awdiv@quotient^0,c
  5204  00163A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5205  00163C  B0D8               	btfsc	status,0,c
  5206  00163E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5207  001640                     l2296:
  5208  001640  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5209  001644  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5210  001648  0012               	return		;funcret
  5211  00164A                     __end_of___awdiv:
  5212                           	callstack 0
  5213                           
  5214                           	psect	rparam
  5215  0000                     
  5216                           	psect	idloc
  5217                           
  5218                           ;Config register IDLOC0 @ 0x200000
  5219                           ;	unspecified, using default values
  5220  200000                     	org	2097152
  5221  200000  FF                 	db	255
  5222                           
  5223                           ;Config register IDLOC1 @ 0x200001
  5224                           ;	unspecified, using default values
  5225  200001                     	org	2097153
  5226  200001  FF                 	db	255
  5227                           
  5228                           ;Config register IDLOC2 @ 0x200002
  5229                           ;	unspecified, using default values
  5230  200002                     	org	2097154
  5231  200002  FF                 	db	255
  5232                           
  5233                           ;Config register IDLOC3 @ 0x200003
  5234                           ;	unspecified, using default values
  5235  200003                     	org	2097155
  5236  200003  FF                 	db	255
  5237                           
  5238                           ;Config register IDLOC4 @ 0x200004
  5239                           ;	unspecified, using default values
  5240  200004                     	org	2097156
  5241  200004  FF                 	db	255
  5242                           
  5243                           ;Config register IDLOC5 @ 0x200005
  5244                           ;	unspecified, using default values
  5245  200005                     	org	2097157
  5246  200005  FF                 	db	255
  5247                           
  5248                           ;Config register IDLOC6 @ 0x200006
  5249                           ;	unspecified, using default values
  5250  200006                     	org	2097158
  5251  200006  FF                 	db	255
  5252                           
  5253                           ;Config register IDLOC7 @ 0x200007
  5254                           ;	unspecified, using default values
  5255  200007                     	org	2097159
  5256  200007  FF                 	db	255
  5257                           
  5258                           	psect	config
  5259                           
  5260                           ; Padding undefined space
  5261  300000                     	org	3145728
  5262  300000  FF                 	db	255
  5263                           
  5264                           ;Config register CONFIG1H @ 0x300001
  5265                           ;	Oscillator Selection bits
  5266                           ;	OSC = HS, HS oscillator
  5267                           ;	Fail-Safe Clock Monitor Enable bit
  5268                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5269                           ;	Internal/External Oscillator Switchover bit
  5270                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5271  300001                     	org	3145729
  5272  300001  02                 	db	2
  5273                           
  5274                           ;Config register CONFIG2L @ 0x300002
  5275                           ;	Power-up Timer Enable bit
  5276                           ;	PWRT = OFF, PWRT disabled
  5277                           ;	Brown-out Reset Enable bits
  5278                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5279                           ;	Brown Out Reset Voltage bits
  5280                           ;	BORV = 0x2E, user specified literal
  5281  300002                     	org	3145730
  5282  300002  71                 	db	369
  5283                           
  5284                           ;Config register CONFIG2H @ 0x300003
  5285                           ;	Watchdog Timer Enable bit
  5286                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5287                           ;	Watchdog Timer Postscale Select bits
  5288                           ;	WDTPS = 1, 1:1
  5289  300003                     	org	3145731
  5290  300003  00                 	db	0
  5291                           
  5292                           ; Padding undefined space
  5293  300004                     	org	3145732
  5294  300004  FF                 	db	255
  5295                           
  5296                           ;Config register CONFIG3H @ 0x300005
  5297                           ;	CCP2 MUX bit
  5298                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5299                           ;	PORTB A/D Enable bit
  5300                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5301                           ;	Low-Power Timer1 Oscillator Enable bit
  5302                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5303                           ;	MCLR Pin Enable bit
  5304                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5305  300005                     	org	3145733
  5306  300005  83                 	db	131
  5307                           
  5308                           ;Config register CONFIG4L @ 0x300006
  5309                           ;	Stack Full/Underflow Reset Enable bit
  5310                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5311                           ;	Single-Supply ICSP Enable bit
  5312                           ;	LVP = OFF, Single-Supply ICSP disabled
  5313                           ;	Extended Instruction Set Enable bit
  5314                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5315                           ;	Background Debugger Enable bit
  5316                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5317  300006                     	org	3145734
  5318  300006  80                 	db	128
  5319                           
  5320                           ; Padding undefined space
  5321  300007                     	org	3145735
  5322  300007  FF                 	db	255
  5323                           
  5324                           ;Config register CONFIG5L @ 0x300008
  5325                           ;	Code Protection bit
  5326                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5327                           ;	Code Protection bit
  5328                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5329                           ;	Code Protection bit
  5330                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5331                           ;	Code Protection bit
  5332                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5333  300008                     	org	3145736
  5334  300008  0F                 	db	15
  5335                           
  5336                           ;Config register CONFIG5H @ 0x300009
  5337                           ;	Boot Block Code Protection bit
  5338                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5339                           ;	Data EEPROM Code Protection bit
  5340                           ;	CPD = OFF, Data EEPROM not code-protected
  5341  300009                     	org	3145737
  5342  300009  C0                 	db	192
  5343                           
  5344                           ;Config register CONFIG6L @ 0x30000A
  5345                           ;	Write Protection bit
  5346                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5347                           ;	Write Protection bit
  5348                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5349                           ;	Write Protection bit
  5350                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5351                           ;	Write Protection bit
  5352                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5353  30000A                     	org	3145738
  5354  30000A  0F                 	db	15
  5355                           
  5356                           ;Config register CONFIG6H @ 0x30000B
  5357                           ;	Configuration Register Write Protection bit
  5358                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5359                           ;	Boot Block Write Protection bit
  5360                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  5361                           ;	Data EEPROM Write Protection bit
  5362                           ;	WRTD = OFF, Data EEPROM not write-protected
  5363  30000B                     	org	3145739
  5364  30000B  E0                 	db	224
  5365                           
  5366                           ;Config register CONFIG7L @ 0x30000C
  5367                           ;	Table Read Protection bit
  5368                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5369                           ;	Table Read Protection bit
  5370                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5371                           ;	Table Read Protection bit
  5372                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5373                           ;	Table Read Protection bit
  5374                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5375  30000C                     	org	3145740
  5376  30000C  0F                 	db	15
  5377                           
  5378                           ;Config register CONFIG7H @ 0x30000D
  5379                           ;	Boot Block Table Read Protection bit
  5380                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5381  30000D                     	org	3145741
  5382  30000D  40                 	db	64
  5383                           tosu	equ	0xFFF
  5384                           tosh	equ	0xFFE
  5385                           tosl	equ	0xFFD
  5386                           stkptr	equ	0xFFC
  5387                           pclatu	equ	0xFFB
  5388                           pclath	equ	0xFFA
  5389                           pcl	equ	0xFF9
  5390                           tblptru	equ	0xFF8
  5391                           tblptrh	equ	0xFF7
  5392                           tblptrl	equ	0xFF6
  5393                           tablat	equ	0xFF5
  5394                           prodh	equ	0xFF4
  5395                           prodl	equ	0xFF3
  5396                           indf0	equ	0xFEF
  5397                           postinc0	equ	0xFEE
  5398                           postdec0	equ	0xFED
  5399                           preinc0	equ	0xFEC
  5400                           plusw0	equ	0xFEB
  5401                           fsr0h	equ	0xFEA
  5402                           fsr0l	equ	0xFE9
  5403                           wreg	equ	0xFE8
  5404                           indf1	equ	0xFE7
  5405                           postinc1	equ	0xFE6
  5406                           postdec1	equ	0xFE5
  5407                           preinc1	equ	0xFE4
  5408                           plusw1	equ	0xFE3
  5409                           fsr1h	equ	0xFE2
  5410                           fsr1l	equ	0xFE1
  5411                           bsr	equ	0xFE0
  5412                           indf2	equ	0xFDF
  5413                           postinc2	equ	0xFDE
  5414                           postdec2	equ	0xFDD
  5415                           preinc2	equ	0xFDC
  5416                           plusw2	equ	0xFDB
  5417                           fsr2h	equ	0xFDA
  5418                           fsr2l	equ	0xFD9
  5419                           status	equ	0xFD8

Data Sizes:
    Strings     108
    Constant    26
    Data        23
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     59      94
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 17
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[16]), STR_2(CODE[8]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_lcdString
    _ssdUpdate->_soWrite
    _ssdInit->_pinMode
    _ssdDigit->___awmod
    _pwmSet->___lwdiv
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _lcdString->_lcdChar
    _lcdChar->_pushByte
    _lcdPosition->_lcdCommand
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _adcInit->_pinMode
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0  176837
                                             20 COMRAM    39    39      0
                            ___awdiv
                            ___awmod
                            _adcInit
                            _adcRead
                          _atraso_ms
                         _kpDebounce
                             _kpInit
                             _kpRead
                            _lcdInit
                        _lcdPosition
                          _lcdString
                            _pwmInit
                             _pwmSet
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0   21377
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    6048
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _ssdDigit                                             2     1      1     480
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwmSet                                               5     5      0     716
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0     550
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2     550
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcdString                                            6     4      2   28177
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0   27555
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          4     0      4   28677
                                             14 COMRAM     4     0      4
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   61564
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   27261
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   27525
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   27153
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _pulseEnablePin                                       0     0      0    5536
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    6048
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    3024
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   16705
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _soWrite                                              3     1      2   16221
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseEnClock                                         0     0      0    5156
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseClockData                                       0     0      0    5156
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    5156
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _atraso_ms                                            6     4      2     214
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              4     2      2     145
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0    3024
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    3024
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1056
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _adcInit
     _pinMode
   _adcRead
   _atraso_ms
   _kpDebounce
     _digitalRead
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _kpRead
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
       _delayMili
       _pushByte
         _digitalWrite
         _pulseEnablePin
           _delayMicro
           _digitalWrite
         _soWrite
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _lcdPosition
     _lcdCommand
   _lcdString
     _lcdChar
       _delayMicro
       _pushByte
   _pwmInit
     _pwmFrequency
       ___aldiv
   _pwmSet
     ___lwdiv
     ___wmul
   _ssdDigit
     ___awdiv (ARG)
     ___awmod (ARG)
   _ssdInit
     _pinMode
     _soInit
   _ssdUpdate
     _digitalWrite
     _soWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3B      5E       1       74.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5E      15        0.0%
DATA                 0      0      5E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 16:55:36 2021

         _pulseEnablePin 1B36             lcdString@msg 000F                       l21 1A82  
                     l22 1A9E                       l15 1B34                       l32 18F0  
                     l19 1A74                       l74 0E1E                       l83 133E  
                     l78 1342                       l79 133E             ___awdiv@sign 0006  
                     _v0 005C                       _v1 005B                       _v2 005A  
                     _v3 0059      ___wmul@multiplicand 0003                      l202 16FC  
                    l108 106C                      l125 1DC4                      l221 1DA2  
                    l150 1C56                      l215 188C                      l145 1460  
                    l161 1DC6                      l170 1B76                      l218 1D26  
                    l147 1478                      l403 11D8                      l173 1D4C  
                    l406 19F8                      l167 1C86                      l343 0A4E  
                    l176 194A                      l184 1BEE                      l193 1A4E  
                    l409 1D00                      l291 1CB0                      l179 1D88  
                    l187 1D6A                      l294 1CDA                      l640 1648  
                    l288 1BB4                      l393 19A2                      l299 1AEC  
                    l900 1818                      l653 17AC                      l488 1584  
                    l907 1820                      _PR2 000FCB             ___awmod@sign 000E  
                    prod 000FF3                      wreg 000FE8                     l2000 123A  
                   l2100 18B6                     l2022 12F6                     l2014 12AE  
                   l2006 1266                     l2030 1D2A                     l2104 18CA  
                   l2112 18D6                     l2024 1312                     l2016 12CA  
                   l2008 1282                     l2120 1354                     l2032 1D6E  
                   l2200 1D96                     l2040 1CDC                     l2114 18DA  
                   l2130 1404                     l2034 1D50                     l2050 17C8  
                   l2042 1CF8                     l2210 1972                     l2202 19A4  
                   l2300 16FE                     l2108 18D0                     l2140 1454  
                   l2132 142E                     l2124 1374                     l2028 1B78  
                   l2116 1DBC                     l2036 1D5E                     l2060 1802  
                   l2052 17D0                     l2212 1976                     l2204 194E  
                   l2220 106E                     l2310 172A                     l2302 1702  
                   l2070 1B2A                     l2142 1458                     l2126 13C0  
                   l2118 1344                     l2150 1BB6                     l2038 1D02  
                   l2062 180A                     l2054 17D8                     l2046 17AE  
                   l2214 1988                     l2206 195E                     l2230 111A  
                   l2222 10CE                     l2320 1762                     l2312 1732  
                   l2304 1710                     l2072 1B2C                     l2080 1A72  
                   l2144 1470                     l2128 13E6                     l2136 1436  
                   l2152 1BC8                     l2160 1A06                     l2064 180C  
                   l2056 17E6                     l2048 17B6                     l2216 198C  
                   l2208 1962                     l2240 116A                     l2232 112E  
                   l2224 10E6                     l2400 06DC                     l2330 179C  
                   l2322 1778                     l2314 1744                     l2306 1718  
                   l2074 1B30                     l2082 1A88                     l2090 188E  
                   l2138 144E                     l2146 1C26                     l2170 16B6  
                   l2154 1BD2                     l2162 1A22                     l2066 1812  
                   l2058 17EC                     l2218 199E                     l2242 1182  
                   l2234 1136                     l2226 10FA                     l2250 119E  
                   l2410 0708                     l2402 06E0                     l2260 1598  
                   l2332 17A4                     l2324 1780                     l2316 174C  
                   l2308 171C                     l2068 1AEE                     l2084 1A8E  
                   l2076 1A50                     l2092 189A                     l2148 1C52  
                   l2180 16F6                     l2172 16D0                     l2156 1BE4  
                   l2164 1A26                     l2244 1196                     l2236 114E  
                   l2228 1102                     l2500 0A2A                     l2420 0766  
                   l2412 071C                     l2404 06E4                     l2270 15BE  
                   l2262 15A0                     l2326 1786                     l2318 1754  
                   l2086 1A96                     l2078 1A6A                     l2094 189E  
                   l2174 16DE                     l2166 164A                     l2158 19FA  
                   l2190 187E                     l2182 1824                     l2238 1162  
                   l2502 0A46                     l2430 07BA                     l2422 0782  
                   l2414 072C                     l2406 06E8                     l2280 15F6  
                   l2272 15C6                     l2264 15A4                     l2256 1586  
                   l2328 178C                     l2176 16EA                     l2168 16AA  
                   l2192 1D8A                     l2184 1842                     l2520 0B64  
                   l2504 0A56                     l2440 081C                     l2432 07C8  
                   l2424 078A                     l2416 074C                     l2512 0B12  
                   l2408 06FC                     l2290 1622                     l2282 15FC  
                   l2274 15D8                     l2266 15B2                     l2258 158A  
                   l2098 18B2                     l2178 16F0                     l2194 1D8C  
                   l2186 185E                     l2530 0BBE                     l2522 0B78  
                   l2506 0B0A                     l2514 0B3C                     l2450 088A  
                   l2442 0822                     l2434 07CC                     l2426 0798  
                   l2418 0758                     l2284 1612                     l2276 15E0  
                   l2292 1628                     l2268 15BA                     l1900 0E3C  
                   l2196 1D90                     l2188 1866                     l2524 0B94  
                   l2516 0B4C                     l2460 08CE                     l2452 089E  
                   l2444 0850                     l2436 07DA                     l2428 07B2  
                   l2294 1638                     l2286 161A                     l2278 15E8  
                   l1910 0EBE                     l1902 0E4E                     l1830 0BD2  
                   l2198 1D92                     l2526 0BB4                     l2518 0B54  
                   l2470 0936                     l2462 08EA                     l2454 08AA  
                   l2446 0852                     l2438 07DE                     l2390 06A2  
                   l2296 1640                     l2288 161C                     l1920 0F5A  
                   l1912 0EE2                     l1904 0E6E                     l1840 0C5E  
                   l1832 0BEE                     l2528 0BB8                     l2544 0B26  
                   l2480 099E                     l2472 0952                     l2464 08FA  
                   l2456 08AE                     l2448 086E                     l2392 06CC  
                   l1930 0FF8                     l1922 0F80                     l1914 0F08  
                   l1906 0E90                     l1850 0CF0                     l1842 0C78  
                   l1834 0C00                     l2546 11B2                     l2490 09F0  
                   l2482 09BA                     l2474 0962                     l2466 090E  
                   l2458 08B2                     l2394 06D0                     l2386 0688  
                   l1932 1014                     l1924 0F9C                     l1916 0F24  
                   l1908 0EAC                     l1860 0D88                     l1852 0D10  
                   l1844 0C98                     l1836 0C20                     l1940 1C64  
                   l2492 0A04                     l2484 09CE                     l2476 0976  
                   l2468 091A                     l2396 06D4                     l2388 0690  
                   l1934 1026                     l1926 0FAE                     l1918 0F36  
                   l1862 0DAA                     l1854 0D32                     l1846 0CBA  
                   l1838 0C42                     l1870 1C88                     l1942 1C68  
                   l1950 148C                     l2494 0A10                     l2486 09DA  
                   l2478 0982                     l2398 06D8                     l1936 104A  
                   l1928 0FD2                     l1864 0DC6                     l1856 0D4E  
                   l1848 0CD6                     l1872 1CB2                     l1944 18F4  
                   l1960 14C2                     l1952 149C                     l2496 0A14  
                   l2488 09DE                     l1866 0DE0                     l1858 0D68  
                   l1890 1AE8                     l1882 1AB8                     l1874 1AA0  
                   l1938 1C58                     l1970 150A                     l1962 14D2  
                   l1954 14A0                     l1946 147A                     l2498 0A22  
                   l1868 0E00                     l1884 1AD0                     l1876 1AB4  
                   l1892 1B36                     l1980 154E                     l1972 1514  
                   l1964 14E8                     l1956 14AE                     l1948 147E  
                   l1990 11DA                     l1886 1AD6                     l1894 1B4A  
                   l1974 1532                     l1966 14F0                     l1982 1554  
                   l1958 14BE                     l1992 11F6                     l1888 1AD8  
                   l1896 1B56                     l1984 1564                     l1976 1542  
                   l1968 14FC                     l1898 0E20                     l1986 1574  
                   l1978 1544                     l1998 121E                     STR_1 065F  
                   STR_2 067F                     STR_3 066F                     STR_4 063D  
                   STR_5 062C                     STR_6 064E                     STR_7 061B  
                   u2000 18C6                     u2001 18C2                     u2010 18F0  
                   u2011 18EC                     u2020 1370                     u2100 1BC8  
                   u2021 136C                     u2101 1BC4                     u2110 1BE4  
                   u2111 1BE0                     u2200 15F6                     u1400 0C5E  
                   u2040 13C0                     u2120 1A4E                     u2201 15F2  
                   u1401 0C5A                     u2041 13BC                     u2121 1A4A  
                   u2210 1612                     u1410 0C78                     u2034 1390  
                   u2130 195E                     u2211 160E                     u1411 0C74  
                   u2035 138A                     u2131 195A                     u2220 1638  
                   u2060 1404                     u2140 1972                     u2221 1634  
                   u2061 1400                     u2141 196E                     u2230 1710  
                   u2054 13D8                     u2150 1988                     u2231 170C  
                   u2055 13D2                     u2151 1984                     u2240 172A  
                   u1520 0DC6                     u1504 0D7A                     u1440 0CD6  
                   u1424 0C8A                     u1360 0BEE                     u2080 144E  
                   u2160 199E                     u2241 1726                     u1521 0DC2  
                   u1505 0D76                     u1441 0CD2                     u1425 0C86  
                   u1361 0BEA                     u2081 144A                     u2161 199A  
                   u2401 06AC                     u2170 1598                     u2250 1744  
                   u1610 0EAC                     u1530 0DE0                     u1514 0D9A  
                   u1450 0CF0                     u1434 0CAA                     u1370 0C00  
                   u2090 1470                     u2074 1420                     u2410 074C  
                   u2171 1594                     u2251 1740                     u1611 0EA8  
                   u1531 0DDC                     u1515 0D96                     u1451 0CEC  
                   u1435 0CA6                     u1371 0BFC                     u2091 146C  
                   u2075 141A                     u2411 0748                     u2180 15B2  
                   u2260 1762                     u1700 0FAE                     u1620 0EBE  
                   u1604 0E80                     u2500 086E                     u2420 0766  
                   u2181 15AE                     u2261 175E                     u1701 0FAA  
                   u1621 0EBA                     u1605 0E7C                     u2501 086A  
                   u2421 0762                     u2190 15D8                     u2270 1778  
                   u2510 088A                     u2430 0782                     u2191 15D4  
                   u2271 1774                     u2511 0886                     u2431 077E  
                   u2280 179C                     u1544 0DF2                     u1480 0D4E  
                   u1464 0D02                     u1384 0C12                     u1560 1AE8  
                   u1800 14E8                     u2600 09F0                     u2520 08CE  
                   u2440 0798                     u2281 1798                     u1545 0DEE  
                   u1481 0D4A                     u1465 0CFE                     u1385 0C0E  
                   u1561 1AE4                     u1801 14E4                     u2601 09EC  
                   u2521 08CA                     u2441 0794                     u1730 1014  
                   u1714 0FC4                     u1650 0F24                     u1634 0ED4  
                   u1570 0E3C                     u1554 0E12                     u1490 0D68  
                   u1474 0D22                     u1394 0C32                     u1810 150A  
                   u2610 0A22                     u2530 08EA                     u2450 07B2  
                   u1731 1010                     u1715 0FC0                     u1651 0F20  
                   u1635 0ED0                     u1571 0E38                     u1555 0E0E  
                   u1491 0D64                     u1475 0D1E                     u1395 0C2E  
                   u1811 1506                     u2611 0A1E                     u2531 08E6  
                   u2451 07AE                     u1740 1026                     u1724 0FE8  
                   u1660 0F36                     u1644 0EF8                     u1580 0E4E  
                   u1900 12CA                     u1820 1532                     u2620 0A46  
                   u2540 08FA                     u2460 07C8                     u1741 1022  
                   u1725 0FE4                     u1661 0F32                     u1645 0EF4  
                   u1581 0E4A                     u1901 12C6                     u1821 152E  
                   u2621 0A42                     u2541 08F6                     u2461 07C4  
                   u1830 1564                     u2630 0B4C                     u2550 0936  
                   u2470 07DA                     u1831 1560                     u2631 0B48  
                   u2551 0932                     u2471 07D6                     u2391 069A  
                   u1920 1312                     u1840 11F6                     u2640 0B94  
                   u2560 0952                     u2480 081C                     u1921 130E  
                   u1841 11F2                     u2641 0B90                     u2561 094E  
                   u2481 0818                     u1754 103C                     u1690 0F9C  
                   u1674 0F4C                     u1594 0E60                     u1914 12E0  
                   u1770 1C86                     u2570 0962                     u2490 0850  
                   u1755 1038                     u1691 0F98                     u1675 0F48  
                   u1595 0E5C                     u1915 12DC                     u1771 1C82  
                   u2571 095E                     u2491 084C                     u1764 1060  
                   u1684 0F70                     u1860 123A                     u1780 148C  
                   u1940 17C8                     u2580 099E                     u1765 105C  
                   u1685 0F6C                     u1861 1236                     u1781 1488  
                   u1941 17C4                     u2581 099A                     u1934 1328  
                   u1854 1208                     u1790 14AE                     u1950 17E6  
                   u2590 09BA                     u1935 1324                     u1855 1204  
                   u1791 14AA                     u1951 17E2                     u2591 09B6  
                   u1880 1282                     u1960 1802                     u1881 127E  
                   u1961 17FE                     u1970 1A6A                     u1874 1250  
                   u1971 1A66                     u1875 124C                     u1980 1A82  
                   u1981 1A7E                     u1990 18AE                     u1894 1298  
                   u1991 18AA                     u1895 1294                     _PIR1 000F9E  
                   _main 0688                     _keys 0057         ??_PulseClockData 0007  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        pushNibble@value 000C             ___param_bank 000000   __end_of_pulseEnablePin 1B78  
         pwmSet@porcento 000A             main@altitude 003A          __end_of___aldiv 1586  
                  ?_main 0001          __end_of_adcInit 1B36          __end_of_adcRead 1AA0  
        __end_of___awdiv 164A          __end_of___awmod 17AE          ___awdiv@divisor 0003  
                  _T2CON 000FCA          __end_of___lwdiv 1822          ___awdiv@counter 0005  
                  _RCREG 000FAE                    _RCSTA 000FAB                    _SPBRG 000FAF  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _PORTE 000F84          __end_of_charKey 061B  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    _TXREG 000FAD  
                  _TXSTA 000FAC          __end_of_lcdChar 1D6C          __end_of_lcdInit 16FE  
        __end_of_pinMode 106E                    _valor 0601                    main@j 0036  
                  main@k 0037          __end_of_soWrite 1AEE                    tablat 000FF5  
        __end_of_ssdInit 19FA          __end_of_pwmInit 1DA4                    plusw1 000FE3  
                  plusw2 000FDB                    status 000FD8             pushNibble@rs 000A  
   __end_of_digitalWrite 0E20          __initialization 1BF0          ?_pulseEnablePin 0001  
           __end_of_main 0BD2                   ??_main 0015            __activetblptr 000002  
   __size_of_digitalRead 016A                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR2L 000FBB         ___awdiv@dividend 0001             atraso_ms@num 0001  
                 _SPBRGH 000FB0     __size_of_lcdPosition 003A                ??___aldiv 0009  
                 ___wmul 1CDC                ??_adcInit 0007                ??_adcRead 0003  
              ??___awdiv 0005                ??___awmod 000D                ??___lwdiv 0005  
                 _kpInit 1C26                   _kpRead 1DBC                   clear_0 1C16  
                 _soInit 1B78         ___awdiv@quotient 0007          ___awmod@divisor 000B  
              ??_lcdChar 000E                   isa$std 000001                ??_lcdInit 000F  
                 _pwmSet 1822          ___awmod@counter 000D                   main@op 0033  
       __end_of_ssdDigit 19A4             __pdataCOMRAM 003C                ??_pinMode 0005  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_soWrite 0009                ??_ssdInit 0007  
              ??_pwmInit 0011         __end_of_pushByte 194C            main@ultimoAlt 0021  
             __accesstop 0080  __end_of__initialization 1C1C            ___rparam_used 000001  
          pushByte@value 000D              pinMode@type 0003           __pcstackCOMRAM 0001  
          __end_of_valor 0611       __size_of_delayMili 0030       __size_of_lcdString 0056  
     __size_of_atraso_ms 0064    __size_of_digitalWrite 024E               _delayMicro 1DC6  
             _lcdCommand 1D6C                  ?___wmul 0001                  ?_kpInit 0001  
                ?_kpRead 0001                  _CCP2CON 000FBA                  _BAUDCON 000FB8  
                ?_soInit 0001               _kpDebounce 1344                  ?_pwmSet 0001  
     __size_of_ssdUpdate 016C             _digitalWrite 0BD2        __end_of_delayMili 1C88  
       ??_pulseEnablePin 0007                  __Hparam 0000                  __Lparam 0000  
              ?_ssdDigit 000F        __end_of_lcdString 1A50          kpDebounce@tempo 005E  
                ___aldiv 147A                  _adcInit 1AEE                  _adcRead 1A50  
                ___awdiv 1586                  ___awmod 16FE                ?_pushByte 000A  
        __size_of___wmul 0026                  ___lwdiv 17AE        __end_of_atraso_ms 18F2  
           __psmallconst 0600          __size_of_kpInit 0032          __size_of_kpRead 000A  
                _charKey 0611              ssdDigit@val 0010              ssdDigit@pos 000F  
                __pcinit 1BF0                  _lcdChar 1D4E                  __ramtop 0600  
        __size_of_soInit 003E                  _lcdInit 164A                  __ptext0 0688  
                __ptext1 106E                  __ptext2 19A4                  __ptext3 194C  
                __ptext4 1822                  __ptext5 1CDC                  __ptext6 17AE  
                __ptext7 1D8A                  __ptext8 1D02                  __ptext9 147A  
        __size_of_pwmSet 006C                  _display 005D                  _pinMode 0E20  
       ___awmod@dividend 0009         ___aldiv@dividend 0001               delayMili@a 0001  
             delayMili@i 0004                  _soWrite 1AA0                  _ssdInit 19A4  
                _pwmInit 1D8A     end_of_initialization 1C1C            ?_PulseEnClock 0001  
          __Lmediumconst 0000           digitalRead@pin 0001            ?_pwmFrequency 000F  
            ?_delayMicro 0001        __end_of_ssdUpdate 11DA               ??_ssdDigit 0010  
       ___aldiv@quotient 000B                  postdec1 000FE5              ?_lcdCommand 0001  
                postinc0 000FEE                  postinc2 000FDE               ??_pushByte 000C  
__size_of_PulseClockData 002A            ??_digitalRead 0003              ?_kpDebounce 0001  
             _pushNibble 1D28               lcdString@i 0013            ??_lcdPosition 0013  
         ??_PulseEnClock 0007           ??_pwmFrequency 0011               main@pwmVal 0034  
             atraso_ms@i 0003               atraso_ms@j 0005               atraso_ms@k 0006  
         adcRead@ADvalor 0003           __end_of___wmul 1D02            __pidataCOMRAM 1DA4  
         __end_of_kpInit 1C58           __end_of_kpRead 1DC6           __end_of_soInit 1BB6  
         __end_of_pwmSet 188E      __size_of_delayMicro 0002      start_initialization 1BF0  
    __end_of_digitalRead 1344      __size_of_lcdCommand 001E      __size_of_kpDebounce 0136  
    __end_of_lcdPosition 1BF0           adcRead@channel 0001        kpDebounce@oldRead 0053  
      kpDebounce@newRead 0055                 ??___wmul 0005                 ??_kpInit 0007  
               ??_kpRead 0003                 ??_soInit 0007                 ??_pwmSet 0008  
            __pbssCOMRAM 0053              ?_pushNibble 000A               pinMode@pin 0001  
     main@mudancaGradual 0031                _delayMili 1C58         ___lwdiv@dividend 0001  
               ?___aldiv 0001                 ?_adcInit 0001                 ?_adcRead 0001  
               ?___awdiv 0001                 ?___awmod 0009        __size_of_ssdDigit 0058  
         _PulseClockData 1CB2                 ?___lwdiv 0001     __end_of_PulseEnClock 1CB2  
              _lcdString 19FA              _digitalRead 11DA                 ?_lcdChar 0001  
      __size_of_pushByte 005A                 ?_lcdInit 0001     __end_of_pwmFrequency 1D28  
              _atraso_ms 188E              __smallconst 0600                 ?_pinMode 0001  
               ?_soWrite 0007                 ?_ssdInit 0001                 ?_pwmInit 0001  
       ___lwdiv@quotient 0005              _lcdPosition 1BB6         pwmFrequency@freq 000F  
        ___aldiv@divisor 0005          ___aldiv@counter 0009           ___wmul@product 0005  
           ??_delayMicro 0003               ?_delayMili 0001   __end_of_PulseClockData 1CDC  
    __size_of_pushNibble 0026             ??_lcdCommand 000E                main@F2390 004C  
              main@F2388 003C                _ssdUpdate 106E               ?_lcdString 000F  
           ??_kpDebounce 000A        ___wmul@multiplier 0001               ?_atraso_ms 0001  
        lcdCommand@value 000E                main@tecla 0038       __end_of_delayMicro 1DC8  
              copy_data0 1C04       __end_of_lcdCommand 1D8A               pushByte@rs 000A  
           lcdChar@value 000E       __end_of_kpDebounce 147A                 __Hrparam 0000  
               __Lrparam 0000          lcdPosition@line 000F          ?_PulseClockData 0001  
             ?_ssdUpdate 0001         __size_of___aldiv 010C         __size_of_adcInit 0048  
       __size_of_adcRead 0050         __size_of___awdiv 00C4         __size_of___awmod 00B0  
__size_of_pulseEnablePin 0042         __size_of___lwdiv 0074         __size_of_lcdChar 001E  
       __size_of_lcdInit 00B4         __size_of_pinMode 024E          ___lwdiv@divisor 0003  
        ___lwdiv@counter 0007                 __ptext10 19FA                 __ptext11 1D4E  
               __ptext20 1DBC                 __ptext12 1BB6                 __ptext21 1C26  
               __ptext13 164A                 __ptext30 1A50                 __ptext22 1B78  
               __ptext14 1D28                 __ptext31 1AEE                 __ptext23 1344  
               __ptext15 1D6C                 __ptext32 0E20                 __ptext24 1AA0  
               __ptext16 18F2                 __ptext33 16FE                 __ptext25 1C88  
               __ptext17 1B36                 __ptext34 1586                 __ptext26 1CB2  
               __ptext18 1DC6                 __ptext27 0BD2                 __ptext19 1C58  
               __ptext28 11DA                 __ptext29 188E         __size_of_soWrite 004E  
       __size_of_ssdInit 0056         __size_of_pwmInit 001A            __size_of_main 054A  
            ??_delayMili 0003    __size_of_PulseEnClock 002A                 _ssdDigit 194C  
            delayMicro@a 0001                 isa$xinst 000000             soWrite@value 0007  
  __size_of_pwmFrequency 0026                 _pushByte 18F2                pwmSet@val 000B  
            ??_lcdString 0011                 main@leds 001A                 main@slot 0035  
            ??_atraso_ms 0003             ??_pushNibble 000C           lcdPosition@col 0011  
          ?_digitalWrite 0001             _PulseEnClock 1C88        digitalWrite@value 0003  
           _pwmFrequency 1D02                 soWrite@i 0009              ??_ssdUpdate 000A  
     __end_of_pushNibble 1D4E             ?_digitalRead 0001              kpDebounce@i 000D  
         ??_digitalWrite 0005             ___aldiv@sign 000A             ?_lcdPosition 000F  
        digitalWrite@pin 0001  
